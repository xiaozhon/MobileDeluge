<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="21:../ReprogrammerBaseC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x404b9c40"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x405568c0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x405568c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40648780"/></to>
    </wire>
    <wire loc="22:../ReprogrammerBaseC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x404c6010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40558b40"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40558b40"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055db40"/></to>
    </wire>
    <wire loc="23:../ReprogrammerBaseC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4067a1b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40558b40"/></to>
    </wire>
    <wire loc="28:../ReprogrammerBaseC.nc">
      <from><interface-ref name="ChangeChannel" scoped="" ref="0x40525dc8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x408edee8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x408edee8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x408f79b0"/></to>
    </wire>
    <wire loc="36:../ReprogrammerBaseC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40522d00"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40b9f010"/></to>
    </wire>
    <wire loc="9:/opt/tinyos-2.1.2/tos/system/SystemLowPowerListeningC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40b9f010"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40b9fc58"/></to>
    </wire>
    <wire loc="41:../ReprogrammerBaseC.nc">
      <from><interface-ref name="SerialReceive" scoped="" ref="0x40511e08"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x412731f8"/>
      <arguments>
        <value cst="I:136">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:../ReprogrammerBaseC.nc">
      <from><interface-ref name="SerialPacket" scoped="" ref="0x40516f00"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41273550"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41273550"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4126f850"/></to>
    </wire>
    <wire loc="45:../ReprogrammerBaseC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x40509b08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41274810"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../ReprogrammerBaseC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40508680"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41510bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41510bc0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41c9a768"/></to>
    </wire>
    <wire loc="53:../ReprogrammerBaseC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40508de8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4150f310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4150f310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41c9ae00"/></to>
    </wire>
    <wire loc="57:../ReprogrammerBaseC.nc">
      <from><interface-ref name="ReplyReceive" scoped="" ref="0x405105b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x415550a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x415550a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408e4c68"/>
      <arguments>
        <value cst="I:152">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../ReprogrammerBaseC.nc">
      <from><interface-ref name="RetxTimer" scoped="" ref="0x405173b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x415536f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x415536f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407743f0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../ReprogrammerBaseC.nc">
      <from><interface-ref name="ReplyTimer" scoped="" ref="0x40520718"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41550628"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41550628"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407743f0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../ReprogrammerBaseC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40523010"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x407667f8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x407667f8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x407612a8"/></to>
    </wire>
    <wire loc="70:../ReprogrammerBaseC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40529380"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40755f20"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40755f20"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40763988"/></to>
    </wire>
    <wire loc="73:../ReprogrammerBaseC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40527af0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40c8cc48"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40c8cc48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4077f708"/></to>
    </wire>
    <wire loc="99:../ReprogrammerBaseP.nc">
      <from><interface-ref name="sendSerialMessage" scoped="" ref="0x4052eb98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../ReprogrammerBaseP.nc">
      <from><interface-ref name="sendRadioMessage" scoped="" ref="0x4052e358"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40576f28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4055d7f8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x405639a8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x4056b110"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x4056b110"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x40572dc8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x4055b3c0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x4056bb18"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x4056bb18"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x405723d0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4055bda8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x405765a0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x405765a0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x40575990"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x40572dc8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405c5030"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x405723d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405c66b0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x40575990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405b9cc8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40639138"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x406459e8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40639138"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40576f28"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x4058f670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406180b0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x40586b98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405d6090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x405d6090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41609010"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x4058b210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405dcd68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405dcd68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4161b228"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x405922f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405ef7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405ef7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41682538"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x40598c08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40626880"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x4057b750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405c26b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405c26b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41576010"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x40594ea8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405f04f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x405f04f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416850b0"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x4057ac08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405cc5a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405cc5a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41598de8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x4057f2f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405d0170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405d0170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415f2d70"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x40584a98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405d5d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405d5d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41604010"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x405890a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405e7ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405e7ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416650b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x405c66b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41580c08"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x40578a98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405ca250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405ca250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41590c08"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x4057d210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x405cfe48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x405cfe48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415edc08"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x4058e8e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405e1ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405e1ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415ff010"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x40590210"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405ed4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405ed4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4167d538"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x40599750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4061e880"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x4058dce8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405dda80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x405dda80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4161fde0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x4057c2f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405c3330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405c3330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4157aa88"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40582930"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405c9f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405c9f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4158ba88"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x4059a2f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40616880"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x40581dc8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405d2e78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405d2e78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415a9938"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x40585670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405d69e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405d69e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416089e8"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x4058bc08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405e9790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405e9790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41669c08"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x40592ce8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405ee170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405ee170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41680010"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x4057a210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405c1030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405c1030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415759e8"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x40579670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405ccef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x405ccef8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415937f8"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x4057fce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405d0ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405d0ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415f07f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x405834b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x405e2790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x405e2790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416039e8"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x40589a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405e64f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405e64f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41664a88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405c5030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4157e6c0"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x405774b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405caba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405caba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4158e6c0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x4057dc08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405ce7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405ce7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415eb6c0"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x40590c08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405ede48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405ede48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4167b010"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x405860a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405d76f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405d76f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4160b538"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x4058c750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405dc410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405dc410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4161d7f8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x405938e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405f0e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405f0e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41684a88"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x40598210"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4061b0b0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x4057cce8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x405c3c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x405c3c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41578538"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x405813d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405c8890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405c8890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41589538"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x405944b0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405e3b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405e3b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416876c0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x40580830"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405d17f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x405d17f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415a73b0"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x405840a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405d5410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405d5410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41606538"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x4058a670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x405e7170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x405e7170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416676c0"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x40591750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x405eeac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x405eeac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4167f9e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405b9cc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41531228"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x405780a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405cb860"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405cb860"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41591228"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x4057e750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405cf4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405cf4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415ee228"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x40583ea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405e1170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405e1170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41601538"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x4059ace8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406210b0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x4058d2f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405dd128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405dd128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41620418"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x40587670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405db170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405db170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415e90b0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x40571830"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405c5988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405c5988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4157b0b0"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x40577f28"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x405c95d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x405c95d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4158c0b0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40639540"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40659910"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40556cc8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x413b69f8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40556cc8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x413b24c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40556cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4136c060"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40556cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x412ba010"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40556cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411cf310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40556cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41ac9a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40556cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x419e1040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40556cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x419b4d40"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40556cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40fda558"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40556cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41911f18"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40556cc8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40cc4590"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40556cc8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4187f728"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40556cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b26178"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40556cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41821708"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40556cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x417dfcb8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40556cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40785c28"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40556cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40763468"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40648b18"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4041f528"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4041f528"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4048e3f0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40667100"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40d7e698"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40667100"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40cc5f10"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40667100"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40649e08"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40649e08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4063cd40"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40667508"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40556cc8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40653ea0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41475440"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40653ea0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41052dc8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40653ea0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e4e480"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40653740"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40659cc0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x406459e8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x406519c0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40645db8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40653ea0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x40651de8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x4057c2f0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4064e828"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40645db8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4048ec28"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x4048d8a8"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x4047d470"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x404a2f10"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x407e8f20"/></to>
    </wire>
    <wire loc="56:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x4069fa28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f1f550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x40f1f550"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f1a788"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x4069fa28"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x410bd1f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x410bd1f8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f1a788"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x4069fa28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x410f1e30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x410f1e30"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f1a788"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40689120"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410eee28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410eee28"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f161b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40689120"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410e7af0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410e7af0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f161b8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../Deluge/DelugeC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40689120"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410e57f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410e57f8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f161b8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../Deluge/DelugeC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x406898c8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4067a1b8"/></to>
    </wire>
    <wire loc="78:../../Deluge/DelugeC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x411b0338"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x405568c0"/></to>
    </wire>
    <wire loc="79:../../Deluge/DelugeC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x411b0680"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4067a1b8"/></to>
    </wire>
    <wire loc="83:../../Deluge/DelugeC.nc">
      <from><interface-ref name="DisseminationStdControl" scoped="" ref="0x411ff3c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x411b35a0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x411b35a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4112c9d8"/></to>
    </wire>
    <wire loc="84:../../Deluge/DelugeC.nc">
      <from><interface-ref name="ObjectTransfer" scoped="" ref="0x411ff850"/></from>
      <to><interface-ref name="ObjectTransfer" scoped="" ref="0x4068bcb0"/></to>
    </wire>
    <wire loc="55:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ObjectTransfer" scoped="" ref="0x4068bcb0"/></from>
      <to><interface-ref name="ObjectTransfer" scoped="" ref="0x406a3010"/></to>
    </wire>
    <wire loc="85:../../Deluge/DelugeC.nc">
      <from><interface-ref name="NetProg" scoped="" ref="0x411fe610"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x411a8228"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><interface-ref name="NetProg" scoped="" ref="0x411a8228"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x411d0ed0"/></to>
    </wire>
    <wire loc="86:../../Deluge/DelugeC.nc">
      <from><interface-ref name="RadioSplitControl" scoped="" ref="0x411fe010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408e1980"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408e1980"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408fd0e0"/></to>
    </wire>
    <wire loc="87:../../Deluge/DelugeC.nc">
      <from><interface-ref name="StorageMap" scoped="" ref="0x411fed90"/></from>
      <to><interface-ref name="StorageMap" scoped="" ref="0x40f12758"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="StorageMap" scoped="" ref="0x40f12758"/></from>
      <to><interface-ref name="StorageMap" scoped="" ref="0x40f10ae8"/></to>
    </wire>
    <wire loc="88:../../Deluge/DelugeC.nc">
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x411fa4d8"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x41259cc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x41259cc0"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x4121c910"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../Deluge/DelugeC.nc">
      <from><function-ref name="storageReady" scoped="" ref="0x41219010"/></from>
      <to><function-ref name="storageReady" scoped="" ref="0x411fc5c0"/></to>
    </wire>
    <wire loc="90:../../Deluge/DelugeC.nc">
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x411f9810"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4127ce48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4127ce48"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41257ef8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../Deluge/DelugeC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x411f9c60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4125bba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4125bba8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="101:../../Deluge/DelugeC.nc">
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x41515538"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x411b42d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x411b42d0"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x41a0be50"/></to>
    </wire>
    <wire loc="56:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x406e8950"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x4069fa28"/></to>
    </wire>
    <wire loc="57:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x406e7370"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40689120"/></to>
    </wire>
    <wire loc="58:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="DelugePageTransfer" scoped="" ref="0x406abb38"/></from>
      <to><interface-ref name="DelugePageTransfer" scoped="" ref="0x406a8cd8"/></to>
    </wire>
    <wire loc="58:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="DelugePageTransfer" scoped="" ref="0x406a8cd8"/></from>
      <to><interface-ref name="DelugePageTransfer" scoped="" ref="0x406fc4b8"/></to>
    </wire>
    <wire loc="59:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Crc" scoped="" ref="0x406b6150"/></from>
      <to><interface-ref name="Crc" scoped="" ref="0x4088c010"/></to>
    </wire>
    <wire loc="68:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendAdvMsg" scoped="" ref="0x406b6610"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40884ed8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40884ed8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41713ea0"/></to>
    </wire>
    <wire loc="69:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveAdvMsg" scoped="" ref="0x406b6d98"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f062c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40f062c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408e4c68"/>
      <arguments>
        <value cst="I:80">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendReqMsg" scoped="" ref="0x406f7b58"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f01778"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40f01778"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4192b698"/></to>
    </wire>
    <wire loc="71:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveReqMsg" scoped="" ref="0x406f7010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40efe748"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40efe748"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408e4c68"/>
      <arguments>
        <value cst="I:81">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="SendDataMsg" scoped="" ref="0x406f73f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40efcc30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40efcc30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4195f2f0"/></to>
    </wire>
    <wire loc="73:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="ReceiveDataMsg" scoped="" ref="0x406e7be0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ef8ba0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40ef8ba0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408e4c68"/>
      <arguments>
        <value cst="I:82">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x406fdaa0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40efb9a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40efb9a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4195e040"/></to>
    </wire>
    <wire loc="75:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x406f4180"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x406898c8"/></to>
    </wire>
    <wire loc="77:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x406ae4c8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40689120"/></to>
    </wire>
    <wire loc="80:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x406a3638"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x407667f8"/></to>
    </wire>
    <wire loc="81:../../Deluge/ObjectTransferC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406a3b90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f26a38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40f26a38"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407743f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:../../Deluge/ObjectTransferP.nc">
      <from><interface-ref name="signalObjRecvDone" scoped="" ref="0x406c17b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40704d60"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x406e8950"/></to>
    </wire>
    <wire loc="60:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40707848"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x406e7370"/></to>
    </wire>
    <wire loc="62:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="ReceiveDataMsg" scoped="" ref="0x407030f0"/></from>
      <to><interface-ref name="ReceiveDataMsg" scoped="" ref="0x406e7be0"/></to>
    </wire>
    <wire loc="63:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="ReceiveReqMsg" scoped="" ref="0x407034f8"/></from>
      <to><interface-ref name="ReceiveReqMsg" scoped="" ref="0x406f7010"/></to>
    </wire>
    <wire loc="64:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="SendDataMsg" scoped="" ref="0x407038e0"/></from>
      <to><interface-ref name="SendDataMsg" scoped="" ref="0x406f73f8"/></to>
    </wire>
    <wire loc="65:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="SendReqMsg" scoped="" ref="0x40702098"/></from>
      <to><interface-ref name="SendReqMsg" scoped="" ref="0x406f7b58"/></to>
    </wire>
    <wire loc="67:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40702788"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406fdaa0"/></to>
    </wire>
    <wire loc="68:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407014d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406f9be8"/></to>
    </wire>
    <wire loc="71:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40711da8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x407667f8"/></to>
    </wire>
    <wire loc="72:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40701b08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40767330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40767330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407743f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="BitVecUtils" scoped="" ref="0x40704518"/></from>
      <to><interface-ref name="BitVecUtils" scoped="" ref="0x4076e150"/></to>
    </wire>
    <wire loc="75:../../Deluge/DelugePageTransferC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4070f260"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x406f4180"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40755a00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40763468"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x407743f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407823f8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x407823f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40845600"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40785c28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4077edd8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x4077f708"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x408620a0"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4077edd8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40824418"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40867968"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4078f720"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40834a48"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x40789610"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x40789610"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40824850"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40862a38"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40787010"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40787010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40821340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40821340"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x416f5930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40824418"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x416f8a88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40824850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x416f8ec0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x416f3b00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407e0540"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407e0540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407ed5f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x416f1d48"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407de878"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x407de878"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407ea8d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x416f0748"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407dc418"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407dc418"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407e9418"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x416ed240"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x407da010"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x407da010"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x407e7398"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x408324d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40864bc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41713ea0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41758550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40887580"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41762580"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41762580"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4175b070"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40887c18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41762c18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41762c18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4175b708"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40f09870"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41761870"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41761870"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4175a330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4175b070"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ddd90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4175b708"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x4175a330"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408de230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubAMSend" scoped="" ref="0x41758c38"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4175e998"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x4175e998"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41753af8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Lpl" scoped="" ref="0x41757330"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408f3ed0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x408f3ed0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408f8c18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x417578e8"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40b9f010"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408ddd90"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408f9260"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408f9950"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408de230"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408f8690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41750260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408b0ef8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x417508f8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408b0ef8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408d1da0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x408d0598"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x408e42a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x408e42a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x408fd9b8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x408d0c40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408cf850"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ddd90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x408cff28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x408e8370"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408fd0e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40919140"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x408dda38"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x408fa100"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x408fa100"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x409171b0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408f9260"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40915110"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x408fd9b8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40919a18"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x408e0310"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x408fca30"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x408fca30"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40918b10"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x408f8c18"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40925978"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408e4c68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408fc398"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408fc398"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40918478"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408f8690"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409253f0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x408ed7d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x408f7298"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x408f7298"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40924010"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x408f9950"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40916380"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x408f79b0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40924728"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x40902920"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40908a28"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40908a28"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409328c0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409012e8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40904488"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40904488"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409303a0"/></to>
    </wire>
    <wire loc="215:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40919140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40bbb348"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x4090b8a0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40935580"/></to>
    </wire>
    <wire loc="305:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40935580"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40cad1c0"/></to>
    </wire>
    <wire loc="270:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409303a0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c67010"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x409171b0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40a25d08"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40915110"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40a26690"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40919a18"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40a26dc0"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40918b10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40a25948"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x4090c530"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x4091d218"/></to>
    </wire>
    <wire loc="303:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x4091d218"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40cafe18"/></to>
    </wire>
    <wire loc="216:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40925978"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40bd48c8"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40918478"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a25568"/></to>
    </wire>
    <wire loc="269:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409328c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40c877d8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40906e70"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40934cd8"/></to>
    </wire>
    <wire loc="307:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40934cd8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40cd0138"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x4090f0e0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40924e18"/></to>
    </wire>
    <wire loc="304:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40924e18"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40cd3960"/></to>
    </wire>
    <wire loc="248:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409253f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c26b18"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x408fa800"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x409178b0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x409178b0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40a23128"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40924010"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40b4f568"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40916380"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a279e0"/></to>
    </wire>
    <wire loc="224:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40924728"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40c04860"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40906978"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409347e0"/></to>
    </wire>
    <wire loc="306:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409347e0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40cd2c00"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x408faee0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40916010"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40916010"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40a23508"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40bbb348"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41864b40"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40cad1c0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40cc1d18"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x40914778"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40a9a488"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x40926eb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a2f420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40a2f420"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x417db010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40a25d08"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x417b87b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40a26dc0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x417b9880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Snoop" scoped="" ref="0x40a25948"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x417b83f0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x4091f098"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40b08170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40b08170"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x417f76b0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x4091fbf8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40a743b0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40cafe18"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40cc29b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40bd48c8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4185e150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40a26690"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x417b9150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40a25568"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x417b8010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40c877d8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x418e38f8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40cd0138"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40d551e0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40cd3960"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40ce7520"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x40929ab8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40a74a48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40a23128"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x417b8b90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketLink" scoped="" ref="0x40b4f568"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x40b47910"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40c04860"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x4187d328"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40a279e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x417ba4d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c67010"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x418e4108"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x40914328"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40a9a170"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40cd2c00"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ce5768"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40a23508"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x417b7010"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4096ee20"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40b0a658"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40b0a658"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x417febc0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x409693c0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4099f3d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x4096d010"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40c877d8"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x40966578"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40caf478"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40caf478"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40cc2010"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4099fc88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40cd0b98"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40cd0b98"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40d58698"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a22860"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x40948778"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a22030"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x40a3b538"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40a22528"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x40a93748"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40a23880"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x40a93a80"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a32010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a2f420"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a3ba60"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x40a93250"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40a9a7d0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40b0a658"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a989e8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40a94228"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40a98ee0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40a94720"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a98250"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40a94a58"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ab5280"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b04388"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40b04388"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41824d90"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40ab5778"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40b4f250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40b4f250"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40b48938"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40ab5ab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40b08b88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40b08b88"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x417f6150"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40b07368"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40b4fc00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40b4fc00"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40b48c70"/></to>
    </wire>
    <wire loc="181:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40b52668"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x40938278"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b04ca8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b50d38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40b50d38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40b48440"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40b473f8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c26b18"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b48440"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bbb920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40bbb920"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41860170"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b48938"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bbbe18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40bbbe18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41860668"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40b48c70"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40bd4150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40bd4150"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x41860980"/></to>
    </wire>
    <wire loc="202:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40bd24f0"/></from>
      <to><interface-ref name="LowPowerListeningConfig" scoped="" ref="0x40960280"/></to>
    </wire>
    <wire loc="206:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bd29c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c26b18"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40bd4ed0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40bcda58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40bcda58"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4187f150"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bd34c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c04050"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40c04050"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4187fa60"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bd39b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c04548"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40c04548"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4187d010"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40bd3cf0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40c86e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40c86e40"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x418e0010"/></to>
    </wire>
    <wire loc="221:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40c025b0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40bfd538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x40bfd538"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x418b51e8"/></to>
    </wire>
    <wire loc="222:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40c02a88"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40b04860"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40b04860"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x41821310"/></to>
    </wire>
    <wire loc="223:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40c04d68"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40cbb940"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x40cbb940"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40cb8760"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b52250"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40bfda10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40bfda10"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x418b56c0"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40c29e20"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x4094f118"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bfde58"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40c26248"/></to>
    </wire>
    <wire loc="239:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c29370"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40c26720"/></to>
    </wire>
    <wire loc="240:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40c29768"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4099f3d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x40c58988"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40ca8448"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40c59950"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4099f3d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40c58030"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x4093c6e8"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c59060"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40c483f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x40c483f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c6d330"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c59558"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40c488c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40c488c8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c6d828"/></to>
    </wire>
    <wire loc="259:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40c6c828"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x409526f8"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c6d330"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40cba150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x40cba150"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40cb7010"/></to>
    </wire>
    <wire loc="261:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c6d828"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40cba628"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40cba628"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40cb7508"/></to>
    </wire>
    <wire loc="262:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x40c6dc40"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40caf010"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40caf010"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40cc3b58"/></to>
    </wire>
    <wire loc="267:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40c856d0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40cd0138"/></to>
    </wire>
    <wire loc="268:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40c83010"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40ca8a10"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x40c837a8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40ca8448"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40ca7280"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40caf478"/></to>
    </wire>
    <wire loc="286:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40cb54f0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x409526f8"/></to>
    </wire>
    <wire loc="287:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40cb7010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40cb0610"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40cb0610"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40cc31b0"/></to>
    </wire>
    <wire loc="288:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40cb7508"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40cb0b68"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40cb0b68"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40cc3708"/></to>
    </wire>
    <wire loc="289:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40cb8760"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40cb3e10"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40cb3e10"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40cc4910"/></to>
    </wire>
    <wire loc="301:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40ccd650"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x409412d0"/></to>
    </wire>
    <wire loc="302:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40ccc010"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40c877d8"/></to>
    </wire>
    <wire loc="309:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40ccb7d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40ca8448"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40ccbe68"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40ca8448"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40cca538"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40ca8448"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40ccab58"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4099f3d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4099f3d0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4176d180"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4176d978"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4099fc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Tasklet" scoped="" ref="0x4176a2e8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x409bfe18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x417b6c40"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40a13010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x417b7388"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40a23880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x417b7b20"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40a22030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x417b6030"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40a22528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Config" scoped="" ref="0x417b6368"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40a22860"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40a2fb60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x417db750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40a78010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x417dbb58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x417da030"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40a784c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x417da458"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x417dd010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x417daa50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x417f68f8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40a13010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x417f6ed0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40b07368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Neighborhood" scoped="" ref="0x418209c0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40b2b540"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40b2b540"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40b26510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4181f070"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4181e4c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4181e4c0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40b25010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x41821a70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40b04ca8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x41820010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40b52250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x41820408"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40b52668"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x40b46010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40b473f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubControl" scoped="" ref="0x4185e758"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40bd4ed0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x4185ed30"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40bd34c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x4185d250"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40bd39b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x4185d588"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40bd3cf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Config" scoped="" ref="0x4185c250"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40bd24f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4185dd00"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bd29c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4185c7b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41856b88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41856b88"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407743f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4185a9f0"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40b9f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x41858040"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40bba200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="transition" scoped="" ref="0x41858c58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x4187d830"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40c04d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Tasklet" scoped="" ref="0x4187c010"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x409bfe18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x4187c5c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40c025b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4187caa0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40c02a88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="sendTask" scoped="" ref="0x4187b320"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x4187b758"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="deliverTask" scoped="" ref="0x4187ced8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x418b5b08"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40bfde58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Config" scoped="" ref="0x418b4ed8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40c29e20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x418b4030"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c29370"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x418b4428"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40c29768"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Random" scoped="" ref="0x418b4ac0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x407667f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x418b24e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c54e40"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40c47c50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40c48cc0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40c6dc40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x40c53c20"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40c6ea80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40c47150"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40c6c090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40c478e8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40c6c828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareReceive" scoped="" ref="0x40c53908"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40c6e748"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareSend" scoped="" ref="0x40c53430"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40c6e250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x418de030"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40c83010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x418e0e40"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40c856d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x418df798"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40c8cc48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x418e07d8"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x40c837a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40cbcb50"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40cb9938"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40cbaa20"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40cb7920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40cbae18"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40cb7d38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40cb95d0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40cb54f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareReceive" scoped="" ref="0x40cbb628"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40cb8428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareSend" scoped="" ref="0x40cbb150"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40cb9f10"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40d58698"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e55c88"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40cab598"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40ce8100"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40d551e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40e85570"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40cdcb80"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40ccd650"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40cda368"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40ccb7d0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40cdaa00"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x40ccbe68"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40cd70e0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x40cca538"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40cd78e8"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x40ccc010"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40cdc218"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40d551e0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40cd57b0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40ccab58"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40ce5b80"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x40d5b1e0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x40d5b1e0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4057ac08"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40ce4698"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x40d5bc00"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40d5bc00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d6d588"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40ce0d10"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40d5a380"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40d5a380"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40d6b5f0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40ce33d0"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x40d5a9f8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40d5a9f8"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x405813d0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40ce3db8"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40d594a0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40d594a0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x4057b750"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40cdbef8"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40d59e88"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40d59e88"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40d7e010"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40cd5190"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x409bfe18"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40cd9748"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40eb5010"/></to>
    </wire>
    <wire loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x40d291e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40e55c88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x418f6678"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x40d6b5f0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x40d6cdb0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40e85570"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40ebcf18"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x40d7cae0"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x40583ea8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x40d76598"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x40584a98"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40d78d40"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40df7b28"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40df7b28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40e15258"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40d94dc8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40d90450"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40d6b248"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40d6ca28"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40d53570"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d6c6c8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d6d588"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d90b80"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40d8c8c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e02ca0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40e02ca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4190e258"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40da9010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40e01890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40e01890"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4190eda0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40d7fbc8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40d919b8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40d919b8"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40dd5d50"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40da9490"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x404a2148"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40d97be0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40dcc4b8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x404a2148"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40dceb88"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4057ac08"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40dd0578"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x40579670"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40dcd010"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x405780a0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40dcd9f8"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x40578a98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40e01488"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x4190e998"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4190d2f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40e01d40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x4190d720"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x4190f268"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x4190dd18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40df2e10"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40e16530"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40dfc4a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40e18230"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40df0d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40e12128"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40df0d50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40e11d20"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40df0d50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40e0e950"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x419500a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40dfc4a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x4194e308"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40df0d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40e4e868"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40dfc4a8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40eba8c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e9ee60"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40ebd0e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e82688"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40e82688"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e7ce90"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ea1078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40dfc4a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f065d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ddd90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f06c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x4192b698"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4197de88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f01e10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4192bd30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4192bd30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4197f898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f004d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4192a3f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4192a3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4197e010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40eff170"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41929010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41929010"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4197ec08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4197f898"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ddd90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4197e010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x4197ec08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408de230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubAMSend" scoped="" ref="0x4197c580"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4197f200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x4197f200"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41974420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Lpl" scoped="" ref="0x4197cc38"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408f3ed0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4197a230"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40b9f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41974ae8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408b0ef8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41973230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40efea60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ddd90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40efd150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x4195f2f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41955710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40efb310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4195f988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4195f988"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41958230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4195e040"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x419588c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40efa5d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4195ec38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x4195ec38"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x419564f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41958230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ddd90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x419588c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x419564f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408de230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubAMSend" scoped="" ref="0x41955df8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4195baf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x4195baf8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x419acb78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Lpl" scoped="" ref="0x419544f0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408f3ed0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41954aa8"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40b9f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x419a9260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408b0ef8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x419a98f8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40ef8eb8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ddd90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40ef7580"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40f1fbe8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41994948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41994948"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41996df0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x40f1a788"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f11aa8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40f161b8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f102c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f40e88"/></from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x40f10ef8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x410d24d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x410d24d8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f69920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x40f10ef8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x410cb158"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x410cb158"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f69920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x40f10ef8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x410cae20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x410cae20"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f69920"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockRead" scoped="" ref="0x40f10ef8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x410c8ab0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x410c8ab0"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f69920"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x40f40668"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f70d48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x40f70d48"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f6dde0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x40f40668"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410cc9c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410cc9c8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f6dde0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x40f40668"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410ca6a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410ca6a8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f6dde0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="SubBlockWrite" scoped="" ref="0x40f40668"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x410c8338"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x410c8338"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f6dde0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40f73298"/></from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x40f6aac0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40f66298"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x40f6aac0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40f669f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40fdcb50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:/opt/tinyos-2.1.2/tos/chips/at45db/WireBlockStorageP.nc">
      <from><interface-ref name="At45db" scoped="" ref="0x40f5cdd8"/></from>
      <to><interface-ref name="At45db" scoped="" ref="0x40faa680"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="At45db" scoped="" ref="0x40faa680"/></from>
      <to><interface-ref name="At45db" scoped="" ref="0x40fda8b0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40fd7250"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4109e470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4109e470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x419b0dd8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40fdcb50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41097908"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41097908"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x419b0290"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40fd7958"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4109eb08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x4109eb08"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x419af4d0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="HplAt45db" scoped="" ref="0x40fc6c30"/></from>
      <to><interface-ref name="HplAt45db" scoped="" ref="0x41019460"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="HplAt45db" scoped="" ref="0x41019460"/></from>
      <to><interface-ref name="HplAt45db" scoped="" ref="0x41017118"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40fd21f8"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40eb5010"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <from><interface-ref name="taskSuccess" scoped="" ref="0x40fefdc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <from><interface-ref name="taskFail" scoped="" ref="0x40feee10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41016500"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41055450"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41055450"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4106c010"/></to>
    </wire>
    <wire loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="FlashSpi" scoped="" ref="0x41016bb8"/></from>
      <to><interface-ref name="FlashSpi" scoped="" ref="0x41055ba8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="FlashSpi" scoped="" ref="0x41055ba8"/></from>
      <to><interface-ref name="FlashSpi" scoped="" ref="0x4104f210"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <from><interface-ref name="HplAt45dbByte" scoped="" ref="0x41016ed0"/></from>
      <to><interface-ref name="HplAt45dbByte" scoped="" ref="0x41052010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="HplAt45dbByte" scoped="" ref="0x41052010"/></from>
      <to><interface-ref name="HplAt45dbByte" scoped="" ref="0x4104f5b0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Select" scoped="" ref="0x4104fd48"/></from>
      <to><interface-ref name="PortA3" scoped="" ref="0x40571830"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Clk" scoped="" ref="0x4104e738"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x405834b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="In" scoped="" ref="0x4104dbc0"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x40585670"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="Out" scoped="" ref="0x4104d1f0"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x405840a0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x4104c7c0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40eb5010"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <from><interface-ref name="avail" scoped="" ref="0x41072298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="granted" scoped="" ref="0x4106cb00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x4109e068"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x419b09d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x419af990"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4109d010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x419afdb8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x419b2090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x41a0a030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40f66298"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x40f6aac0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40f669f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40fdcb50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40f66298"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x40f6aac0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40f669f8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40fdcb50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="At45dbVolume" scoped="" ref="0x40f66298"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="At45dbVolume" scoped="" ref="0x40f6aac0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40f669f8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40fdcb50"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bb948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410bb948"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x419e0370"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x410bc8c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x410b94b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x410b94b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x419e0eb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x410b90a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x419e0ab0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x419df3a8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x410b9960"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x419df7d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x419e1378"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x419dfdc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410bd890"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41a28e30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41a28e30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41a28320"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410f0510"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41a21358"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41a21358"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41a22828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410ed5f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41a1c820"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41a1c820"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41a1ec40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410e6310"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41a16d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41a16d30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41a16220"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x410e4010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41a10270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41a10270"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41a11748"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x41158450"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x41a0b030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x41129210"/>
      <arguments>
        <value cst="I:56832">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x41a68810"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x41128100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41a0cb60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x411245c0"/>
      <arguments>
        <value cst="I:56832">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x41157320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x41a67010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40558b40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="changedTask" scoped="" ref="0x41a67c28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4112c9d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41128c48"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x41121450"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x41129210"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x41120010"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x411245c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x41120ae0"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x41128100"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41120f18"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41123af8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41123af8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a58b48"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4111f610"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41163010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x41163010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408e4c68"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x4111f9f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41161a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41161a28"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a8e600"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x4111e238"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4115d010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x4115d010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408e4c68"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4111e580"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40bba200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41a58b48"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a4b230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41167230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41a54230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41a54230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41a4ecb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x411678c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41a548c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41a548c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41a4d3f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x411664f0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41a534f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41a534f0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41a4c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41a4ecb0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ddd90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41a4d3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41a4c010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408de230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubAMSend" scoped="" ref="0x41a4b918"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a4e618"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41a4e618"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a43690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Lpl" scoped="" ref="0x41a4a010"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408f3ed0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41a4a5c8"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40b9f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41a43d58"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408b0ef8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41a424d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41163328"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ddd90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x411639c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41a8e600"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a85e88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41160150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41a8ec98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41a8ec98"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41a87898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x411607e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41a8d3f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41a8d3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41a86010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x4115f410"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41a8c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41a8c010"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41a86c08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41a87898"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ddd90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41a86010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41a86c08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408de230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubAMSend" scoped="" ref="0x41a83580"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a87200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41a87200"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a7c420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Lpl" scoped="" ref="0x41a83c38"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408f3ed0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41a82230"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40b9f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41a7cae8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408b0ef8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41a7b230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4115d328"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ddd90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4115d9c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x41157320"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x411b6278"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x411b6278"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x41ac9e30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41ac85d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41ac1508"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41ac1508"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407743f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Random" scoped="" ref="0x41ac4aa8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x407667f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Changed" scoped="" ref="0x41ac4170"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x41abcd30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pending" scoped="" ref="0x41ac57b8"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x41abd520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x41ac4ea0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40558b40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="timerTask" scoped="" ref="0x41ac3b00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><interface-ref name="IFlash" scoped="" ref="0x411cf750"/></from>
      <to><interface-ref name="InternalFlash" scoped="" ref="0x411d5e78"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><interface-ref name="Crc" scoped="" ref="0x411cfb68"/></from>
      <to><interface-ref name="Crc" scoped="" ref="0x4088c010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x411ce010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40558b40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <from><function-ref name="setAmAddress" scoped="" ref="0x411cd010"/></from>
      <to><function-ref name="setAmAddress" scoped="" ref="0x40a13e00"/></to>
    </wire>
    <wire loc="97:../../Deluge/DelugeP.nc">
      <from><interface-ref name="taskRequest" scoped="" ref="0x411f34e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x411c4848"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407743f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x4121c910"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x412157f0"/></to>
    </wire>
    <wire loc="49:../../Deluge/DelugeMetadataC.nc">
      <from><function-ref name="storageReady" scoped="" ref="0x41212de0"/></from>
      <to><function-ref name="storageReady" scoped="" ref="0x41219010"/></to>
    </wire>
    <wire loc="50:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x41215c48"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x405568c0"/></to>
    </wire>
    <wire loc="57:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x41214308"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x412170d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x412170d8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f1a788"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x41214308"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x4122ece8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x4122ece8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f1a788"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x41214308"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x4122c8a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x4122c8a8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f1a788"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockRead" scoped="" ref="0x41214308"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x4122a4d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x4122a4d0"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f1a788"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41214d28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41227030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41227030"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f161b8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41214d28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41225d20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41225d20"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f161b8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41214d28"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x412239b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x412239b8"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f161b8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../Deluge/DelugeMetadataC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41214d28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x412216a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x412216a0"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f161b8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41217770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41ae64a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41ae64a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41ae7970"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4122d3f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41ae1948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41ae1948"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41ae3db8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4122b010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41adbdc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41adbdc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41adb2b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4122ab68"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41ad5270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41ad5270"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41ad6748"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x412277a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41ad06d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41ad06d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41ad1b48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x412244d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41acabf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41acabf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41aca0e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41222150"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41b261b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b261b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41b27690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41221e18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41b206d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b206d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41b22ba0"/></to>
    </wire>
    <wire loc="46:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41257ef8"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41254c98"/></to>
    </wire>
    <wire loc="52:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41251508"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41253888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41253888"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f161b8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41251508"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41241520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41241520"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f161b8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41251508"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x4123f250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x4123f250"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f161b8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4124f010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x41252030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41252030"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41b17cf8"/></to>
    </wire>
    <wire loc="57:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4124f010"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x41241c98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41241c98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41b11168"/></to>
    </wire>
    <wire loc="58:../../Deluge/DelugeVolumeManagerC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4124f010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x4123f9c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4123f9c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41b0b538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b17cf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41b171e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b11168"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41b12640"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b0b538"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41b0da08"/></to>
    </wire>
    <wire loc="43:../../Deluge/SerialStarterC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x41460e20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41279f20"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x41279f20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x412ba3a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x412ba3a8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x412b22c8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41274810"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41270180"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x412731f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x412708c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41272930"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4126fee8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41273c40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41270be8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x412ba010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x412b7f18"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x412b4e80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x41272e68"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4127e430"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x412b8288"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4127eae8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x412bac68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x412b4978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x41468728"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x412b8288"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4134e4f8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x412bac68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4134e138"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x4134ec88"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x412b4978"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x412ab7b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x412b4e80"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4134dcc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x412b4e80"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41383eb8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x412b4e80"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4134d230"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x412aabd8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x4134d708"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x412ada80"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x412a7f10"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x41347238"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x412a9500"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41349e48"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x41349e48"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4136fb10"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x41383630"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x413742f8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x413742f8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x41370490"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x412f97a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x412d7a18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x412fa010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x412f7428"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x4134b970"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x4134bda8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x4136f110"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x41370010"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x41370010"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x4136c7b0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x41370490"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x4136cbc8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4136fb10"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4136c398"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x41370f08"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41408620"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x41408620"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41402a10"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x41388a70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41370f08"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x4136b510"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x413b9640"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x413b9640"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x413b6e48"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x4136b948"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x413b9b50"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x413b9b50"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x413b33a8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x4136bd80"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x413b8088"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x413b8088"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x413b38c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x413b7760"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x413b0390"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x413b8c98"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x413b2910"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x413b7268"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x413b2e40"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x413af010"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40653740"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x413af750"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x404a2148"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x4146ccd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41401088"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x41401088"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41476a68"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41471c48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41400aa0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41400aa0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x413f2230"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x413fbdb0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x413ef530"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x413fab28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x413ee258"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x413f8d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x41431128"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x413f8d50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x41430d20"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x413f8d50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x4142d950"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41475828"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41400aa0"/></to>
    </wire>
    <wire loc="46:../../Deluge/AutoStarterC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4145de58"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41460e20"/></to>
    </wire>
    <wire loc="47:../../Deluge/AutoStarterC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4145dac0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x405568c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41b7e2e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41b72688"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41b72688"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f1a788"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41b7e2e0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41b70010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41b70010"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f1a788"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41b7e2e0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41b6f8b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41b6f8b8"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f1a788"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41b7e2e0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x41bd1230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockRead" scoped="" ref="0x41bd1230"/></from>
      <to><interface-ref name="BlockRead" scoped="" ref="0x40f1a788"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41b7ea20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41bd0b88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41bd0b88"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f161b8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41b7ea20"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41bce568"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41bce568"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f161b8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41b7ea20"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41bcb010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41bcb010"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f161b8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41b7ea20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x41bcaa78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BlockWrite" scoped="" ref="0x41bcaa78"/></from>
      <to><interface-ref name="BlockWrite" scoped="" ref="0x40f161b8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b7d230"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41b73640"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b73640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41b7d8c8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x410bc8c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimeoutTimer" scoped="" ref="0x41b7b7d8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41b779d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41b779d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407743f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SerialAMSender" scoped="" ref="0x41b7dce0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41b83200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41b83200"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41bc0e00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SerialAMReceiver" scoped="" ref="0x41b7b410"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41b80030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x41b80030"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x412731f8"/>
      <arguments>
        <value cst="I:83">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x41b799f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40558b40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41b83898"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41273550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41b82010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41273c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41b82c08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41272930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41bbd500"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41495448"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41bbdb98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41273c40"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41495448"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41494b10"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x414932f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41274810"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x414939a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41273c40"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x414925b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41273550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x41492c88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x41491190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41b80348"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41273550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41b809e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41273c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b72d20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41c376d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41c376d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41c38b30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41b706a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41c31b40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41c31b40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41c31030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41bd2010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41c2b010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41c2b010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41c2c4c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41bd18c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41c254a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41c254a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41c27970"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41bcf318"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41c20948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41c20948"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41c22dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41bcece0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41c1beb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41c1beb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41c1b3a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41bcb788"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41c144a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41c144a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41c15970"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41bc9230"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41c0f9f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41c0f9f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="VolumeId" scoped="" ref="0x41c11ec0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelayTimer" scoped="" ref="0x41c67200"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41c6c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41c6c010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x407743f0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SerialAMSender" scoped="" ref="0x41c686a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41c0a0a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41c0a0a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41c58878"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SerialAMReceiver" scoped="" ref="0x41c68d60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41c08de8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x41c08de8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x412731f8"/>
      <arguments>
        <value cst="I:84">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x41c64870"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40558b40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x41c69d00"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x41515538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NetProg" scoped="" ref="0x41c64478"/></from>
      <to><interface-ref name="NetProg" scoped="" ref="0x411a8228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ObjectTransfer" scoped="" ref="0x41c63c88"/></from>
      <to><interface-ref name="ObjectTransfer" scoped="" ref="0x4068bcb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="StorageMap" scoped="" ref="0x41c63568"/></from>
      <to><interface-ref name="StorageMap" scoped="" ref="0x40f12758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x41c63890"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x41c604e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeMetadata" scoped="" ref="0x41c604e8"/></from>
      <to><interface-ref name="DelugeMetadata" scoped="" ref="0x4121c910"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41c62310"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41c5f090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41c5f090"/></from>
      <to><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41257ef8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41c62708"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41c5fc08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x41c5fc08"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><function-ref name="stop" scoped="" ref="0x41c62de8"/></from>
      <to><function-ref name="stop" scoped="" ref="0x411fc940"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41c0a738"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41273550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41c0add0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41273c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41c09a30"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41272930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41c55010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41495448"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41c556a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41273c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41c07150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41273550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41c077e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41273c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41c9a768"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41c8fe88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41c9ae00"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41c92898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4150f9a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41c984d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41c984d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41c91010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x4150e5d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41c97170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41c97170"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41c91c08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41c92898"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ddd90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41c91010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41c91c08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408de230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubAMSend" scoped="" ref="0x41c8e580"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41c92200"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41c92200"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41c87420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Lpl" scoped="" ref="0x41c8ec38"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408f3ed0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41c8d230"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40b9f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41c87ae8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408b0ef8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41c86230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x415553b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408ddd90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41555a50"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="ReprogrammerBaseP" loc="18:../ReprogrammerBaseP.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeC" loc="40:../../Deluge/DelugeC.nc">
      <configuration/>
    </component>
    <component qname="ObjectTransferC" loc="40:../../Deluge/ObjectTransferC.nc">
      <configuration/>
    </component>
    <component qname="ObjectTransferP" loc="45:../../Deluge/ObjectTransferP.nc">
      <module/>
    </component>
    <component qname="DelugePageTransferC" loc="37:../../Deluge/DelugePageTransferC.nc">
      <documentation loc="32:../../Deluge/DelugePageTransferC.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugePageTransferP" loc="45:../../Deluge/DelugePageTransferP.nc">
      <documentation loc="33:../../Deluge/BitVecUtils.h">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BitVecUtilsC" loc="41:../../Deluge/BitVecUtilsC.nc">
      <documentation loc="33:../../Deluge/BitVecUtils.h">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugePageTransferC.Timer" loc="44(DelugePageTransferC.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40798b68"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CrcC" loc="45:/opt/tinyos-2.1.2/tos/system/CrcC.nc">
      <module/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg" loc="47(ObjectTransferC.SendAdvMsg):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:80">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.SenderC" loc="3(ObjectTransferC.SendAdvMsg.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="0">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC" loc="47(ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP" loc="39(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/types/Lpl.h">
        <short>&#10; The LPL defaults to stay-on.</short>
        <long>&#10; The LPL defaults to stay-on.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LowPowerListeningLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.TimerMilliC" loc="44(RF230RadioC.LowPowerListeningLayerC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SystemLowPowerListeningC" loc="1:/opt/tinyos-2.1.2/tos/system/SystemLowPowerListeningC.nc">
      <configuration/>
    </component>
    <component qname="SystemLowPowerListeningP" loc="3:/opt/tinyos-2.1.2/tos/system/SystemLowPowerListeningP.nc">
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TOne" ref="0x4048a8b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TOne" ref="0x4048a8b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40462778"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40462778"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40462778"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="ObjectTransferC.SendAdvMsg.SenderC.LplAMSenderP" loc="1(ObjectTransferC.SendAdvMsg.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="0">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveAdvMsg" loc="43(ObjectTransferC.ReceiveAdvMsg):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:80">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg" loc="47(ObjectTransferC.SendReqMsg):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:81">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.SenderC" loc="3(ObjectTransferC.SendReqMsg.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="1">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC" loc="47(ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.SendReqMsg.SenderC.LplAMSenderP" loc="1(ObjectTransferC.SendReqMsg.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="1">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveReqMsg" loc="43(ObjectTransferC.ReceiveReqMsg):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:81">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg" loc="47(ObjectTransferC.SendDataMsg):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:82">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.SenderC" loc="3(ObjectTransferC.SendDataMsg.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="2">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC" loc="47(ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.SendDataMsg.SenderC.LplAMSenderP" loc="1(ObjectTransferC.SendDataMsg.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="2">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="ObjectTransferC.ReceiveDataMsg" loc="43(ObjectTransferC.ReceiveDataMsg):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:82">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ObjectTransferC.Timer" loc="44(ObjectTransferC.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1" loc="40(DelugeC.BlockReaderDeluge1):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1.VolumeIdC" loc="37(DelugeC.BlockReaderDeluge1.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageManagerC" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageManagerP" loc="37(BlockStorageManagerC.BlockStorageManagerP):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageManagerP"/>
        <arguments>
          <value cst="I:25">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_Golden" loc="23(BlockStorageManagerC.BlockStorageC_Golden):/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageP" loc="53:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc" safe="">
      <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
        <short>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.</short>
        <long>&#10; Private component of the AT45DB implementation of the block storage&#10; abstraction.&#10;&#10; @author: Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="At45dbC" loc="22:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
        <short>&#10; HAL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HAL for Atmel's AT45DB family of serial dataflash chips. Access to the HAL&#10; is controlled by a parameterised Resource interface - client ids are &#10; obtained with unique(UQ_AT45DB).&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="At45dbP" loc="53:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc" safe="">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
        <short>&#10; Private componenent for the Atmel's AT45DB HAL.</short>
        <long>&#10; Private componenent for the Atmel's AT45DB HAL.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAt45dbC" loc="19:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
        <short>&#10; AT45DB flash chip HPL for mica family.</short>
        <long>&#10; AT45DB flash chip HPL for mica family. Each family member must provide&#10; and HplAt45dbIOC component implementing the SPIByte and HplAt45dbByte&#10; interfaces required by HplAt45dbByteC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbC.HplAt45dbByteC" loc="25(HplAt45dbC.HplAt45dbByteC):/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
        <short>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.</short>
        <long>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this component can easily be used to&#10; build an AT45DB HPL by connecting it to a byte-at-a-time SPI interface,&#10; and an HplAt45dbByte interface.&#10;&#10; @param The number of bits needed to represent a sector size, e.g., 9&#10;   for the AT45DB041B.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAt45dbByteC"/>
        <arguments>
          <value cst="I:9">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAt45dbIOC" loc="52:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
        <short>&#10; Low-level access functions for the AT45DB flash on the mica2 and micaz.</short>
        <long>&#10; Low-level access functions for the AT45DB flash on the mica2 and micaz.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAt45dbIOP" loc="90:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <documentation loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
        <short>&#10; Low level hardware access to the onboard AT45DB flash chip.</short>
        <long>&#10; Low level hardware access to the onboard AT45DB flash chip.&#10; &#60;p>&#10; Note: This component includes optimised bit-banging SPI code with the&#10; pins hardwired.  Don't copy it to some other platform without&#10; understanding it (see txByte).&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAt45dbIOC.NoArbiterC" loc="20(HplAt45dbIOC.NoArbiterC):/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc">
        <short>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration.</short>
        <long>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration. Just grants all requests, without any error&#10; checking. Does still call ResourceConfigure at the right time.&#10;&#10; @author David Gay&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoArbiterC"/>
      </instance>
      <module/>
    </component>
    <component qname="At45dbC.Arbiter" loc="89(At45dbC.Arbiter):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:at45db.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="At45dbC.Arbiter.Queue" loc="42(At45dbC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbC.Arbiter.Arbiter" loc="52(At45dbC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="At45dbStorageManagerC" loc="17:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbStorageManagerC.nc" safe="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbStorageManagerC.nc">
        <short>&#10; HAL component providing information on the flash volumes.</short>
        <long>&#10; HAL component providing information on the flash volumes.&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_1" loc="23(BlockStorageManagerC.BlockStorageC_1):/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_2" loc="23(BlockStorageManagerC.BlockStorageC_2):/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageManagerC.BlockStorageC_3" loc="23(BlockStorageManagerC.BlockStorageC_3):/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockStorageC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge1.BlockStorageLockClientC" loc="37(DelugeC.BlockReaderDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC.Arbiter" loc="83(BlockStorageLockC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:BlockStorageLock.client">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlockStorageLockC.Arbiter.Queue" loc="42(BlockStorageLockC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlockStorageLockC.Arbiter.Arbiter" loc="49(BlockStorageLockC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2" loc="40(DelugeC.BlockReaderDeluge2):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2.VolumeIdC" loc="37(DelugeC.BlockReaderDeluge2.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge2.BlockStorageLockClientC" loc="37(DelugeC.BlockReaderDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3" loc="40(DelugeC.BlockReaderDeluge3):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3.VolumeIdC" loc="37(DelugeC.BlockReaderDeluge3.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockReaderDeluge3.BlockStorageLockClientC" loc="37(DelugeC.BlockReaderDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1" loc="40(DelugeC.BlockWriterDeluge1):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1.VolumeIdC" loc="37(DelugeC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge1.BlockStorageLockClientC" loc="37(DelugeC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2" loc="40(DelugeC.BlockWriterDeluge2):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2.VolumeIdC" loc="37(DelugeC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge2.BlockStorageLockClientC" loc="37(DelugeC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3" loc="40(DelugeC.BlockWriterDeluge3):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3.VolumeIdC" loc="37(DelugeC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.BlockWriterDeluge3.BlockStorageLockClientC" loc="37(DelugeC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DisseminatorC" loc="49(DelugeC.DisseminatorC):/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x4067c200"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x4067ca70"/></typename>
          </type-tag>
          <value cst="I:56832">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DisseminatorC.DisseminatorP" loc="45(DelugeC.DisseminatorC.DisseminatorP):/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410deb00"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="47(DisseminationEngineP.DisseminationSendC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="3(DisseminationEngineP.DisseminationSendC.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="3">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC" loc="47(DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP" loc="1(DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="3">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="43(DisseminationEngineP.DisseminationReceiveC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="47(DisseminationEngineP.DisseminationProbeSendC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="3(DisseminationEngineP.DisseminationProbeSendC.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="4">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC" loc="47(DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP" loc="1(DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="4">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="43(DisseminationEngineP.DisseminationProbeReceiveC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="51(DisseminationTimerP.TrickleTimerMilliC):/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="51(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="44(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationC" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NetProgC" loc="46:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <configuration/>
    </component>
    <component qname="InternalFlashC" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/avr/InternalFlashC.nc">
      <documentation loc="519:/usr/lib/gcc/avr/4.1.2/../../../../avr/include/avr/eeprom.h">
        <short> \def __EEGET&#10;\ingroup avr_eeprom&#10;Read a byte from EEPROM.</short>
        <long> \def __EEGET&#10;\ingroup avr_eeprom&#10;Read a byte from EEPROM. Compatibility define for IAR C.&#9;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="NetProgM" loc="45:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeP" loc="37:../../Deluge/DelugeP.nc">
      <documentation loc="32:../../Deluge/DelugeP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeC.Timer" loc="44(DelugeC.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC" loc="37:../../Deluge/DelugeMetadataC.nc">
      <documentation loc="32:../../Deluge/DelugeMetadataC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugeMetadataP" loc="39:../../Deluge/DelugeMetadataP.nc">
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage" loc="40(DelugeMetadataC.BlockReaderGoldenImage):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC" loc="37(DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1" loc="40(DelugeMetadataC.BlockReaderDeluge1):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1.VolumeIdC" loc="37(DelugeMetadataC.BlockReaderDeluge1.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2" loc="40(DelugeMetadataC.BlockReaderDeluge2):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2.VolumeIdC" loc="37(DelugeMetadataC.BlockReaderDeluge2.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3" loc="40(DelugeMetadataC.BlockReaderDeluge3):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3.VolumeIdC" loc="37(DelugeMetadataC.BlockReaderDeluge3.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage" loc="40(DelugeMetadataC.BlockWriterGoldenImage):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC" loc="37(DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1" loc="40(DelugeMetadataC.BlockWriterDeluge1):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1.VolumeIdC" loc="37(DelugeMetadataC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2" loc="40(DelugeMetadataC.BlockWriterDeluge2):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2.VolumeIdC" loc="37(DelugeMetadataC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3" loc="40(DelugeMetadataC.BlockWriterDeluge3):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3.VolumeIdC" loc="37(DelugeMetadataC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC" loc="37(DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeMetadataClientC" loc="37(DelugeC.DelugeMetadataClientC):../../Deluge/DelugeMetadataClientC.nc">
      <documentation loc="32:../../Deluge/DelugeMetadataClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeMetadataClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeVolumeManagerClientC" loc="37(DelugeC.DelugeVolumeManagerClientC):../../Deluge/DelugeVolumeManagerClientC.nc">
      <documentation loc="32:../../Deluge/DelugeVolumeManagerClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeVolumeManagerClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC" loc="37:../../Deluge/DelugeVolumeManagerC.nc">
      <documentation loc="32:../../Deluge/DelugeVolumeManagerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerP" loc="37:../../Deluge/DelugeVolumeManagerP.nc">
      <documentation loc="32:../../Deluge/DelugeVolumeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1" loc="40(DelugeVolumeManagerC.BlockWriterDeluge1):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2" loc="40(DelugeVolumeManagerC.BlockWriterDeluge2):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3" loc="40(DelugeVolumeManagerC.BlockWriterDeluge3):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC" loc="37(DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.BlockStorageLockClientC" loc="37(DelugeC.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TThree" ref="0x4048aad8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40462778"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TThree" ref="0x4048aad8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x40488160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AutoStarterC" loc="37:../../Deluge/AutoStarterC.nc">
      <documentation loc="32:../../Deluge/AutoStarterC.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AutoStarterP" loc="37:../../Deluge/AutoStarterP.nc">
      <documentation loc="32:../../Deluge/AutoStarterP.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC" loc="47(DelugeC.FlashVolumeManagerC.SerialAMSenderC):/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP" loc="43(DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.SerialAMReceiverC" loc="43(DelugeC.FlashVolumeManagerC.SerialAMReceiverC):/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP" loc="39(DelugeC.FlashVolumeManagerC.FlashVolumeManagerP):/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FlashVolumeManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.TimeoutTimer" loc="44(DelugeC.FlashVolumeManagerC.TimeoutTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage" loc="40(DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1" loc="40(DelugeC.FlashVolumeManagerC.BlockReaderDeluge1):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2" loc="40(DelugeC.FlashVolumeManagerC.BlockReaderDeluge2):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3" loc="40(DelugeC.FlashVolumeManagerC.BlockReaderDeluge3):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="BlockReaderC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage" loc="40(DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1" loc="40(DelugeC.FlashVolumeManagerC.BlockWriterDeluge1):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2" loc="40(DelugeC.FlashVolumeManagerC.BlockWriterDeluge2):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3" loc="40(DelugeC.FlashVolumeManagerC.BlockWriterDeluge3):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="BlockWriterC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.VolumeIdC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.VolumeIdC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="VolumeIdC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC" loc="37(DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC" loc="39(DelugeC.DelugeManagerC):../../Deluge/DelugeManagerC.nc">
      <documentation loc="32:../../Deluge/DelugeManagerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeManagerC"/>
        <arguments>
          <value cst="I:84">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.SerialAMSenderC" loc="47(DelugeC.DelugeManagerC.SerialAMSenderC):/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.SerialAMSenderC.AMQueueEntryP" loc="43(DelugeC.DelugeManagerC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.DelugeManagerC.SerialAMReceiverC" loc="43(DelugeC.DelugeManagerC.SerialAMReceiverC):/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMReceiverC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.Timer" loc="44(DelugeC.DelugeManagerC.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.DelugeManagerP" loc="39(DelugeC.DelugeManagerC.DelugeManagerP):../../Deluge/DelugeManagerP.nc">
      <documentation loc="32:../../Deluge/DelugeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DelugeManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="DelugeC.DelugeManagerC.DelugeMetadataClientC" loc="37(DelugeC.DelugeManagerC.DelugeMetadataClientC):../../Deluge/DelugeMetadataClientC.nc">
      <documentation loc="32:../../Deluge/DelugeMetadataClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DelugeMetadataClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.DelugeVolumeManagerClientC" loc="37(DelugeC.DelugeManagerC.DelugeVolumeManagerClientC):../../Deluge/DelugeVolumeManagerClientC.nc">
      <documentation loc="32:../../Deluge/DelugeVolumeManagerClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DelugeVolumeManagerClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DelugeC.DelugeManagerC.BlockStorageLockClientC" loc="37(DelugeC.DelugeManagerC.BlockStorageLockClientC):/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="BlockStorageLockClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerBaseC.RadioSenderC" loc="47(ReprogrammerBaseC.RadioSenderC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:153">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerBaseC.RadioSenderC.SenderC" loc="3(ReprogrammerBaseC.RadioSenderC.SenderC):/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <instance number="5">
        <component-ref qname="LplAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC" loc="47(ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC.AMQueueEntryP" loc="43(ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ReprogrammerBaseC.RadioSenderC.SenderC.LplAMSenderP" loc="1(ReprogrammerBaseC.RadioSenderC.SenderC.LplAMSenderP):/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <instance number="5">
        <component-ref qname="LplAMSenderP"/>
      </instance>
      <module/>
    </component>
    <component qname="ReprogrammerBaseC.ReplyReceiverC" loc="43(ReprogrammerBaseC.ReplyReceiverC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:152">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerBaseC.RetxTimerC" loc="44(ReprogrammerBaseC.RetxTimerC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ReprogrammerBaseC.ReplyTimerC" loc="44(ReprogrammerBaseC.ReplyTimerC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40595a08" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40595c20" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40595e38" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x405a5d50" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x405a2010" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x405a2238" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x405a2428" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x405f4088" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x405f42b0" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x405f44d8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x405f46c8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40798b68" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40798b68"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40798d28" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40791ec0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40791ec0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x407a20d0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4081e328" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4081e328"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40847830" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40847830"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40847a10" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40878010" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40878010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x4086ddc0" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LplAMSenderC" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc" abstract="">
      <parameters>
        <constant name="AMId" ref="0x4089c6c0" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
          <component-ref qname="LplAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x408942b0" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40891d38" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x408ac3b0" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40a2e4c0" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40a44228" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningLayerP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc" abstract="">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/types/Lpl.h">
        <short>&#10; The LPL defaults to stay-on.</short>
        <long>&#10; The LPL defaults to stay-on.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40e50c30" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40e50c30"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40e50e50" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40e52938" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40e52938"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40e52d80" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40e52d80"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40e72010" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40e7d470" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40e7d470"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40e7d8b8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40e7d8b8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40e9c5d0" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40e9c5d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40e9ca30" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40e9ca30"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40e9cc98" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40e9cc98"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40e9b148" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40e9b148"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40e9b3b0" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40e9b838" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40e9b838"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="LplAMSenderP" loc="1:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40f08bc0" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="BlockReaderC" loc="40:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x40f20a18" loc="40:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
          <component-ref qname="BlockReaderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VolumeIdC" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x40f1c778" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
          <component-ref qname="VolumeIdC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageManagerP" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="clients" ref="0x40f13b20" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
          <component-ref qname="BlockStorageManagerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageC" loc="23:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc" abstract="">
      <documentation loc="12:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
        <short>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.</short>
        <long>&#10; Implementation of the block storage abstraction from TEP103 for the&#10; Atmel AT45DB serial data flash.&#10;&#10; @param volid Volume to use for block storage&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="volid" ref="0x40f6f0c0" loc="23:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
          <component-ref qname="BlockStorageC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAt45dbByteC" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
        <short>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.</short>
        <long>&#10; Generic byte-at-a-time implementation of the AT45DB HPL.&#10; &#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this component can easily be used to&#10; build an AT45DB HPL by connecting it to a byte-at-a-time SPI interface,&#10; and an HplAt45dbByte interface.&#10;&#10; @param The number of bits needed to represent a sector size, e.g., 9&#10;   for the AT45DB041B.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="sectorSizeLog2" ref="0x41015030" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
          <component-ref qname="HplAt45dbByteC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NoArbiterC" loc="20:/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc">
        <short>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration.</short>
        <long>&#10; A do-nothing arbiter for non-shared resources which need to pretend to&#10; have arbitration. Just grants all requests, without any error&#10; checking. Does still call ResourceConfigure at the right time.&#10;&#10; @author David Gay&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4101ace0" loc="89:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x41091a70" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BlockStorageLockClientC" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="BlockWriterC" loc="40:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManager.h">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="id" ref="0x410ef7a0" loc="40:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
          <component-ref qname="BlockWriterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x410deb00" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410deb00"/></type-var>
        </typedef>
        <constant name="key" ref="0x410decf0" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x410dac68" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410dac68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x411564e0" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x411566f0" loc="52:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x411568d0" loc="53:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x41156ad8" loc="54:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x4114f0a8" loc="51:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x4114f2b8" loc="52:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x4114f498" loc="53:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x4114f6a0" loc="54:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x4114f8a8" loc="55:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BitVectorC" loc="44:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x41190df0" loc="44:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DelugeMetadataClientC" loc="37:../../Deluge/DelugeMetadataClientC.nc" abstract="">
      <documentation loc="32:../../Deluge/DelugeMetadataClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="DelugeVolumeManagerClientC" loc="37:../../Deluge/DelugeVolumeManagerClientC.nc" abstract="">
      <documentation loc="32:../../Deluge/DelugeVolumeManagerClientC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x41278d60" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMReceiverC" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x414892a0" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
          <component-ref qname="SerialAMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FlashVolumeManagerP" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DelugeManagerC" loc="39:../../Deluge/DelugeManagerC.nc" abstract="">
      <documentation loc="32:../../Deluge/DelugeManagerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x41503030" loc="39:../../Deluge/DelugeManagerC.nc">
          <component-ref qname="DelugeManagerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DelugeManagerP" loc="39:../../Deluge/DelugeManagerP.nc" abstract="">
      <documentation loc="32:../../Deluge/DelugeManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="ReplyTimer" ref="0x40520718" loc="38:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReplyTimer" scoped="" ref="0x40520718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4051e248"/>
        <function-ref name="fired" scoped="" ref="0x4051f4e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4051fbf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4051f998"/>
        <function-ref name="getdt" scoped="" ref="0x4051e6f8"/>
        <function-ref name="gett0" scoped="" ref="0x4051e4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4051f740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40520d40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4051ff10"/>
        <function-ref name="startOneShot" scoped="" ref="0x4051f010"/>
        <function-ref name="stop" scoped="" ref="0x4051f290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x404b9c40" loc="20:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404b9c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404b9e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x40522d00" loc="53:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40522d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x40522ed8"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x4051c010"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x4051c0f0"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x4051c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40527af0" loc="57:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40527af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4052a200"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x40508de8" loc="33:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40508de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40510010"/>
        <function-ref name="payloadLength" scoped="" ref="0x405100f0"/>
        <function-ref name="getPayload" scoped="" ref="0x405101d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405102b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40510390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40523010" loc="55:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40523010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40523268"/>
        <function-ref name="rand32" scoped="" ref="0x40523348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendSerialMessage" ref="0x4052eb98" loc="99:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendSerialMessage" scoped="" ref="0x4052eb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4052ed70"/>
        <function-ref name="runTask" scoped="" ref="0x4052ee50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SeedInit" ref="0x40529380" loc="56:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40529380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405299a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x40509b08" loc="27:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x40509b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40509ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x40509dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40509ea0"/>
        <function-ref name="cancel" scoped="" ref="0x404c5010"/>
        <function-ref name="sendDone" scoped="" ref="0x404c50f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacket" ref="0x40516f00" loc="29:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacket" scoped="" ref="0x40516f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405080f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x405081d0"/>
        <function-ref name="getPayload" scoped="" ref="0x405082b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40508390"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40508470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReplyReceive" ref="0x405105b8" loc="34:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReplyReceive" scoped="" ref="0x405105b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40510790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxTimer" ref="0x405173b0" loc="37:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxTimer" scoped="" ref="0x405173b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40514e98"/>
        <function-ref name="fired" scoped="" ref="0x40514150"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40514858"/>
        <function-ref name="isOneShot" scoped="" ref="0x40514600"/>
        <function-ref name="getdt" scoped="" ref="0x40520368"/>
        <function-ref name="gett0" scoped="" ref="0x40520110"/>
        <function-ref name="isRunning" scoped="" ref="0x405143a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405179d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40514b78"/>
        <function-ref name="startOneShot" scoped="" ref="0x40517c58"/>
        <function-ref name="stop" scoped="" ref="0x40517ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChangeChannel" ref="0x40525dc8" loc="44:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChangeChannel" scoped="" ref="0x40525dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4051d010"/>
        <function-ref name="setChannel" scoped="" ref="0x4051d0f0"/>
        <function-ref name="getChannel" scoped="" ref="0x4051d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialReceive" ref="0x40511e08" loc="28:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReceive" scoped="" ref="0x40511e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404c9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendRadioMessage" ref="0x4052e358" loc="98:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendRadioMessage" scoped="" ref="0x4052e358"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4052e530"/>
        <function-ref name="runTask" scoped="" ref="0x4052e610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x404c6010" loc="22:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404c6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404c61e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404c62c8"/>
        <function-ref name="led1On" scoped="" ref="0x404c63a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404c6488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404c6568"/>
        <function-ref name="get" scoped="" ref="0x404c6648"/>
        <function-ref name="led1Off" scoped="" ref="0x404c6728"/>
        <function-ref name="led2Off" scoped="" ref="0x404c6aa8"/>
        <function-ref name="set" scoped="" ref="0x404c6808"/>
        <function-ref name="led0On" scoped="" ref="0x404c68e8"/>
        <function-ref name="led2On" scoped="" ref="0x404c69c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40508680" loc="32:../ReprogrammerBaseP.nc">
      <component-ref qname="ReprogrammerBaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40508680"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40508858"/>
        <function-ref name="getPayload" scoped="" ref="0x40508938"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40508a18"/>
        <function-ref name="cancel" scoped="" ref="0x40508af8"/>
        <function-ref name="sendDone" scoped="" ref="0x40508bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40558b40" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40558b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40558d18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40558df8"/>
        <function-ref name="led1On" scoped="" ref="0x40558ed8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40555010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405550f0"/>
        <function-ref name="get" scoped="" ref="0x405551d0"/>
        <function-ref name="led1Off" scoped="" ref="0x405552b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40555630"/>
        <function-ref name="set" scoped="" ref="0x40555390"/>
        <function-ref name="led0On" scoped="" ref="0x40555470"/>
        <function-ref name="led2On" scoped="" ref="0x40555550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x405639a8" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x405639a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40563b80"/>
        <function-ref name="isInput" scoped="" ref="0x40563c60"/>
        <function-ref name="toggle" scoped="" ref="0x40563d40"/>
        <function-ref name="isOutput" scoped="" ref="0x40563e20"/>
        <function-ref name="get" scoped="" ref="0x40563f00"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055b010"/>
        <function-ref name="set" scoped="" ref="0x4055b0f0"/>
        <function-ref name="clr" scoped="" ref="0x4055b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4055d7f8" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4055d7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4055d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x4055b3c0" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x4055b3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055b598"/>
        <function-ref name="isInput" scoped="" ref="0x4055b678"/>
        <function-ref name="toggle" scoped="" ref="0x4055b758"/>
        <function-ref name="isOutput" scoped="" ref="0x4055b838"/>
        <function-ref name="get" scoped="" ref="0x4055b918"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055b9f8"/>
        <function-ref name="set" scoped="" ref="0x4055bad8"/>
        <function-ref name="clr" scoped="" ref="0x4055bbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4055db40" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4055db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4055dd18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4055ddf8"/>
        <function-ref name="led1On" scoped="" ref="0x4055ded8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4055c010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4055c0f0"/>
        <function-ref name="get" scoped="" ref="0x4055c1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x4055c2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x4055c630"/>
        <function-ref name="set" scoped="" ref="0x4055c390"/>
        <function-ref name="led0On" scoped="" ref="0x4055c470"/>
        <function-ref name="led2On" scoped="" ref="0x4055c550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x4055bda8" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4055bda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055a010"/>
        <function-ref name="isInput" scoped="" ref="0x4055a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4055a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4055a2b0"/>
        <function-ref name="get" scoped="" ref="0x4055a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055a470"/>
        <function-ref name="set" scoped="" ref="0x4055a550"/>
        <function-ref name="clr" scoped="" ref="0x4055a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x4056b110" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x4056b110"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056b2e8"/>
        <function-ref name="isInput" scoped="" ref="0x4056b3c8"/>
        <function-ref name="toggle" scoped="" ref="0x4056b4a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4056b588"/>
        <function-ref name="get" scoped="" ref="0x4056b668"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056b748"/>
        <function-ref name="set" scoped="" ref="0x4056b828"/>
        <function-ref name="clr" scoped="" ref="0x4056b908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x4056bb18" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x4056bb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056bcf0"/>
        <function-ref name="isInput" scoped="" ref="0x4056bdd0"/>
        <function-ref name="toggle" scoped="" ref="0x4056beb0"/>
        <function-ref name="isOutput" scoped="" ref="0x40576010"/>
        <function-ref name="get" scoped="" ref="0x405760f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405761d0"/>
        <function-ref name="set" scoped="" ref="0x405762b0"/>
        <function-ref name="clr" scoped="" ref="0x40576390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40576f28" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40576f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40575110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x405765a0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x405765a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40576778"/>
        <function-ref name="isInput" scoped="" ref="0x40576858"/>
        <function-ref name="toggle" scoped="" ref="0x40576938"/>
        <function-ref name="isOutput" scoped="" ref="0x40576a18"/>
        <function-ref name="get" scoped="" ref="0x40576af8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40576bd8"/>
        <function-ref name="set" scoped="" ref="0x40576cb8"/>
        <function-ref name="clr" scoped="" ref="0x40576d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x4058f670" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x4058f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4058fa48"/>
        <function-ref name="isInput" scoped="" ref="0x4058fb28"/>
        <function-ref name="toggle" scoped="" ref="0x4058fc08"/>
        <function-ref name="isOutput" scoped="" ref="0x4058fce8"/>
        <function-ref name="get" scoped="" ref="0x4058fdc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058fea8"/>
        <function-ref name="set" scoped="" ref="0x4059a010"/>
        <function-ref name="clr" scoped="" ref="0x4059a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x40586b98" loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x40586b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40586d70"/>
        <function-ref name="isInput" scoped="" ref="0x40586e50"/>
        <function-ref name="toggle" scoped="" ref="0x40585010"/>
        <function-ref name="isOutput" scoped="" ref="0x405850f0"/>
        <function-ref name="get" scoped="" ref="0x405851d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405852b0"/>
        <function-ref name="set" scoped="" ref="0x40585390"/>
        <function-ref name="clr" scoped="" ref="0x40585470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x4058b210" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x4058b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4058b3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4058b4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4058b5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4058b688"/>
        <function-ref name="get" scoped="" ref="0x4058b768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058b848"/>
        <function-ref name="set" scoped="" ref="0x4058b928"/>
        <function-ref name="clr" scoped="" ref="0x4058ba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x405922f0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x405922f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405924c8"/>
        <function-ref name="isInput" scoped="" ref="0x405925a8"/>
        <function-ref name="toggle" scoped="" ref="0x40592688"/>
        <function-ref name="isOutput" scoped="" ref="0x40592768"/>
        <function-ref name="get" scoped="" ref="0x40592848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40592928"/>
        <function-ref name="set" scoped="" ref="0x40592a08"/>
        <function-ref name="clr" scoped="" ref="0x40592ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x40598c08" loc="103:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x40598c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40598de0"/>
        <function-ref name="isInput" scoped="" ref="0x40598ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40597010"/>
        <function-ref name="isOutput" scoped="" ref="0x405970f0"/>
        <function-ref name="get" scoped="" ref="0x405971d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405972b0"/>
        <function-ref name="set" scoped="" ref="0x40597390"/>
        <function-ref name="clr" scoped="" ref="0x40597470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x4057b750" loc="50:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x4057b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057b928"/>
        <function-ref name="isInput" scoped="" ref="0x4057ba08"/>
        <function-ref name="toggle" scoped="" ref="0x4057bae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4057bbc8"/>
        <function-ref name="get" scoped="" ref="0x4057bca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057bd88"/>
        <function-ref name="set" scoped="" ref="0x4057be68"/>
        <function-ref name="clr" scoped="" ref="0x4057a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x40594ea8" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x40594ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405930c0"/>
        <function-ref name="isInput" scoped="" ref="0x405931a0"/>
        <function-ref name="toggle" scoped="" ref="0x40593280"/>
        <function-ref name="isOutput" scoped="" ref="0x40593360"/>
        <function-ref name="get" scoped="" ref="0x40593440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40593520"/>
        <function-ref name="set" scoped="" ref="0x40593600"/>
        <function-ref name="clr" scoped="" ref="0x405936e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x4057ac08" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x4057ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057ade0"/>
        <function-ref name="isInput" scoped="" ref="0x4057aec0"/>
        <function-ref name="toggle" scoped="" ref="0x40579010"/>
        <function-ref name="isOutput" scoped="" ref="0x405790f0"/>
        <function-ref name="get" scoped="" ref="0x405791d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405792b0"/>
        <function-ref name="set" scoped="" ref="0x40579390"/>
        <function-ref name="clr" scoped="" ref="0x40579470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x4057f2f0" loc="64:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x4057f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057f4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4057f5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4057f688"/>
        <function-ref name="isOutput" scoped="" ref="0x4057f768"/>
        <function-ref name="get" scoped="" ref="0x4057f848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057f928"/>
        <function-ref name="set" scoped="" ref="0x4057fa08"/>
        <function-ref name="clr" scoped="" ref="0x4057fae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x40584a98" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x40584a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40584c70"/>
        <function-ref name="isInput" scoped="" ref="0x40584d50"/>
        <function-ref name="toggle" scoped="" ref="0x40584e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40584f10"/>
        <function-ref name="get" scoped="" ref="0x40583010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405830f0"/>
        <function-ref name="set" scoped="" ref="0x405831d0"/>
        <function-ref name="clr" scoped="" ref="0x405832b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x405890a0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x405890a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40589278"/>
        <function-ref name="isInput" scoped="" ref="0x40589358"/>
        <function-ref name="toggle" scoped="" ref="0x40589438"/>
        <function-ref name="isOutput" scoped="" ref="0x40589518"/>
        <function-ref name="get" scoped="" ref="0x405895f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405896d8"/>
        <function-ref name="set" scoped="" ref="0x405897b8"/>
        <function-ref name="clr" scoped="" ref="0x40589898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x405723d0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x405723d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405725a8"/>
        <function-ref name="isInput" scoped="" ref="0x40572688"/>
        <function-ref name="toggle" scoped="" ref="0x40572768"/>
        <function-ref name="isOutput" scoped="" ref="0x40572848"/>
        <function-ref name="get" scoped="" ref="0x40572928"/>
        <function-ref name="makeOutput" scoped="" ref="0x40572a08"/>
        <function-ref name="set" scoped="" ref="0x40572ae8"/>
        <function-ref name="clr" scoped="" ref="0x40572bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x40578a98" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x40578a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40578c70"/>
        <function-ref name="isInput" scoped="" ref="0x40578d50"/>
        <function-ref name="toggle" scoped="" ref="0x40578e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40578f10"/>
        <function-ref name="get" scoped="" ref="0x40577010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405770f0"/>
        <function-ref name="set" scoped="" ref="0x405771d0"/>
        <function-ref name="clr" scoped="" ref="0x405772b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x4057d210" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x4057d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057d3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4057d4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4057d5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4057d688"/>
        <function-ref name="get" scoped="" ref="0x4057d768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057d848"/>
        <function-ref name="set" scoped="" ref="0x4057d928"/>
        <function-ref name="clr" scoped="" ref="0x4057da08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x4058e8e0" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x4058e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4058eab8"/>
        <function-ref name="isInput" scoped="" ref="0x4058eb98"/>
        <function-ref name="toggle" scoped="" ref="0x4058ec78"/>
        <function-ref name="isOutput" scoped="" ref="0x4058ed58"/>
        <function-ref name="get" scoped="" ref="0x4058ee38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058ef18"/>
        <function-ref name="set" scoped="" ref="0x4058d010"/>
        <function-ref name="clr" scoped="" ref="0x4058d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x40590210" loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x40590210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405903e8"/>
        <function-ref name="isInput" scoped="" ref="0x405904c8"/>
        <function-ref name="toggle" scoped="" ref="0x405905a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40590688"/>
        <function-ref name="get" scoped="" ref="0x40590768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40590848"/>
        <function-ref name="set" scoped="" ref="0x40590928"/>
        <function-ref name="clr" scoped="" ref="0x40590a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x40599750" loc="101:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x40599750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40599928"/>
        <function-ref name="isInput" scoped="" ref="0x40599a08"/>
        <function-ref name="toggle" scoped="" ref="0x40599ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40599bc8"/>
        <function-ref name="get" scoped="" ref="0x40599ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40599d88"/>
        <function-ref name="set" scoped="" ref="0x40599e68"/>
        <function-ref name="clr" scoped="" ref="0x40598010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x4058dce8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x4058dce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4058dec0"/>
        <function-ref name="isInput" scoped="" ref="0x4058c010"/>
        <function-ref name="toggle" scoped="" ref="0x4058c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4058c1d0"/>
        <function-ref name="get" scoped="" ref="0x4058c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058c390"/>
        <function-ref name="set" scoped="" ref="0x4058c470"/>
        <function-ref name="clr" scoped="" ref="0x4058c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x4057c2f0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x4057c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057c4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4057c5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4057c688"/>
        <function-ref name="isOutput" scoped="" ref="0x4057c768"/>
        <function-ref name="get" scoped="" ref="0x4057c848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057c928"/>
        <function-ref name="set" scoped="" ref="0x4057ca08"/>
        <function-ref name="clr" scoped="" ref="0x4057cae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40582930" loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40582930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40582b08"/>
        <function-ref name="isInput" scoped="" ref="0x40582be8"/>
        <function-ref name="toggle" scoped="" ref="0x40582cc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40582da8"/>
        <function-ref name="get" scoped="" ref="0x40582e88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40581010"/>
        <function-ref name="set" scoped="" ref="0x405810f0"/>
        <function-ref name="clr" scoped="" ref="0x405811d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x4059a2f0" loc="99:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x4059a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4059a4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4059a5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4059a688"/>
        <function-ref name="isOutput" scoped="" ref="0x4059a768"/>
        <function-ref name="get" scoped="" ref="0x4059a848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4059a928"/>
        <function-ref name="set" scoped="" ref="0x4059aa08"/>
        <function-ref name="clr" scoped="" ref="0x4059aae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x40581dc8" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x40581dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40580010"/>
        <function-ref name="isInput" scoped="" ref="0x405800f0"/>
        <function-ref name="toggle" scoped="" ref="0x405801d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405802b0"/>
        <function-ref name="get" scoped="" ref="0x40580390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40580470"/>
        <function-ref name="set" scoped="" ref="0x40580550"/>
        <function-ref name="clr" scoped="" ref="0x40580630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x40585670" loc="73:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x40585670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40585848"/>
        <function-ref name="isInput" scoped="" ref="0x40585928"/>
        <function-ref name="toggle" scoped="" ref="0x40585a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40585ae8"/>
        <function-ref name="get" scoped="" ref="0x40585bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40585ca8"/>
        <function-ref name="set" scoped="" ref="0x40585d88"/>
        <function-ref name="clr" scoped="" ref="0x40585e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x4058bc08" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x4058bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4058bde0"/>
        <function-ref name="isInput" scoped="" ref="0x4058bec0"/>
        <function-ref name="toggle" scoped="" ref="0x4058a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4058a0f0"/>
        <function-ref name="get" scoped="" ref="0x4058a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058a2b0"/>
        <function-ref name="set" scoped="" ref="0x4058a390"/>
        <function-ref name="clr" scoped="" ref="0x4058a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x40592ce8" loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x40592ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40592ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40591010"/>
        <function-ref name="toggle" scoped="" ref="0x405910f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405911d0"/>
        <function-ref name="get" scoped="" ref="0x405912b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40591390"/>
        <function-ref name="set" scoped="" ref="0x40591470"/>
        <function-ref name="clr" scoped="" ref="0x40591550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x4057a210" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x4057a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057a3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4057a4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4057a5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4057a688"/>
        <function-ref name="get" scoped="" ref="0x4057a768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057a848"/>
        <function-ref name="set" scoped="" ref="0x4057a928"/>
        <function-ref name="clr" scoped="" ref="0x4057aa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x40579670" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x40579670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40579848"/>
        <function-ref name="isInput" scoped="" ref="0x40579928"/>
        <function-ref name="toggle" scoped="" ref="0x40579a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40579ae8"/>
        <function-ref name="get" scoped="" ref="0x40579bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40579ca8"/>
        <function-ref name="set" scoped="" ref="0x40579d88"/>
        <function-ref name="clr" scoped="" ref="0x40579e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x4057fce8" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x4057fce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057fec0"/>
        <function-ref name="isInput" scoped="" ref="0x4057e010"/>
        <function-ref name="toggle" scoped="" ref="0x4057e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4057e1d0"/>
        <function-ref name="get" scoped="" ref="0x4057e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057e390"/>
        <function-ref name="set" scoped="" ref="0x4057e470"/>
        <function-ref name="clr" scoped="" ref="0x4057e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x405834b0" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x405834b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40583688"/>
        <function-ref name="isInput" scoped="" ref="0x40583768"/>
        <function-ref name="toggle" scoped="" ref="0x40583848"/>
        <function-ref name="isOutput" scoped="" ref="0x40583928"/>
        <function-ref name="get" scoped="" ref="0x40583a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40583ae8"/>
        <function-ref name="set" scoped="" ref="0x40583bc8"/>
        <function-ref name="clr" scoped="" ref="0x40583ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x40589a98" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x40589a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40589c70"/>
        <function-ref name="isInput" scoped="" ref="0x40589d50"/>
        <function-ref name="toggle" scoped="" ref="0x40589e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40589f10"/>
        <function-ref name="get" scoped="" ref="0x40594010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405940f0"/>
        <function-ref name="set" scoped="" ref="0x405941d0"/>
        <function-ref name="clr" scoped="" ref="0x405942b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x40572dc8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x40572dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40571010"/>
        <function-ref name="isInput" scoped="" ref="0x405710f0"/>
        <function-ref name="toggle" scoped="" ref="0x405711d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405712b0"/>
        <function-ref name="get" scoped="" ref="0x40571390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40571470"/>
        <function-ref name="set" scoped="" ref="0x40571550"/>
        <function-ref name="clr" scoped="" ref="0x40571630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x405774b0" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x405774b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40577708"/>
        <function-ref name="isInput" scoped="" ref="0x405777e8"/>
        <function-ref name="toggle" scoped="" ref="0x405778c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405779a8"/>
        <function-ref name="get" scoped="" ref="0x40577a88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40577b68"/>
        <function-ref name="set" scoped="" ref="0x40577c48"/>
        <function-ref name="clr" scoped="" ref="0x40577d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x4057dc08" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x4057dc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057dde0"/>
        <function-ref name="isInput" scoped="" ref="0x4057dec0"/>
        <function-ref name="toggle" scoped="" ref="0x40587010"/>
        <function-ref name="isOutput" scoped="" ref="0x405870f0"/>
        <function-ref name="get" scoped="" ref="0x405871d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405872b0"/>
        <function-ref name="set" scoped="" ref="0x40587390"/>
        <function-ref name="clr" scoped="" ref="0x40587470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x40590c08" loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x40590c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40590de0"/>
        <function-ref name="isInput" scoped="" ref="0x40590ec0"/>
        <function-ref name="toggle" scoped="" ref="0x4058f010"/>
        <function-ref name="isOutput" scoped="" ref="0x4058f0f0"/>
        <function-ref name="get" scoped="" ref="0x4058f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058f2b0"/>
        <function-ref name="set" scoped="" ref="0x4058f390"/>
        <function-ref name="clr" scoped="" ref="0x4058f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x405860a0" loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x405860a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40586378"/>
        <function-ref name="isInput" scoped="" ref="0x40586458"/>
        <function-ref name="toggle" scoped="" ref="0x40586538"/>
        <function-ref name="isOutput" scoped="" ref="0x40586618"/>
        <function-ref name="get" scoped="" ref="0x405866f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405867d8"/>
        <function-ref name="set" scoped="" ref="0x405868b8"/>
        <function-ref name="clr" scoped="" ref="0x40586998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x4058c750" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x4058c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4058c928"/>
        <function-ref name="isInput" scoped="" ref="0x4058ca08"/>
        <function-ref name="toggle" scoped="" ref="0x4058cae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4058cbc8"/>
        <function-ref name="get" scoped="" ref="0x4058cca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058cd88"/>
        <function-ref name="set" scoped="" ref="0x4058ce68"/>
        <function-ref name="clr" scoped="" ref="0x4058b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x405938e0" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x405938e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40593ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40593b98"/>
        <function-ref name="toggle" scoped="" ref="0x40593c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40593d58"/>
        <function-ref name="get" scoped="" ref="0x40593e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40593f18"/>
        <function-ref name="set" scoped="" ref="0x40592010"/>
        <function-ref name="clr" scoped="" ref="0x405920f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x40598210" loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x40598210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405983e8"/>
        <function-ref name="isInput" scoped="" ref="0x405984c8"/>
        <function-ref name="toggle" scoped="" ref="0x405985a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40598688"/>
        <function-ref name="get" scoped="" ref="0x40598768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40598848"/>
        <function-ref name="set" scoped="" ref="0x40598928"/>
        <function-ref name="clr" scoped="" ref="0x40598a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x4057cce8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x4057cce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057cec0"/>
        <function-ref name="isInput" scoped="" ref="0x4057b010"/>
        <function-ref name="toggle" scoped="" ref="0x4057b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4057b1d0"/>
        <function-ref name="get" scoped="" ref="0x4057b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057b390"/>
        <function-ref name="set" scoped="" ref="0x4057b470"/>
        <function-ref name="clr" scoped="" ref="0x4057b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x405813d0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x405813d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405815a8"/>
        <function-ref name="isInput" scoped="" ref="0x40581688"/>
        <function-ref name="toggle" scoped="" ref="0x40581768"/>
        <function-ref name="isOutput" scoped="" ref="0x40581848"/>
        <function-ref name="get" scoped="" ref="0x40581928"/>
        <function-ref name="makeOutput" scoped="" ref="0x40581a08"/>
        <function-ref name="set" scoped="" ref="0x40581ae8"/>
        <function-ref name="clr" scoped="" ref="0x40581bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x405944b0" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x405944b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40594688"/>
        <function-ref name="isInput" scoped="" ref="0x40594768"/>
        <function-ref name="toggle" scoped="" ref="0x40594848"/>
        <function-ref name="isOutput" scoped="" ref="0x40594928"/>
        <function-ref name="get" scoped="" ref="0x40594a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40594ae8"/>
        <function-ref name="set" scoped="" ref="0x40594bc8"/>
        <function-ref name="clr" scoped="" ref="0x40594ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x40580830" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x40580830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40580a08"/>
        <function-ref name="isInput" scoped="" ref="0x40580ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40580bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40580ca8"/>
        <function-ref name="get" scoped="" ref="0x40580d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40580e68"/>
        <function-ref name="set" scoped="" ref="0x4057f010"/>
        <function-ref name="clr" scoped="" ref="0x4057f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x405840a0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x405840a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40584278"/>
        <function-ref name="isInput" scoped="" ref="0x40584358"/>
        <function-ref name="toggle" scoped="" ref="0x40584438"/>
        <function-ref name="isOutput" scoped="" ref="0x40584518"/>
        <function-ref name="get" scoped="" ref="0x405845f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405846d8"/>
        <function-ref name="set" scoped="" ref="0x405847b8"/>
        <function-ref name="clr" scoped="" ref="0x40584898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x4058a670" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x4058a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4058a848"/>
        <function-ref name="isInput" scoped="" ref="0x4058a928"/>
        <function-ref name="toggle" scoped="" ref="0x4058aa08"/>
        <function-ref name="isOutput" scoped="" ref="0x4058aae8"/>
        <function-ref name="get" scoped="" ref="0x4058abc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058aca8"/>
        <function-ref name="set" scoped="" ref="0x4058ad88"/>
        <function-ref name="clr" scoped="" ref="0x4058ae68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x40591750" loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x40591750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40591928"/>
        <function-ref name="isInput" scoped="" ref="0x40591a08"/>
        <function-ref name="toggle" scoped="" ref="0x40591ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40591bc8"/>
        <function-ref name="get" scoped="" ref="0x40591ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40591d88"/>
        <function-ref name="set" scoped="" ref="0x40591e68"/>
        <function-ref name="clr" scoped="" ref="0x40590010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x40575990" loc="44:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x40575990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40575b68"/>
        <function-ref name="isInput" scoped="" ref="0x40575c48"/>
        <function-ref name="toggle" scoped="" ref="0x40575d28"/>
        <function-ref name="isOutput" scoped="" ref="0x40575e08"/>
        <function-ref name="get" scoped="" ref="0x40575ee8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40572010"/>
        <function-ref name="set" scoped="" ref="0x405720f0"/>
        <function-ref name="clr" scoped="" ref="0x405721d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x405780a0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x405780a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40578278"/>
        <function-ref name="isInput" scoped="" ref="0x40578358"/>
        <function-ref name="toggle" scoped="" ref="0x40578438"/>
        <function-ref name="isOutput" scoped="" ref="0x40578518"/>
        <function-ref name="get" scoped="" ref="0x405785f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405786d8"/>
        <function-ref name="set" scoped="" ref="0x405787b8"/>
        <function-ref name="clr" scoped="" ref="0x40578898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x4057e750" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x4057e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057e928"/>
        <function-ref name="isInput" scoped="" ref="0x4057ea08"/>
        <function-ref name="toggle" scoped="" ref="0x4057eae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4057ebc8"/>
        <function-ref name="get" scoped="" ref="0x4057eca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057ed88"/>
        <function-ref name="set" scoped="" ref="0x4057ee68"/>
        <function-ref name="clr" scoped="" ref="0x4057d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x40583ea8" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x40583ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4058e0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4058e1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4058e280"/>
        <function-ref name="isOutput" scoped="" ref="0x4058e360"/>
        <function-ref name="get" scoped="" ref="0x4058e440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058e520"/>
        <function-ref name="set" scoped="" ref="0x4058e600"/>
        <function-ref name="clr" scoped="" ref="0x4058e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x4059ace8" loc="100:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x4059ace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4059aec0"/>
        <function-ref name="isInput" scoped="" ref="0x40599010"/>
        <function-ref name="toggle" scoped="" ref="0x405990f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405991d0"/>
        <function-ref name="get" scoped="" ref="0x405992b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40599390"/>
        <function-ref name="set" scoped="" ref="0x40599470"/>
        <function-ref name="clr" scoped="" ref="0x40599550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x4058d2f0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x4058d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4058d4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4058d5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4058d688"/>
        <function-ref name="isOutput" scoped="" ref="0x4058d768"/>
        <function-ref name="get" scoped="" ref="0x4058d848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058d928"/>
        <function-ref name="set" scoped="" ref="0x4058da08"/>
        <function-ref name="clr" scoped="" ref="0x4058dae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x40587670" loc="69:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x40587670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40587848"/>
        <function-ref name="isInput" scoped="" ref="0x40587928"/>
        <function-ref name="toggle" scoped="" ref="0x40587a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40587ae8"/>
        <function-ref name="get" scoped="" ref="0x40587bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40587ca8"/>
        <function-ref name="set" scoped="" ref="0x40587d88"/>
        <function-ref name="clr" scoped="" ref="0x40587e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x40571830" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x40571830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40571a08"/>
        <function-ref name="isInput" scoped="" ref="0x40571ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40571bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40571ca8"/>
        <function-ref name="get" scoped="" ref="0x40571d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40571e68"/>
        <function-ref name="set" scoped="" ref="0x4057c010"/>
        <function-ref name="clr" scoped="" ref="0x4057c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x40577f28" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x40577f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40582110"/>
        <function-ref name="isInput" scoped="" ref="0x405821f0"/>
        <function-ref name="toggle" scoped="" ref="0x405822d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405823b0"/>
        <function-ref name="get" scoped="" ref="0x40582490"/>
        <function-ref name="makeOutput" scoped="" ref="0x40582570"/>
        <function-ref name="set" scoped="" ref="0x40582650"/>
        <function-ref name="clr" scoped="" ref="0x40582730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405c5030" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405c5030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c5208"/>
        <function-ref name="isInput" scoped="" ref="0x405c52e8"/>
        <function-ref name="toggle" scoped="" ref="0x405c53c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405c54a8"/>
        <function-ref name="get" scoped="" ref="0x405c5588"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c5668"/>
        <function-ref name="set" scoped="" ref="0x405c5748"/>
        <function-ref name="clr" scoped="" ref="0x405c5828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x405c3c88" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x405c3c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c3e60"/>
        <function-ref name="isInput" scoped="" ref="0x405c2010"/>
        <function-ref name="toggle" scoped="" ref="0x405c20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405c21d0"/>
        <function-ref name="get" scoped="" ref="0x405c22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c2390"/>
        <function-ref name="set" scoped="" ref="0x405c2470"/>
        <function-ref name="clr" scoped="" ref="0x405c2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405b9cc8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405b9cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405b9ea0"/>
        <function-ref name="isInput" scoped="" ref="0x405c6010"/>
        <function-ref name="toggle" scoped="" ref="0x405c60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405c61d0"/>
        <function-ref name="get" scoped="" ref="0x405c62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c6390"/>
        <function-ref name="set" scoped="" ref="0x405c6470"/>
        <function-ref name="clr" scoped="" ref="0x405c6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405c5988" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405c5988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c5b60"/>
        <function-ref name="isInput" scoped="" ref="0x405c5c40"/>
        <function-ref name="toggle" scoped="" ref="0x405c5d20"/>
        <function-ref name="isOutput" scoped="" ref="0x405c5e00"/>
        <function-ref name="get" scoped="" ref="0x405c5ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c3010"/>
        <function-ref name="set" scoped="" ref="0x405c30f0"/>
        <function-ref name="clr" scoped="" ref="0x405c31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405c26b0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405c26b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c2888"/>
        <function-ref name="isInput" scoped="" ref="0x405c2968"/>
        <function-ref name="toggle" scoped="" ref="0x405c2a48"/>
        <function-ref name="isOutput" scoped="" ref="0x405c2b28"/>
        <function-ref name="get" scoped="" ref="0x405c2c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c2ce8"/>
        <function-ref name="set" scoped="" ref="0x405c2dc8"/>
        <function-ref name="clr" scoped="" ref="0x405c2ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405c66b0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405c66b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c6888"/>
        <function-ref name="isInput" scoped="" ref="0x405c6968"/>
        <function-ref name="toggle" scoped="" ref="0x405c6a48"/>
        <function-ref name="isOutput" scoped="" ref="0x405c6b28"/>
        <function-ref name="get" scoped="" ref="0x405c6c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c6ce8"/>
        <function-ref name="set" scoped="" ref="0x405c6dc8"/>
        <function-ref name="clr" scoped="" ref="0x405c6ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405c3330" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405c3330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c3508"/>
        <function-ref name="isInput" scoped="" ref="0x405c35e8"/>
        <function-ref name="toggle" scoped="" ref="0x405c36c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405c37a8"/>
        <function-ref name="get" scoped="" ref="0x405c3888"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c3968"/>
        <function-ref name="set" scoped="" ref="0x405c3a48"/>
        <function-ref name="clr" scoped="" ref="0x405c3b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405c1030" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405c1030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c1208"/>
        <function-ref name="isInput" scoped="" ref="0x405c12e8"/>
        <function-ref name="toggle" scoped="" ref="0x405c13c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405c14a8"/>
        <function-ref name="get" scoped="" ref="0x405c1588"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c1668"/>
        <function-ref name="set" scoped="" ref="0x405c1748"/>
        <function-ref name="clr" scoped="" ref="0x405c1828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41531228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41531228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41531400"/>
        <function-ref name="isInput" scoped="" ref="0x415314e0"/>
        <function-ref name="toggle" scoped="" ref="0x415315c0"/>
        <function-ref name="isOutput" scoped="" ref="0x415316a0"/>
        <function-ref name="get" scoped="" ref="0x41531780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41531860"/>
        <function-ref name="set" scoped="" ref="0x41531940"/>
        <function-ref name="clr" scoped="" ref="0x41531a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41580c08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41580c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41580de0"/>
        <function-ref name="isInput" scoped="" ref="0x41580ec0"/>
        <function-ref name="toggle" scoped="" ref="0x4157f010"/>
        <function-ref name="isOutput" scoped="" ref="0x4157f0f0"/>
        <function-ref name="get" scoped="" ref="0x4157f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4157f2b0"/>
        <function-ref name="set" scoped="" ref="0x4157f390"/>
        <function-ref name="clr" scoped="" ref="0x4157f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4157e6c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4157e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4157e898"/>
        <function-ref name="isInput" scoped="" ref="0x4157e978"/>
        <function-ref name="toggle" scoped="" ref="0x4157ea58"/>
        <function-ref name="isOutput" scoped="" ref="0x4157eb38"/>
        <function-ref name="get" scoped="" ref="0x4157ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4157ecf8"/>
        <function-ref name="set" scoped="" ref="0x4157edd8"/>
        <function-ref name="clr" scoped="" ref="0x4157eeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4157b0b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4157b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4157b288"/>
        <function-ref name="isInput" scoped="" ref="0x4157b368"/>
        <function-ref name="toggle" scoped="" ref="0x4157b448"/>
        <function-ref name="isOutput" scoped="" ref="0x4157b528"/>
        <function-ref name="get" scoped="" ref="0x4157b608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4157b6e8"/>
        <function-ref name="set" scoped="" ref="0x4157b7c8"/>
        <function-ref name="clr" scoped="" ref="0x4157b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4157aa88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4157aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4157ac60"/>
        <function-ref name="isInput" scoped="" ref="0x4157ad40"/>
        <function-ref name="toggle" scoped="" ref="0x4157ae20"/>
        <function-ref name="isOutput" scoped="" ref="0x4157af00"/>
        <function-ref name="get" scoped="" ref="0x41579010"/>
        <function-ref name="makeOutput" scoped="" ref="0x415790f0"/>
        <function-ref name="set" scoped="" ref="0x415791d0"/>
        <function-ref name="clr" scoped="" ref="0x415792b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41578538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41578538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41578710"/>
        <function-ref name="isInput" scoped="" ref="0x415787f0"/>
        <function-ref name="toggle" scoped="" ref="0x415788d0"/>
        <function-ref name="isOutput" scoped="" ref="0x415789b0"/>
        <function-ref name="get" scoped="" ref="0x41578a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41578b70"/>
        <function-ref name="set" scoped="" ref="0x41578c50"/>
        <function-ref name="clr" scoped="" ref="0x41578d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41576010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41576010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415761e8"/>
        <function-ref name="isInput" scoped="" ref="0x415762c8"/>
        <function-ref name="toggle" scoped="" ref="0x415763a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41576488"/>
        <function-ref name="get" scoped="" ref="0x41576568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41576648"/>
        <function-ref name="set" scoped="" ref="0x41576728"/>
        <function-ref name="clr" scoped="" ref="0x41576808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415759e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415759e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41575bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41575ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41575d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41575e60"/>
        <function-ref name="get" scoped="" ref="0x41574010"/>
        <function-ref name="makeOutput" scoped="" ref="0x415740f0"/>
        <function-ref name="set" scoped="" ref="0x415741d0"/>
        <function-ref name="clr" scoped="" ref="0x415742b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405cb860" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405cb860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405cba38"/>
        <function-ref name="isInput" scoped="" ref="0x405cbb18"/>
        <function-ref name="toggle" scoped="" ref="0x405cbbf8"/>
        <function-ref name="isOutput" scoped="" ref="0x405cbcd8"/>
        <function-ref name="get" scoped="" ref="0x405cbdb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cbe98"/>
        <function-ref name="set" scoped="" ref="0x405ca010"/>
        <function-ref name="clr" scoped="" ref="0x405ca0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x405c95d0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x405c95d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c97a8"/>
        <function-ref name="isInput" scoped="" ref="0x405c9888"/>
        <function-ref name="toggle" scoped="" ref="0x405c9968"/>
        <function-ref name="isOutput" scoped="" ref="0x405c9a48"/>
        <function-ref name="get" scoped="" ref="0x405c9b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c9c08"/>
        <function-ref name="set" scoped="" ref="0x405c9ce8"/>
        <function-ref name="clr" scoped="" ref="0x405c9dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405cc5a0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405cc5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405cc778"/>
        <function-ref name="isInput" scoped="" ref="0x405cc858"/>
        <function-ref name="toggle" scoped="" ref="0x405cc938"/>
        <function-ref name="isOutput" scoped="" ref="0x405cca18"/>
        <function-ref name="get" scoped="" ref="0x405ccaf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ccbd8"/>
        <function-ref name="set" scoped="" ref="0x405cccb8"/>
        <function-ref name="clr" scoped="" ref="0x405ccd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405ca250" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405ca250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ca428"/>
        <function-ref name="isInput" scoped="" ref="0x405ca508"/>
        <function-ref name="toggle" scoped="" ref="0x405ca5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x405ca6c8"/>
        <function-ref name="get" scoped="" ref="0x405ca7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ca888"/>
        <function-ref name="set" scoped="" ref="0x405ca968"/>
        <function-ref name="clr" scoped="" ref="0x405caa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405c9f28" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405c9f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c8110"/>
        <function-ref name="isInput" scoped="" ref="0x405c81f0"/>
        <function-ref name="toggle" scoped="" ref="0x405c82d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405c83b0"/>
        <function-ref name="get" scoped="" ref="0x405c8490"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c8570"/>
        <function-ref name="set" scoped="" ref="0x405c8650"/>
        <function-ref name="clr" scoped="" ref="0x405c8730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405ccef8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405ccef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405cb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x405cb1c0"/>
        <function-ref name="toggle" scoped="" ref="0x405cb2a0"/>
        <function-ref name="isOutput" scoped="" ref="0x405cb380"/>
        <function-ref name="get" scoped="" ref="0x405cb460"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cb540"/>
        <function-ref name="set" scoped="" ref="0x405cb620"/>
        <function-ref name="clr" scoped="" ref="0x405cb700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405caba8" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405caba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405cad80"/>
        <function-ref name="isInput" scoped="" ref="0x405cae60"/>
        <function-ref name="toggle" scoped="" ref="0x405c9010"/>
        <function-ref name="isOutput" scoped="" ref="0x405c90f0"/>
        <function-ref name="get" scoped="" ref="0x405c91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c92b0"/>
        <function-ref name="set" scoped="" ref="0x405c9390"/>
        <function-ref name="clr" scoped="" ref="0x405c9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405c8890" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405c8890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c8a68"/>
        <function-ref name="isInput" scoped="" ref="0x405c8b48"/>
        <function-ref name="toggle" scoped="" ref="0x405c8c28"/>
        <function-ref name="isOutput" scoped="" ref="0x405c8d08"/>
        <function-ref name="get" scoped="" ref="0x405c8de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c8ec8"/>
        <function-ref name="set" scoped="" ref="0x405c7010"/>
        <function-ref name="clr" scoped="" ref="0x405c70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41598de8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41598de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41594010"/>
        <function-ref name="isInput" scoped="" ref="0x415940f0"/>
        <function-ref name="toggle" scoped="" ref="0x415941d0"/>
        <function-ref name="isOutput" scoped="" ref="0x415942b0"/>
        <function-ref name="get" scoped="" ref="0x41594390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41594470"/>
        <function-ref name="set" scoped="" ref="0x41594550"/>
        <function-ref name="clr" scoped="" ref="0x41594630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415937f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415937f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415939d0"/>
        <function-ref name="isInput" scoped="" ref="0x41593ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41593b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41593c70"/>
        <function-ref name="get" scoped="" ref="0x41593d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41593e30"/>
        <function-ref name="set" scoped="" ref="0x41593f10"/>
        <function-ref name="clr" scoped="" ref="0x41592010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41591228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41591228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41591400"/>
        <function-ref name="isInput" scoped="" ref="0x415914e0"/>
        <function-ref name="toggle" scoped="" ref="0x415915c0"/>
        <function-ref name="isOutput" scoped="" ref="0x415916a0"/>
        <function-ref name="get" scoped="" ref="0x41591780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41591860"/>
        <function-ref name="set" scoped="" ref="0x41591940"/>
        <function-ref name="clr" scoped="" ref="0x41591a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41590c08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41590c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41590de0"/>
        <function-ref name="isInput" scoped="" ref="0x41590ec0"/>
        <function-ref name="toggle" scoped="" ref="0x4158f010"/>
        <function-ref name="isOutput" scoped="" ref="0x4158f0f0"/>
        <function-ref name="get" scoped="" ref="0x4158f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4158f2b0"/>
        <function-ref name="set" scoped="" ref="0x4158f390"/>
        <function-ref name="clr" scoped="" ref="0x4158f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4158e6c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4158e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4158e898"/>
        <function-ref name="isInput" scoped="" ref="0x4158e978"/>
        <function-ref name="toggle" scoped="" ref="0x4158ea58"/>
        <function-ref name="isOutput" scoped="" ref="0x4158eb38"/>
        <function-ref name="get" scoped="" ref="0x4158ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4158ecf8"/>
        <function-ref name="set" scoped="" ref="0x4158edd8"/>
        <function-ref name="clr" scoped="" ref="0x4158eeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4158c0b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4158c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4158c288"/>
        <function-ref name="isInput" scoped="" ref="0x4158c368"/>
        <function-ref name="toggle" scoped="" ref="0x4158c448"/>
        <function-ref name="isOutput" scoped="" ref="0x4158c528"/>
        <function-ref name="get" scoped="" ref="0x4158c608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4158c6e8"/>
        <function-ref name="set" scoped="" ref="0x4158c7c8"/>
        <function-ref name="clr" scoped="" ref="0x4158c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4158ba88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4158ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4158bc60"/>
        <function-ref name="isInput" scoped="" ref="0x4158bd40"/>
        <function-ref name="toggle" scoped="" ref="0x4158be20"/>
        <function-ref name="isOutput" scoped="" ref="0x4158bf00"/>
        <function-ref name="get" scoped="" ref="0x4158a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4158a0f0"/>
        <function-ref name="set" scoped="" ref="0x4158a1d0"/>
        <function-ref name="clr" scoped="" ref="0x4158a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41589538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41589538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41589710"/>
        <function-ref name="isInput" scoped="" ref="0x415897f0"/>
        <function-ref name="toggle" scoped="" ref="0x415898d0"/>
        <function-ref name="isOutput" scoped="" ref="0x415899b0"/>
        <function-ref name="get" scoped="" ref="0x41589a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41589b70"/>
        <function-ref name="set" scoped="" ref="0x41589c50"/>
        <function-ref name="clr" scoped="" ref="0x41589d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405d0170" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405d0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d0348"/>
        <function-ref name="isInput" scoped="" ref="0x405d0428"/>
        <function-ref name="toggle" scoped="" ref="0x405d0508"/>
        <function-ref name="isOutput" scoped="" ref="0x405d05e8"/>
        <function-ref name="get" scoped="" ref="0x405d06c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d07a8"/>
        <function-ref name="set" scoped="" ref="0x405d0888"/>
        <function-ref name="clr" scoped="" ref="0x405d0968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x405cfe48" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x405cfe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ce050"/>
        <function-ref name="isInput" scoped="" ref="0x405ce130"/>
        <function-ref name="toggle" scoped="" ref="0x405ce210"/>
        <function-ref name="isOutput" scoped="" ref="0x405ce2f0"/>
        <function-ref name="get" scoped="" ref="0x405ce3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ce4b0"/>
        <function-ref name="set" scoped="" ref="0x405ce590"/>
        <function-ref name="clr" scoped="" ref="0x405ce670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405d2e78" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405d2e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d1070"/>
        <function-ref name="isInput" scoped="" ref="0x405d1150"/>
        <function-ref name="toggle" scoped="" ref="0x405d1230"/>
        <function-ref name="isOutput" scoped="" ref="0x405d1310"/>
        <function-ref name="get" scoped="" ref="0x405d13f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d14d0"/>
        <function-ref name="set" scoped="" ref="0x405d15b0"/>
        <function-ref name="clr" scoped="" ref="0x405d1690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405d0ac8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405d0ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d0ca0"/>
        <function-ref name="isInput" scoped="" ref="0x405d0d80"/>
        <function-ref name="toggle" scoped="" ref="0x405d0e60"/>
        <function-ref name="isOutput" scoped="" ref="0x405cf010"/>
        <function-ref name="get" scoped="" ref="0x405cf0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cf1d0"/>
        <function-ref name="set" scoped="" ref="0x405cf2b0"/>
        <function-ref name="clr" scoped="" ref="0x405cf390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405ce7d0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405ce7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ce9a8"/>
        <function-ref name="isInput" scoped="" ref="0x405cea88"/>
        <function-ref name="toggle" scoped="" ref="0x405ceb68"/>
        <function-ref name="isOutput" scoped="" ref="0x405cec48"/>
        <function-ref name="get" scoped="" ref="0x405ced28"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cee08"/>
        <function-ref name="set" scoped="" ref="0x405ceee8"/>
        <function-ref name="clr" scoped="" ref="0x405db010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405d17f0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405d17f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d19c8"/>
        <function-ref name="isInput" scoped="" ref="0x405d1aa8"/>
        <function-ref name="toggle" scoped="" ref="0x405d1b88"/>
        <function-ref name="isOutput" scoped="" ref="0x405d1c68"/>
        <function-ref name="get" scoped="" ref="0x405d1d48"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d1e28"/>
        <function-ref name="set" scoped="" ref="0x405d1f08"/>
        <function-ref name="clr" scoped="" ref="0x405d0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405cf4f0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405cf4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405cf6c8"/>
        <function-ref name="isInput" scoped="" ref="0x405cf7a8"/>
        <function-ref name="toggle" scoped="" ref="0x405cf888"/>
        <function-ref name="isOutput" scoped="" ref="0x405cf968"/>
        <function-ref name="get" scoped="" ref="0x405cfa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cfb28"/>
        <function-ref name="set" scoped="" ref="0x405cfc08"/>
        <function-ref name="clr" scoped="" ref="0x405cfce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405db170" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405db170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405db348"/>
        <function-ref name="isInput" scoped="" ref="0x405db428"/>
        <function-ref name="toggle" scoped="" ref="0x405db508"/>
        <function-ref name="isOutput" scoped="" ref="0x405db5e8"/>
        <function-ref name="get" scoped="" ref="0x405db6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405db7a8"/>
        <function-ref name="set" scoped="" ref="0x405db888"/>
        <function-ref name="clr" scoped="" ref="0x405db968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415a9938" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415a9938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415a9b10"/>
        <function-ref name="isInput" scoped="" ref="0x415a9bf0"/>
        <function-ref name="toggle" scoped="" ref="0x415a9cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x415a9db0"/>
        <function-ref name="get" scoped="" ref="0x415a9e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x415a8010"/>
        <function-ref name="set" scoped="" ref="0x415a80f0"/>
        <function-ref name="clr" scoped="" ref="0x415a81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415a73b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415a73b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415a7588"/>
        <function-ref name="isInput" scoped="" ref="0x415a7668"/>
        <function-ref name="toggle" scoped="" ref="0x415a7748"/>
        <function-ref name="isOutput" scoped="" ref="0x415a7828"/>
        <function-ref name="get" scoped="" ref="0x415a7908"/>
        <function-ref name="makeOutput" scoped="" ref="0x415a79e8"/>
        <function-ref name="set" scoped="" ref="0x415a7ac8"/>
        <function-ref name="clr" scoped="" ref="0x415a7ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415f2d70" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415f2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415f1010"/>
        <function-ref name="isInput" scoped="" ref="0x415f10f0"/>
        <function-ref name="toggle" scoped="" ref="0x415f11d0"/>
        <function-ref name="isOutput" scoped="" ref="0x415f12b0"/>
        <function-ref name="get" scoped="" ref="0x415f1390"/>
        <function-ref name="makeOutput" scoped="" ref="0x415f1470"/>
        <function-ref name="set" scoped="" ref="0x415f1550"/>
        <function-ref name="clr" scoped="" ref="0x415f1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415f07f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415f07f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415f09d0"/>
        <function-ref name="isInput" scoped="" ref="0x415f0ab0"/>
        <function-ref name="toggle" scoped="" ref="0x415f0b90"/>
        <function-ref name="isOutput" scoped="" ref="0x415f0c70"/>
        <function-ref name="get" scoped="" ref="0x415f0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x415f0e30"/>
        <function-ref name="set" scoped="" ref="0x415f0f10"/>
        <function-ref name="clr" scoped="" ref="0x415ef010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415ee228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415ee228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415ee400"/>
        <function-ref name="isInput" scoped="" ref="0x415ee4e0"/>
        <function-ref name="toggle" scoped="" ref="0x415ee5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x415ee6a0"/>
        <function-ref name="get" scoped="" ref="0x415ee780"/>
        <function-ref name="makeOutput" scoped="" ref="0x415ee860"/>
        <function-ref name="set" scoped="" ref="0x415ee940"/>
        <function-ref name="clr" scoped="" ref="0x415eea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415edc08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415edc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415edde0"/>
        <function-ref name="isInput" scoped="" ref="0x415edec0"/>
        <function-ref name="toggle" scoped="" ref="0x415ec010"/>
        <function-ref name="isOutput" scoped="" ref="0x415ec0f0"/>
        <function-ref name="get" scoped="" ref="0x415ec1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x415ec2b0"/>
        <function-ref name="set" scoped="" ref="0x415ec390"/>
        <function-ref name="clr" scoped="" ref="0x415ec470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415eb6c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415eb6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415eb898"/>
        <function-ref name="isInput" scoped="" ref="0x415eb978"/>
        <function-ref name="toggle" scoped="" ref="0x415eba58"/>
        <function-ref name="isOutput" scoped="" ref="0x415ebb38"/>
        <function-ref name="get" scoped="" ref="0x415ebc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x415ebcf8"/>
        <function-ref name="set" scoped="" ref="0x415ebdd8"/>
        <function-ref name="clr" scoped="" ref="0x415ebeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415e90b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415e90b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415e9288"/>
        <function-ref name="isInput" scoped="" ref="0x415e9368"/>
        <function-ref name="toggle" scoped="" ref="0x415e9448"/>
        <function-ref name="isOutput" scoped="" ref="0x415e9528"/>
        <function-ref name="get" scoped="" ref="0x415e9608"/>
        <function-ref name="makeOutput" scoped="" ref="0x415e96e8"/>
        <function-ref name="set" scoped="" ref="0x415e97c8"/>
        <function-ref name="clr" scoped="" ref="0x415e98a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405d69e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405d69e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d6bc0"/>
        <function-ref name="isInput" scoped="" ref="0x405d6ca0"/>
        <function-ref name="toggle" scoped="" ref="0x405d6d80"/>
        <function-ref name="isOutput" scoped="" ref="0x405d6e60"/>
        <function-ref name="get" scoped="" ref="0x405d5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d50f0"/>
        <function-ref name="set" scoped="" ref="0x405d51d0"/>
        <function-ref name="clr" scoped="" ref="0x405d52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x405e2790" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x405e2790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e2968"/>
        <function-ref name="isInput" scoped="" ref="0x405e2a48"/>
        <function-ref name="toggle" scoped="" ref="0x405e2b28"/>
        <function-ref name="isOutput" scoped="" ref="0x405e2c08"/>
        <function-ref name="get" scoped="" ref="0x405e2ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e2dc8"/>
        <function-ref name="set" scoped="" ref="0x405e2ea8"/>
        <function-ref name="clr" scoped="" ref="0x405e1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405d76f8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405d76f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d78d0"/>
        <function-ref name="isInput" scoped="" ref="0x405d79b0"/>
        <function-ref name="toggle" scoped="" ref="0x405d7a90"/>
        <function-ref name="isOutput" scoped="" ref="0x405d7b70"/>
        <function-ref name="get" scoped="" ref="0x405d7c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d7d30"/>
        <function-ref name="set" scoped="" ref="0x405d7e10"/>
        <function-ref name="clr" scoped="" ref="0x405d7ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405d5410" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405d5410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d55e8"/>
        <function-ref name="isInput" scoped="" ref="0x405d56c8"/>
        <function-ref name="toggle" scoped="" ref="0x405d57a8"/>
        <function-ref name="isOutput" scoped="" ref="0x405d5888"/>
        <function-ref name="get" scoped="" ref="0x405d5968"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d5a48"/>
        <function-ref name="set" scoped="" ref="0x405d5b28"/>
        <function-ref name="clr" scoped="" ref="0x405d5c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405e1170" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405e1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e1348"/>
        <function-ref name="isInput" scoped="" ref="0x405e1428"/>
        <function-ref name="toggle" scoped="" ref="0x405e1508"/>
        <function-ref name="isOutput" scoped="" ref="0x405e15e8"/>
        <function-ref name="get" scoped="" ref="0x405e16c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e17a8"/>
        <function-ref name="set" scoped="" ref="0x405e1888"/>
        <function-ref name="clr" scoped="" ref="0x405e1968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405d6090" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405d6090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d6268"/>
        <function-ref name="isInput" scoped="" ref="0x405d6348"/>
        <function-ref name="toggle" scoped="" ref="0x405d6428"/>
        <function-ref name="isOutput" scoped="" ref="0x405d6508"/>
        <function-ref name="get" scoped="" ref="0x405d65e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d66c8"/>
        <function-ref name="set" scoped="" ref="0x405d67a8"/>
        <function-ref name="clr" scoped="" ref="0x405d6888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405d5d68" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405d5d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e2010"/>
        <function-ref name="isInput" scoped="" ref="0x405e20f0"/>
        <function-ref name="toggle" scoped="" ref="0x405e21d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405e22b0"/>
        <function-ref name="get" scoped="" ref="0x405e2390"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e2470"/>
        <function-ref name="set" scoped="" ref="0x405e2550"/>
        <function-ref name="clr" scoped="" ref="0x405e2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405e1ac8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405e1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e1ca0"/>
        <function-ref name="isInput" scoped="" ref="0x405e1d80"/>
        <function-ref name="toggle" scoped="" ref="0x405e1e60"/>
        <function-ref name="isOutput" scoped="" ref="0x405e0010"/>
        <function-ref name="get" scoped="" ref="0x405e00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e01d0"/>
        <function-ref name="set" scoped="" ref="0x405e02b0"/>
        <function-ref name="clr" scoped="" ref="0x405e0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4160b538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4160b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4160b710"/>
        <function-ref name="isInput" scoped="" ref="0x4160b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4160b8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4160b9b0"/>
        <function-ref name="get" scoped="" ref="0x4160ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4160bb70"/>
        <function-ref name="set" scoped="" ref="0x4160bc50"/>
        <function-ref name="clr" scoped="" ref="0x4160bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41609010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41609010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416091e8"/>
        <function-ref name="isInput" scoped="" ref="0x416092c8"/>
        <function-ref name="toggle" scoped="" ref="0x416093a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41609488"/>
        <function-ref name="get" scoped="" ref="0x41609568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41609648"/>
        <function-ref name="set" scoped="" ref="0x41609728"/>
        <function-ref name="clr" scoped="" ref="0x41609808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416089e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416089e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41608bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41608ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41608d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41608e60"/>
        <function-ref name="get" scoped="" ref="0x41607010"/>
        <function-ref name="makeOutput" scoped="" ref="0x416070f0"/>
        <function-ref name="set" scoped="" ref="0x416071d0"/>
        <function-ref name="clr" scoped="" ref="0x416072b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41606538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41606538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41606710"/>
        <function-ref name="isInput" scoped="" ref="0x416067f0"/>
        <function-ref name="toggle" scoped="" ref="0x416068d0"/>
        <function-ref name="isOutput" scoped="" ref="0x416069b0"/>
        <function-ref name="get" scoped="" ref="0x41606a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41606b70"/>
        <function-ref name="set" scoped="" ref="0x41606c50"/>
        <function-ref name="clr" scoped="" ref="0x41606d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41604010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41604010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416041e8"/>
        <function-ref name="isInput" scoped="" ref="0x416042c8"/>
        <function-ref name="toggle" scoped="" ref="0x416043a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41604488"/>
        <function-ref name="get" scoped="" ref="0x41604568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41604648"/>
        <function-ref name="set" scoped="" ref="0x41604728"/>
        <function-ref name="clr" scoped="" ref="0x41604808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416039e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416039e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41603bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41603ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41603d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41603e60"/>
        <function-ref name="get" scoped="" ref="0x41602010"/>
        <function-ref name="makeOutput" scoped="" ref="0x416020f0"/>
        <function-ref name="set" scoped="" ref="0x416021d0"/>
        <function-ref name="clr" scoped="" ref="0x416022b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41601538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41601538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41601710"/>
        <function-ref name="isInput" scoped="" ref="0x416017f0"/>
        <function-ref name="toggle" scoped="" ref="0x416018d0"/>
        <function-ref name="isOutput" scoped="" ref="0x416019b0"/>
        <function-ref name="get" scoped="" ref="0x41601a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41601b70"/>
        <function-ref name="set" scoped="" ref="0x41601c50"/>
        <function-ref name="clr" scoped="" ref="0x41601d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415ff010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415ff010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415ff1e8"/>
        <function-ref name="isInput" scoped="" ref="0x415ff2c8"/>
        <function-ref name="toggle" scoped="" ref="0x415ff3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x415ff488"/>
        <function-ref name="get" scoped="" ref="0x415ff568"/>
        <function-ref name="makeOutput" scoped="" ref="0x415ff648"/>
        <function-ref name="set" scoped="" ref="0x415ff728"/>
        <function-ref name="clr" scoped="" ref="0x415ff808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405dc410" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405dc410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405dc5e8"/>
        <function-ref name="isInput" scoped="" ref="0x405dc6c8"/>
        <function-ref name="toggle" scoped="" ref="0x405dc7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x405dc888"/>
        <function-ref name="get" scoped="" ref="0x405dc968"/>
        <function-ref name="makeOutput" scoped="" ref="0x405dca48"/>
        <function-ref name="set" scoped="" ref="0x405dcb28"/>
        <function-ref name="clr" scoped="" ref="0x405dcc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x405e7170" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x405e7170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e7348"/>
        <function-ref name="isInput" scoped="" ref="0x405e7428"/>
        <function-ref name="toggle" scoped="" ref="0x405e7508"/>
        <function-ref name="isOutput" scoped="" ref="0x405e75e8"/>
        <function-ref name="get" scoped="" ref="0x405e76c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e77a8"/>
        <function-ref name="set" scoped="" ref="0x405e7888"/>
        <function-ref name="clr" scoped="" ref="0x405e7968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405dd128" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405dd128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405dd300"/>
        <function-ref name="isInput" scoped="" ref="0x405dd3e0"/>
        <function-ref name="toggle" scoped="" ref="0x405dd4c0"/>
        <function-ref name="isOutput" scoped="" ref="0x405dd5a0"/>
        <function-ref name="get" scoped="" ref="0x405dd680"/>
        <function-ref name="makeOutput" scoped="" ref="0x405dd760"/>
        <function-ref name="set" scoped="" ref="0x405dd840"/>
        <function-ref name="clr" scoped="" ref="0x405dd920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405dcd68" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405dcd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e9010"/>
        <function-ref name="isInput" scoped="" ref="0x405e90f0"/>
        <function-ref name="toggle" scoped="" ref="0x405e91d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405e92b0"/>
        <function-ref name="get" scoped="" ref="0x405e9390"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e9470"/>
        <function-ref name="set" scoped="" ref="0x405e9550"/>
        <function-ref name="clr" scoped="" ref="0x405e9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405e7ac8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405e7ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e7ca0"/>
        <function-ref name="isInput" scoped="" ref="0x405e7d80"/>
        <function-ref name="toggle" scoped="" ref="0x405e7e60"/>
        <function-ref name="isOutput" scoped="" ref="0x405e6010"/>
        <function-ref name="get" scoped="" ref="0x405e60f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e61d0"/>
        <function-ref name="set" scoped="" ref="0x405e62b0"/>
        <function-ref name="clr" scoped="" ref="0x405e6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405dda80" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405dda80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ddc58"/>
        <function-ref name="isInput" scoped="" ref="0x405ddd38"/>
        <function-ref name="toggle" scoped="" ref="0x405dde18"/>
        <function-ref name="isOutput" scoped="" ref="0x405ddef8"/>
        <function-ref name="get" scoped="" ref="0x405dc010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405dc0f0"/>
        <function-ref name="set" scoped="" ref="0x405dc1d0"/>
        <function-ref name="clr" scoped="" ref="0x405dc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405e9790" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405e9790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e9968"/>
        <function-ref name="isInput" scoped="" ref="0x405e9a48"/>
        <function-ref name="toggle" scoped="" ref="0x405e9b28"/>
        <function-ref name="isOutput" scoped="" ref="0x405e9c08"/>
        <function-ref name="get" scoped="" ref="0x405e9ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e9dc8"/>
        <function-ref name="set" scoped="" ref="0x405e9ea8"/>
        <function-ref name="clr" scoped="" ref="0x405e7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405e64f0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405e64f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e66c8"/>
        <function-ref name="isInput" scoped="" ref="0x405e67a8"/>
        <function-ref name="toggle" scoped="" ref="0x405e6888"/>
        <function-ref name="isOutput" scoped="" ref="0x405e6968"/>
        <function-ref name="get" scoped="" ref="0x405e6a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e6b28"/>
        <function-ref name="set" scoped="" ref="0x405e6c08"/>
        <function-ref name="clr" scoped="" ref="0x405e6ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41620418" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41620418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416205f0"/>
        <function-ref name="isInput" scoped="" ref="0x416206d0"/>
        <function-ref name="toggle" scoped="" ref="0x416207b0"/>
        <function-ref name="isOutput" scoped="" ref="0x41620890"/>
        <function-ref name="get" scoped="" ref="0x41620970"/>
        <function-ref name="makeOutput" scoped="" ref="0x41620a50"/>
        <function-ref name="set" scoped="" ref="0x41620b30"/>
        <function-ref name="clr" scoped="" ref="0x41620c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4161fde0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4161fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4161e010"/>
        <function-ref name="isInput" scoped="" ref="0x4161e0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4161e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4161e2b0"/>
        <function-ref name="get" scoped="" ref="0x4161e390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4161e470"/>
        <function-ref name="set" scoped="" ref="0x4161e550"/>
        <function-ref name="clr" scoped="" ref="0x4161e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4161d7f8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4161d7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4161d9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4161dab0"/>
        <function-ref name="toggle" scoped="" ref="0x4161db90"/>
        <function-ref name="isOutput" scoped="" ref="0x4161dc70"/>
        <function-ref name="get" scoped="" ref="0x4161dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4161de30"/>
        <function-ref name="set" scoped="" ref="0x4161df10"/>
        <function-ref name="clr" scoped="" ref="0x4161c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4161b228" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4161b228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4161b400"/>
        <function-ref name="isInput" scoped="" ref="0x4161b4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4161b5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4161b6a0"/>
        <function-ref name="get" scoped="" ref="0x4161b780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4161b860"/>
        <function-ref name="set" scoped="" ref="0x4161b940"/>
        <function-ref name="clr" scoped="" ref="0x4161ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41669c08" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41669c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41669de0"/>
        <function-ref name="isInput" scoped="" ref="0x41669ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41668010"/>
        <function-ref name="isOutput" scoped="" ref="0x416680f0"/>
        <function-ref name="get" scoped="" ref="0x416681d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x416682b0"/>
        <function-ref name="set" scoped="" ref="0x41668390"/>
        <function-ref name="clr" scoped="" ref="0x41668470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416676c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416676c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41667898"/>
        <function-ref name="isInput" scoped="" ref="0x41667978"/>
        <function-ref name="toggle" scoped="" ref="0x41667a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41667b38"/>
        <function-ref name="get" scoped="" ref="0x41667c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41667cf8"/>
        <function-ref name="set" scoped="" ref="0x41667dd8"/>
        <function-ref name="clr" scoped="" ref="0x41667eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416650b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416650b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41665288"/>
        <function-ref name="isInput" scoped="" ref="0x41665368"/>
        <function-ref name="toggle" scoped="" ref="0x41665448"/>
        <function-ref name="isOutput" scoped="" ref="0x41665528"/>
        <function-ref name="get" scoped="" ref="0x41665608"/>
        <function-ref name="makeOutput" scoped="" ref="0x416656e8"/>
        <function-ref name="set" scoped="" ref="0x416657c8"/>
        <function-ref name="clr" scoped="" ref="0x416658a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41664a88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41664a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41664c60"/>
        <function-ref name="isInput" scoped="" ref="0x41664d40"/>
        <function-ref name="toggle" scoped="" ref="0x41664e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41664f00"/>
        <function-ref name="get" scoped="" ref="0x41663010"/>
        <function-ref name="makeOutput" scoped="" ref="0x416630f0"/>
        <function-ref name="set" scoped="" ref="0x416631d0"/>
        <function-ref name="clr" scoped="" ref="0x416632b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405f0e48" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405f0e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ef050"/>
        <function-ref name="isInput" scoped="" ref="0x405ef130"/>
        <function-ref name="toggle" scoped="" ref="0x405ef210"/>
        <function-ref name="isOutput" scoped="" ref="0x405ef2f0"/>
        <function-ref name="get" scoped="" ref="0x405ef3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ef4b0"/>
        <function-ref name="set" scoped="" ref="0x405ef590"/>
        <function-ref name="clr" scoped="" ref="0x405ef670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x405eeac8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x405eeac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405eeca0"/>
        <function-ref name="isInput" scoped="" ref="0x405eed80"/>
        <function-ref name="toggle" scoped="" ref="0x405eee60"/>
        <function-ref name="isOutput" scoped="" ref="0x405ed010"/>
        <function-ref name="get" scoped="" ref="0x405ed0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ed1d0"/>
        <function-ref name="set" scoped="" ref="0x405ed2b0"/>
        <function-ref name="clr" scoped="" ref="0x405ed390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405e3b00" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405e3b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e3cd8"/>
        <function-ref name="isInput" scoped="" ref="0x405e3db8"/>
        <function-ref name="toggle" scoped="" ref="0x405e3e98"/>
        <function-ref name="isOutput" scoped="" ref="0x405f0010"/>
        <function-ref name="get" scoped="" ref="0x405f00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f01d0"/>
        <function-ref name="set" scoped="" ref="0x405f02b0"/>
        <function-ref name="clr" scoped="" ref="0x405f0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405ef7d0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405ef7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ef9a8"/>
        <function-ref name="isInput" scoped="" ref="0x405efa88"/>
        <function-ref name="toggle" scoped="" ref="0x405efb68"/>
        <function-ref name="isOutput" scoped="" ref="0x405efc48"/>
        <function-ref name="get" scoped="" ref="0x405efd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x405efe08"/>
        <function-ref name="set" scoped="" ref="0x405efee8"/>
        <function-ref name="clr" scoped="" ref="0x405ee010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405ed4f0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405ed4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ed6c8"/>
        <function-ref name="isInput" scoped="" ref="0x405ed7a8"/>
        <function-ref name="toggle" scoped="" ref="0x405ed888"/>
        <function-ref name="isOutput" scoped="" ref="0x405ed968"/>
        <function-ref name="get" scoped="" ref="0x405eda48"/>
        <function-ref name="makeOutput" scoped="" ref="0x405edb28"/>
        <function-ref name="set" scoped="" ref="0x405edc08"/>
        <function-ref name="clr" scoped="" ref="0x405edce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405f04f0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405f04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f06c8"/>
        <function-ref name="isInput" scoped="" ref="0x405f07a8"/>
        <function-ref name="toggle" scoped="" ref="0x405f0888"/>
        <function-ref name="isOutput" scoped="" ref="0x405f0968"/>
        <function-ref name="get" scoped="" ref="0x405f0a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f0b28"/>
        <function-ref name="set" scoped="" ref="0x405f0c08"/>
        <function-ref name="clr" scoped="" ref="0x405f0ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405ee170" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405ee170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ee348"/>
        <function-ref name="isInput" scoped="" ref="0x405ee428"/>
        <function-ref name="toggle" scoped="" ref="0x405ee508"/>
        <function-ref name="isOutput" scoped="" ref="0x405ee5e8"/>
        <function-ref name="get" scoped="" ref="0x405ee6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ee7a8"/>
        <function-ref name="set" scoped="" ref="0x405ee888"/>
        <function-ref name="clr" scoped="" ref="0x405ee968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405ede48" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405ede48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ec050"/>
        <function-ref name="isInput" scoped="" ref="0x405ec130"/>
        <function-ref name="toggle" scoped="" ref="0x405ec210"/>
        <function-ref name="isOutput" scoped="" ref="0x405ec2f0"/>
        <function-ref name="get" scoped="" ref="0x405ec3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ec4b0"/>
        <function-ref name="set" scoped="" ref="0x405ec590"/>
        <function-ref name="clr" scoped="" ref="0x405ec670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416876c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416876c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41687898"/>
        <function-ref name="isInput" scoped="" ref="0x41687978"/>
        <function-ref name="toggle" scoped="" ref="0x41687a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41687b38"/>
        <function-ref name="get" scoped="" ref="0x41687c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41687cf8"/>
        <function-ref name="set" scoped="" ref="0x41687dd8"/>
        <function-ref name="clr" scoped="" ref="0x41687eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416850b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416850b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41685288"/>
        <function-ref name="isInput" scoped="" ref="0x41685368"/>
        <function-ref name="toggle" scoped="" ref="0x41685448"/>
        <function-ref name="isOutput" scoped="" ref="0x41685528"/>
        <function-ref name="get" scoped="" ref="0x41685608"/>
        <function-ref name="makeOutput" scoped="" ref="0x416856e8"/>
        <function-ref name="set" scoped="" ref="0x416857c8"/>
        <function-ref name="clr" scoped="" ref="0x416858a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41684a88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41684a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41684c60"/>
        <function-ref name="isInput" scoped="" ref="0x41684d40"/>
        <function-ref name="toggle" scoped="" ref="0x41684e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41684f00"/>
        <function-ref name="get" scoped="" ref="0x41683010"/>
        <function-ref name="makeOutput" scoped="" ref="0x416830f0"/>
        <function-ref name="set" scoped="" ref="0x416831d0"/>
        <function-ref name="clr" scoped="" ref="0x416832b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41682538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41682538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41682710"/>
        <function-ref name="isInput" scoped="" ref="0x416827f0"/>
        <function-ref name="toggle" scoped="" ref="0x416828d0"/>
        <function-ref name="isOutput" scoped="" ref="0x416829b0"/>
        <function-ref name="get" scoped="" ref="0x41682a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41682b70"/>
        <function-ref name="set" scoped="" ref="0x41682c50"/>
        <function-ref name="clr" scoped="" ref="0x41682d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41680010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41680010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416801e8"/>
        <function-ref name="isInput" scoped="" ref="0x416802c8"/>
        <function-ref name="toggle" scoped="" ref="0x416803a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41680488"/>
        <function-ref name="get" scoped="" ref="0x41680568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41680648"/>
        <function-ref name="set" scoped="" ref="0x41680728"/>
        <function-ref name="clr" scoped="" ref="0x41680808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4167f9e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4167f9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4167fbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4167fca0"/>
        <function-ref name="toggle" scoped="" ref="0x4167fd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4167fe60"/>
        <function-ref name="get" scoped="" ref="0x4167e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4167e0f0"/>
        <function-ref name="set" scoped="" ref="0x4167e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4167e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4167d538" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4167d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4167d710"/>
        <function-ref name="isInput" scoped="" ref="0x4167d7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4167d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4167d9b0"/>
        <function-ref name="get" scoped="" ref="0x4167da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4167db70"/>
        <function-ref name="set" scoped="" ref="0x4167dc50"/>
        <function-ref name="clr" scoped="" ref="0x4167dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4167b010" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4167b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4167b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4167b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4167b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4167b488"/>
        <function-ref name="get" scoped="" ref="0x4167b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4167b648"/>
        <function-ref name="set" scoped="" ref="0x4167b728"/>
        <function-ref name="clr" scoped="" ref="0x4167b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x405f5010" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x405f5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f51e8"/>
        <function-ref name="isInput" scoped="" ref="0x405f52c8"/>
        <function-ref name="toggle" scoped="" ref="0x405f53a8"/>
        <function-ref name="isOutput" scoped="" ref="0x405f5488"/>
        <function-ref name="get" scoped="" ref="0x405f5568"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f5648"/>
        <function-ref name="set" scoped="" ref="0x405f5728"/>
        <function-ref name="clr" scoped="" ref="0x405f5808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406037b8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406037b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40603990"/>
        <function-ref name="isInput" scoped="" ref="0x40603a70"/>
        <function-ref name="toggle" scoped="" ref="0x40603b50"/>
        <function-ref name="isOutput" scoped="" ref="0x40603c30"/>
        <function-ref name="get" scoped="" ref="0x40603d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x40603df0"/>
        <function-ref name="set" scoped="" ref="0x40603ed0"/>
        <function-ref name="clr" scoped="" ref="0x40602010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40600010" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40600010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406001e8"/>
        <function-ref name="isInput" scoped="" ref="0x406002c8"/>
        <function-ref name="toggle" scoped="" ref="0x406003a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40600488"/>
        <function-ref name="get" scoped="" ref="0x40600568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40600648"/>
        <function-ref name="set" scoped="" ref="0x40600728"/>
        <function-ref name="clr" scoped="" ref="0x40600808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4060b7b8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4060b7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4060b990"/>
        <function-ref name="isInput" scoped="" ref="0x4060ba70"/>
        <function-ref name="toggle" scoped="" ref="0x4060bb50"/>
        <function-ref name="isOutput" scoped="" ref="0x4060bc30"/>
        <function-ref name="get" scoped="" ref="0x4060bd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x4060bdf0"/>
        <function-ref name="set" scoped="" ref="0x4060bed0"/>
        <function-ref name="clr" scoped="" ref="0x4060a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40608010" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40608010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406081e8"/>
        <function-ref name="isInput" scoped="" ref="0x406082c8"/>
        <function-ref name="toggle" scoped="" ref="0x406083a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40608488"/>
        <function-ref name="get" scoped="" ref="0x40608568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40608648"/>
        <function-ref name="set" scoped="" ref="0x40608728"/>
        <function-ref name="clr" scoped="" ref="0x40608808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406067b8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406067b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40606990"/>
        <function-ref name="isInput" scoped="" ref="0x40606a70"/>
        <function-ref name="toggle" scoped="" ref="0x40606b50"/>
        <function-ref name="isOutput" scoped="" ref="0x40606c30"/>
        <function-ref name="get" scoped="" ref="0x40606d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x40606df0"/>
        <function-ref name="set" scoped="" ref="0x40606ed0"/>
        <function-ref name="clr" scoped="" ref="0x40613010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40610080" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40610080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40610258"/>
        <function-ref name="isInput" scoped="" ref="0x40610338"/>
        <function-ref name="toggle" scoped="" ref="0x40610418"/>
        <function-ref name="isOutput" scoped="" ref="0x406104f8"/>
        <function-ref name="get" scoped="" ref="0x406105d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406106b8"/>
        <function-ref name="set" scoped="" ref="0x40610798"/>
        <function-ref name="clr" scoped="" ref="0x40610878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4060e840" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4060e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4060ea18"/>
        <function-ref name="isInput" scoped="" ref="0x4060eaf8"/>
        <function-ref name="toggle" scoped="" ref="0x4060ebd8"/>
        <function-ref name="isOutput" scoped="" ref="0x4060ecb8"/>
        <function-ref name="get" scoped="" ref="0x4060ed98"/>
        <function-ref name="makeOutput" scoped="" ref="0x4060ee78"/>
        <function-ref name="set" scoped="" ref="0x4060d010"/>
        <function-ref name="clr" scoped="" ref="0x4060d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406180b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406180b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40618288"/>
        <function-ref name="isInput" scoped="" ref="0x40618368"/>
        <function-ref name="toggle" scoped="" ref="0x40618448"/>
        <function-ref name="isOutput" scoped="" ref="0x40618528"/>
        <function-ref name="get" scoped="" ref="0x40618608"/>
        <function-ref name="makeOutput" scoped="" ref="0x406186e8"/>
        <function-ref name="set" scoped="" ref="0x406187c8"/>
        <function-ref name="clr" scoped="" ref="0x406188a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40616880" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40616880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40616a58"/>
        <function-ref name="isInput" scoped="" ref="0x40616b38"/>
        <function-ref name="toggle" scoped="" ref="0x40616c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40616cf8"/>
        <function-ref name="get" scoped="" ref="0x40616dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40616eb8"/>
        <function-ref name="set" scoped="" ref="0x40615010"/>
        <function-ref name="clr" scoped="" ref="0x406150f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406210b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406210b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40621288"/>
        <function-ref name="isInput" scoped="" ref="0x40621368"/>
        <function-ref name="toggle" scoped="" ref="0x40621448"/>
        <function-ref name="isOutput" scoped="" ref="0x40621528"/>
        <function-ref name="get" scoped="" ref="0x40621608"/>
        <function-ref name="makeOutput" scoped="" ref="0x406216e8"/>
        <function-ref name="set" scoped="" ref="0x406217c8"/>
        <function-ref name="clr" scoped="" ref="0x406218a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4061e880" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4061e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061ea58"/>
        <function-ref name="isInput" scoped="" ref="0x4061eb38"/>
        <function-ref name="toggle" scoped="" ref="0x4061ec18"/>
        <function-ref name="isOutput" scoped="" ref="0x4061ecf8"/>
        <function-ref name="get" scoped="" ref="0x4061edd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061eeb8"/>
        <function-ref name="set" scoped="" ref="0x4061d010"/>
        <function-ref name="clr" scoped="" ref="0x4061d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4061b0b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4061b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061b288"/>
        <function-ref name="isInput" scoped="" ref="0x4061b368"/>
        <function-ref name="toggle" scoped="" ref="0x4061b448"/>
        <function-ref name="isOutput" scoped="" ref="0x4061b528"/>
        <function-ref name="get" scoped="" ref="0x4061b608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061b6e8"/>
        <function-ref name="set" scoped="" ref="0x4061b7c8"/>
        <function-ref name="clr" scoped="" ref="0x4061b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40626880" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40626880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40626a58"/>
        <function-ref name="isInput" scoped="" ref="0x40626b38"/>
        <function-ref name="toggle" scoped="" ref="0x40626c18"/>
        <function-ref name="isOutput" scoped="" ref="0x40626cf8"/>
        <function-ref name="get" scoped="" ref="0x40626dd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40626eb8"/>
        <function-ref name="set" scoped="" ref="0x40625010"/>
        <function-ref name="clr" scoped="" ref="0x406250f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x40639138" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x40639138"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40639310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4063cd40" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4063cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4063cf18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40639540" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40639540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40639718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40556cc8" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40556cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40556ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x405568c0" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x405568c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40556a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40653ea0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40653ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406450c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40649e08" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40649e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40646010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40653740" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40653740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40653918"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x406539f8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40653ad8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40653bb8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40653c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40645db8" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40645db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40651010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x406459e8" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x406459e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40645bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4064e828" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4064e828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4064ea00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x40651de8" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x40651de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064e010"/>
        <function-ref name="isInput" scoped="" ref="0x4064e0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4064e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4064e2b0"/>
        <function-ref name="get" scoped="" ref="0x4064e390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064e470"/>
        <function-ref name="set" scoped="" ref="0x4064e550"/>
        <function-ref name="clr" scoped="" ref="0x4064e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x406519c0" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x406519c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40651b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40659910" loc="61:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40659910"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x404087d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x404087d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40659ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40659cc0" loc="62:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40659cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40659e98"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40658010"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x406580f0"/>
        <function-ref name="actualMicro" scoped="" ref="0x406581d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x406582b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40667508" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40667508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406676e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40648780" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40648780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40648958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40667100" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40667100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406672d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x40648b18" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40648b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40648cf0"/>
        <function-ref name="taskLoop" scoped="" ref="0x40648dd0"/>
        <function-ref name="runNextTask" scoped="" ref="0x40648eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40421c30" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40421c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40421e08"/>
        <function-ref name="runTask" scoped="" ref="0x40421ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4041f528" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4041f528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4041f700"/>
        <function-ref name="taskLoop" scoped="" ref="0x4041f7e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x4041f8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4048ec28" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4048ec28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4048ee00"/>
        <function-ref name="runTask" scoped="" ref="0x4048eee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x4048d8a8" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4048d8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4048da80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4048e3f0" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4048e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4048e5c8"/>
        <function-ref name="taskLoop" scoped="" ref="0x4048e6a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x4048e788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x404a2f10" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x404a2f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4049c108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x4047d470" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4047d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4047d648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x404a2148" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x404a2148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x404a2320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4067a1b8" loc="41:../../Deluge/DelugeC.nc">
      <component-ref qname="DelugeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4067a1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4067a390"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4067a470"/>
        <function-ref name="led1On" scoped="" ref="0x4067a550"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4067a630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4067a710"/>
        <function-ref name="get" scoped="" ref="0x4067a7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x4067a8d0"/>
        <function-ref name="led2Off" scoped="" ref="0x4067ac50"/>
        <function-ref name="set" scoped="" ref="0x4067a9b0"/>
        <function-ref name="led0On" scoped="" ref="0x4067aa90"/>
        <function-ref name="led2On" scoped="" ref="0x4067ab70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x4069fa28" loc="44:../../Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x4069fa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4069fc00"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x4069fce0"/>
        <function-ref name="computeCrc" scoped="" ref="0x4069fdc0"/>
        <function-ref name="getSize" scoped="" ref="0x4069fea0"/>
        <function-ref name="readDone" scoped="" ref="0x4068e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x40689120" loc="45:../../Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40689120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x406892f8"/>
        <function-ref name="writeDone" scoped="" ref="0x406893d8"/>
        <function-ref name="erase" scoped="" ref="0x406894b8"/>
        <function-ref name="eraseDone" scoped="" ref="0x40689598"/>
        <function-ref name="write" scoped="" ref="0x40689678"/>
        <function-ref name="sync" scoped="" ref="0x40689758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x406898c8" loc="46:../../Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x406898c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40689aa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40689b80"/>
        <function-ref name="led1On" scoped="" ref="0x40689c60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40689d40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40689e20"/>
        <function-ref name="get" scoped="" ref="0x40689f00"/>
        <function-ref name="led1Off" scoped="" ref="0x4069e010"/>
        <function-ref name="led2Off" scoped="" ref="0x4069e390"/>
        <function-ref name="set" scoped="" ref="0x4069e0f0"/>
        <function-ref name="led0On" scoped="" ref="0x4069e1d0"/>
        <function-ref name="led2On" scoped="" ref="0x4069e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ObjectTransfer" ref="0x4068bcb0" loc="42:../../Deluge/ObjectTransferC.nc">
      <component-ref qname="ObjectTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x4068bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4068be88"/>
        <function-ref name="receiveDone" scoped="" ref="0x4068f010"/>
        <function-ref name="publish" scoped="" ref="0x4068f0f0"/>
        <function-ref name="stop" scoped="" ref="0x4068f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x406a3b90" loc="50:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406a3b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406a16a8"/>
        <function-ref name="fired" scoped="" ref="0x406a2938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406a1068"/>
        <function-ref name="isOneShot" scoped="" ref="0x406a2de8"/>
        <function-ref name="getdt" scoped="" ref="0x406a1b58"/>
        <function-ref name="gett0" scoped="" ref="0x406a1900"/>
        <function-ref name="isRunning" scoped="" ref="0x406a2b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406a21e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406a1388"/>
        <function-ref name="startOneShot" scoped="" ref="0x406a2460"/>
        <function-ref name="stop" scoped="" ref="0x406a26e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendAdvMsg" ref="0x406b6610" loc="54:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendAdvMsg" scoped="" ref="0x406b6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406b67e8"/>
        <function-ref name="getPayload" scoped="" ref="0x406b68c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406b69a8"/>
        <function-ref name="cancel" scoped="" ref="0x406b6a88"/>
        <function-ref name="sendDone" scoped="" ref="0x406b6b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x406a3638" loc="49:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x406a3638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x406a3810"/>
        <function-ref name="rand32" scoped="" ref="0x406a38f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveAdvMsg" ref="0x406b6d98" loc="55:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveAdvMsg" scoped="" ref="0x406b6d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406ae010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x406ae4c8" loc="57:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x406ae4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x406ae6a0"/>
        <function-ref name="writeDone" scoped="" ref="0x406ae780"/>
        <function-ref name="erase" scoped="" ref="0x406ae860"/>
        <function-ref name="eraseDone" scoped="" ref="0x406ae940"/>
        <function-ref name="write" scoped="" ref="0x406aea20"/>
        <function-ref name="sync" scoped="" ref="0x406aeb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalObjRecvDone" ref="0x406c17b8" loc="111:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalObjRecvDone" scoped="" ref="0x406c17b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406c1990"/>
        <function-ref name="runTask" scoped="" ref="0x406c1a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x406aec70" loc="59:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x406aec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x406aee48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x406aef28"/>
        <function-ref name="led1On" scoped="" ref="0x406aa018"/>
        <function-ref name="led1Toggle" scoped="" ref="0x406aa0f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x406aa1d8"/>
        <function-ref name="get" scoped="" ref="0x406aa2b8"/>
        <function-ref name="led1Off" scoped="" ref="0x406aa398"/>
        <function-ref name="led2Off" scoped="" ref="0x406aa718"/>
        <function-ref name="set" scoped="" ref="0x406aa478"/>
        <function-ref name="led0On" scoped="" ref="0x406aa558"/>
        <function-ref name="led2On" scoped="" ref="0x406aa638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugePageTransfer" ref="0x406abb38" loc="51:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x406abb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x406af2b0"/>
        <function-ref name="dataAvailable" scoped="" ref="0x406abdf0"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x406abed0"/>
        <function-ref name="receivedPage" scoped="" ref="0x406af010"/>
        <function-ref name="setImgNum" scoped="" ref="0x406af0f0"/>
        <function-ref name="isTransferring" scoped="" ref="0x406af1d0"/>
        <function-ref name="stop" scoped="" ref="0x406abd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Crc" ref="0x406b6150" loc="52:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x406b6150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x406b6328"/>
        <function-ref name="crc16" scoped="" ref="0x406b6408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ObjectTransfer" ref="0x406a3010" loc="47:../../Deluge/ObjectTransferP.nc">
      <component-ref qname="ObjectTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x406a3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406a31e8"/>
        <function-ref name="receiveDone" scoped="" ref="0x406a32c8"/>
        <function-ref name="publish" scoped="" ref="0x406a33a8"/>
        <function-ref name="stop" scoped="" ref="0x406a3488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendReqMsg" ref="0x406f7b58" loc="47:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendReqMsg" scoped="" ref="0x406f7b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406f7d30"/>
        <function-ref name="getPayload" scoped="" ref="0x406f7e10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406f7ef0"/>
        <function-ref name="cancel" scoped="" ref="0x406f6010"/>
        <function-ref name="sendDone" scoped="" ref="0x406f60f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x406e8950" loc="41:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x406e8950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406e8b28"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x406e8c08"/>
        <function-ref name="computeCrc" scoped="" ref="0x406e8ce8"/>
        <function-ref name="getSize" scoped="" ref="0x406e8dc8"/>
        <function-ref name="readDone" scoped="" ref="0x406e8ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x406e7370" loc="42:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x406e7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x406e7548"/>
        <function-ref name="writeDone" scoped="" ref="0x406e7628"/>
        <function-ref name="erase" scoped="" ref="0x406e7708"/>
        <function-ref name="eraseDone" scoped="" ref="0x406e77e8"/>
        <function-ref name="write" scoped="" ref="0x406e78c8"/>
        <function-ref name="sync" scoped="" ref="0x406e79a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveDataMsg" ref="0x406e7be0" loc="44:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDataMsg" scoped="" ref="0x406e7be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406e7db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveReqMsg" ref="0x406f7010" loc="45:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveReqMsg" scoped="" ref="0x406f7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406f71e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDataMsg" ref="0x406f73f8" loc="46:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendDataMsg" scoped="" ref="0x406f73f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406f75d0"/>
        <function-ref name="getPayload" scoped="" ref="0x406f76b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406f7790"/>
        <function-ref name="cancel" scoped="" ref="0x406f7870"/>
        <function-ref name="sendDone" scoped="" ref="0x406f7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugePageTransfer" ref="0x406a8cd8" loc="39:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x406a8cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x406e8470"/>
        <function-ref name="dataAvailable" scoped="" ref="0x406e8010"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x406e80f0"/>
        <function-ref name="receivedPage" scoped="" ref="0x406e81d0"/>
        <function-ref name="setImgNum" scoped="" ref="0x406e82b0"/>
        <function-ref name="isTransferring" scoped="" ref="0x406e8390"/>
        <function-ref name="stop" scoped="" ref="0x406a8eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x406f9be8" loc="49:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406f9be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x406f9dc0"/>
        <function-ref name="noAck" scoped="" ref="0x406f9ea0"/>
        <function-ref name="wasAcked" scoped="" ref="0x406f4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x406f4180" loc="50:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x406f4180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x406f4358"/>
        <function-ref name="led0Toggle" scoped="" ref="0x406f4438"/>
        <function-ref name="led1On" scoped="" ref="0x406f4518"/>
        <function-ref name="led1Toggle" scoped="" ref="0x406f45f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x406f46d8"/>
        <function-ref name="get" scoped="" ref="0x406f47b8"/>
        <function-ref name="led1Off" scoped="" ref="0x406f4898"/>
        <function-ref name="led2Off" scoped="" ref="0x406f4c18"/>
        <function-ref name="set" scoped="" ref="0x406f4978"/>
        <function-ref name="led0On" scoped="" ref="0x406f4a58"/>
        <function-ref name="led2On" scoped="" ref="0x406f4b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x406fdaa0" loc="48:../../Deluge/DelugePageTransferC.nc">
      <component-ref qname="DelugePageTransferC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406fdaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406fdc78"/>
        <function-ref name="source" scoped="" ref="0x406fdd58"/>
        <function-ref name="address" scoped="" ref="0x406fde38"/>
        <function-ref name="destination" scoped="" ref="0x406fdf18"/>
        <function-ref name="setSource" scoped="" ref="0x406f5010"/>
        <function-ref name="setDestination" scoped="" ref="0x406f50f0"/>
        <function-ref name="type" scoped="" ref="0x406f51d0"/>
        <function-ref name="setType" scoped="" ref="0x406f52b0"/>
        <function-ref name="isForMe" scoped="" ref="0x406f5390"/>
        <function-ref name="setGroup" scoped="" ref="0x406f5470"/>
        <function-ref name="localGroup" scoped="" ref="0x406f5550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40711da8" loc="60:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40711da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4070f010"/>
        <function-ref name="rand32" scoped="" ref="0x4070f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendReqMsg" ref="0x40702098" loc="56:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendReqMsg" scoped="" ref="0x40702098"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40702270"/>
        <function-ref name="getPayload" scoped="" ref="0x40702350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40702430"/>
        <function-ref name="cancel" scoped="" ref="0x40702510"/>
        <function-ref name="sendDone" scoped="" ref="0x407025f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x40704d60" loc="50:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40704d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40707010"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x407070f0"/>
        <function-ref name="computeCrc" scoped="" ref="0x407071d0"/>
        <function-ref name="getSize" scoped="" ref="0x407072b0"/>
        <function-ref name="readDone" scoped="" ref="0x40707390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BitVecUtils" ref="0x40704518" loc="49:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVecUtils" scoped="" ref="0x40704518"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVecUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="indexOf" scoped="" ref="0x407046f0"/>
        <function-ref name="printBitVec" scoped="" ref="0x407047d0"/>
        <function-ref name="countOnes" scoped="" ref="0x407048b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x40707848" loc="51:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40707848"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40707a20"/>
        <function-ref name="writeDone" scoped="" ref="0x40707b00"/>
        <function-ref name="erase" scoped="" ref="0x40707be0"/>
        <function-ref name="eraseDone" scoped="" ref="0x40707cc0"/>
        <function-ref name="write" scoped="" ref="0x40707da0"/>
        <function-ref name="sync" scoped="" ref="0x40707e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveDataMsg" ref="0x407030f0" loc="53:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDataMsg" scoped="" ref="0x407030f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407032c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveReqMsg" ref="0x407034f8" loc="54:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveReqMsg" scoped="" ref="0x407034f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407036d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendDataMsg" ref="0x407038e0" loc="55:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendDataMsg" scoped="" ref="0x407038e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40703ab8"/>
        <function-ref name="getPayload" scoped="" ref="0x40703b98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40703c78"/>
        <function-ref name="cancel" scoped="" ref="0x40703d58"/>
        <function-ref name="sendDone" scoped="" ref="0x40703e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4070f260" loc="62:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4070f260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4070f4b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4070f598"/>
        <function-ref name="led1On" scoped="" ref="0x4070f678"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4070f758"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4070f838"/>
        <function-ref name="get" scoped="" ref="0x4070f918"/>
        <function-ref name="led1Off" scoped="" ref="0x4070f9f8"/>
        <function-ref name="led2Off" scoped="" ref="0x4070fd78"/>
        <function-ref name="set" scoped="" ref="0x4070fad8"/>
        <function-ref name="led0On" scoped="" ref="0x4070fbb8"/>
        <function-ref name="led2On" scoped="" ref="0x4070fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugePageTransfer" ref="0x406fc4b8" loc="47:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugePageTransfer" scoped="" ref="0x406fc4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugePageTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="setWorkingPage" scoped="" ref="0x406fcbd0"/>
        <function-ref name="dataAvailable" scoped="" ref="0x406fc770"/>
        <function-ref name="suppressMsgs" scoped="" ref="0x406fc850"/>
        <function-ref name="receivedPage" scoped="" ref="0x406fc930"/>
        <function-ref name="setImgNum" scoped="" ref="0x406fca10"/>
        <function-ref name="isTransferring" scoped="" ref="0x406fcaf0"/>
        <function-ref name="stop" scoped="" ref="0x406fc690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x407014d0" loc="58:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x407014d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x407016a8"/>
        <function-ref name="noAck" scoped="" ref="0x40701788"/>
        <function-ref name="wasAcked" scoped="" ref="0x40701868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40702788" loc="57:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40702788"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40702960"/>
        <function-ref name="source" scoped="" ref="0x40702a40"/>
        <function-ref name="address" scoped="" ref="0x40702b20"/>
        <function-ref name="destination" scoped="" ref="0x40702c00"/>
        <function-ref name="setSource" scoped="" ref="0x40702ce0"/>
        <function-ref name="setDestination" scoped="" ref="0x40702dc0"/>
        <function-ref name="type" scoped="" ref="0x40702ea0"/>
        <function-ref name="setType" scoped="" ref="0x40701010"/>
        <function-ref name="isForMe" scoped="" ref="0x407010f0"/>
        <function-ref name="setGroup" scoped="" ref="0x407011d0"/>
        <function-ref name="localGroup" scoped="" ref="0x407012b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40701b08" loc="59:../../Deluge/DelugePageTransferP.nc">
      <component-ref qname="DelugePageTransferP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40701b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407116a8"/>
        <function-ref name="fired" scoped="" ref="0x40712938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40711068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40712de8"/>
        <function-ref name="getdt" scoped="" ref="0x40711b58"/>
        <function-ref name="gett0" scoped="" ref="0x40711900"/>
        <function-ref name="isRunning" scoped="" ref="0x40712b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407121e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40711388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40712460"/>
        <function-ref name="stop" scoped="" ref="0x407126e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x407667f8" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x407667f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x407669d0"/>
        <function-ref name="rand32" scoped="" ref="0x40766ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40755f20" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40755f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40766560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40755a00" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40755a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40755bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x407612a8" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x407612a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40761480"/>
        <function-ref name="rand32" scoped="" ref="0x40761560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40763988" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40763988"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40761010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40763468" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40763468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40763640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVecUtils" ref="0x4076e150" loc="42:../../Deluge/BitVecUtilsC.nc">
      <component-ref qname="BitVecUtilsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVecUtils" scoped="" ref="0x4076e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVecUtils"/>
      </instance>
      <interface-functions>
        <function-ref name="indexOf" scoped="" ref="0x4076e328"/>
        <function-ref name="printBitVec" scoped="" ref="0x4076e408"/>
        <function-ref name="countOnes" scoped="" ref="0x4076e4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40767330" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugePageTransferC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40767330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4077ae38"/>
        <function-ref name="fired" scoped="" ref="0x4077a0f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4077a7f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x4077a5a0"/>
        <function-ref name="getdt" scoped="" ref="0x40871310"/>
        <function-ref name="gett0" scoped="" ref="0x408710b8"/>
        <function-ref name="isRunning" scoped="" ref="0x4077a348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40767958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4077ab18"/>
        <function-ref name="startOneShot" scoped="" ref="0x40767bd8"/>
        <function-ref name="stop" scoped="" ref="0x40767e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x407743f0" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x407743f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40786ed0"/>
        <function-ref name="fired" scoped="" ref="0x40786188"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40786890"/>
        <function-ref name="isOneShot" scoped="" ref="0x40786638"/>
        <function-ref name="getdt" scoped="" ref="0x407853a8"/>
        <function-ref name="gett0" scoped="" ref="0x40785150"/>
        <function-ref name="isRunning" scoped="" ref="0x407863e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40774a18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40786bb0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40774c98"/>
        <function-ref name="stop" scoped="" ref="0x40774f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x407823f8" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x407823f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40780ed8"/>
        <function-ref name="fired" scoped="" ref="0x40780190"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40780898"/>
        <function-ref name="isOneShot" scoped="" ref="0x40780640"/>
        <function-ref name="getdt" scoped="" ref="0x4077f3a8"/>
        <function-ref name="gett0" scoped="" ref="0x4077f150"/>
        <function-ref name="isRunning" scoped="" ref="0x407803e8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40782a20"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40780bb8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40782ca0"/>
        <function-ref name="stop" scoped="" ref="0x40782f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4077f708" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4077f708"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4077fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40785c28" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40785c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40785e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40787010" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40787010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40787760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40787c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407879d8"/>
        <function-ref name="overflow" scoped="" ref="0x40787ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4077edd8" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4077edd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4078e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x40789610" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x40789610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4078dab8"/>
        <function-ref name="fired" scoped="" ref="0x4078d288"/>
        <function-ref name="startAt" scoped="" ref="0x4078d778"/>
        <function-ref name="isRunning" scoped="" ref="0x4078d500"/>
        <function-ref name="getAlarm" scoped="" ref="0x4078dd30"/>
        <function-ref name="start" scoped="" ref="0x40789d60"/>
        <function-ref name="stop" scoped="" ref="0x4078d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40824850" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40824850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40822d58"/>
        <function-ref name="fired" scoped="" ref="0x40822528"/>
        <function-ref name="startAt" scoped="" ref="0x40822a18"/>
        <function-ref name="isRunning" scoped="" ref="0x408227a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40821010"/>
        <function-ref name="start" scoped="" ref="0x40822010"/>
        <function-ref name="stop" scoped="" ref="0x408222b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40824418" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40824418"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x404085d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x404085d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408245f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40821340" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40821340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40821a90"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40820010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40821d08"/>
        <function-ref name="overflow" scoped="" ref="0x40820288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x416f1d48" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x416f1d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x416f1f20"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x416f0018"/>
        <function-ref name="getControlA" scoped="" ref="0x416f00f8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x416f01d8"/>
        <function-ref name="setControlB" scoped="" ref="0x416f02b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x416f0398"/>
        <function-ref name="getControlB" scoped="" ref="0x416f0478"/>
        <function-ref name="setControlA" scoped="" ref="0x416f0558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x416f8ec0" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x416f8ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x416f5388"/>
        <function-ref name="fired" scoped="" ref="0x416f6b40"/>
        <function-ref name="startAt" scoped="" ref="0x416f5048"/>
        <function-ref name="isRunning" scoped="" ref="0x416f6db8"/>
        <function-ref name="getAlarm" scoped="" ref="0x416f5600"/>
        <function-ref name="start" scoped="" ref="0x416f6628"/>
        <function-ref name="stop" scoped="" ref="0x416f68c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x416f8a88" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x416f8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x416f8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x416f5930" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x416f5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x416f30a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x416f3598"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x416f3320"/>
        <function-ref name="overflow" scoped="" ref="0x416f3810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x416ed240" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x416ed240"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x416ed418"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x416ed4f8"/>
        <function-ref name="controlABusy" scoped="" ref="0x416ed5d8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x416ed6b8"/>
        <function-ref name="countBusy" scoped="" ref="0x416ed798"/>
        <function-ref name="compareABusy" scoped="" ref="0x416ed878"/>
        <function-ref name="getAssr" scoped="" ref="0x416ed958"/>
        <function-ref name="setAssr" scoped="" ref="0x416eda38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x416f0748" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x416f0748"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x416eecc8"/>
        <function-ref name="fired" scoped="" ref="0x416ee2e8"/>
        <function-ref name="get" scoped="" ref="0x416f0d90"/>
        <function-ref name="reset" scoped="" ref="0x416ee560"/>
        <function-ref name="isOn" scoped="" ref="0x416ed010"/>
        <function-ref name="set" scoped="" ref="0x416ee048"/>
        <function-ref name="start" scoped="" ref="0x416ee7d8"/>
        <function-ref name="stop" scoped="" ref="0x416eea50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x416f3b00" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x416f3b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x416f1600"/>
        <function-ref name="test" scoped="" ref="0x416f1110"/>
        <function-ref name="get" scoped="" ref="0x416f2200"/>
        <function-ref name="setScale" scoped="" ref="0x416f1878"/>
        <function-ref name="getScale" scoped="" ref="0x416f1b18"/>
        <function-ref name="reset" scoped="" ref="0x416f2990"/>
        <function-ref name="overflow" scoped="" ref="0x416f2718"/>
        <function-ref name="isOn" scoped="" ref="0x416f1388"/>
        <function-ref name="set" scoped="" ref="0x416f2478"/>
        <function-ref name="start" scoped="" ref="0x416f2c08"/>
        <function-ref name="stop" scoped="" ref="0x416f2e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x407de878" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407de878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407dea50"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407deb30"/>
        <function-ref name="getControlA" scoped="" ref="0x407dec10"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407decf0"/>
        <function-ref name="setControlB" scoped="" ref="0x407dedd0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407deeb0"/>
        <function-ref name="getControlB" scoped="" ref="0x407dc010"/>
        <function-ref name="setControlA" scoped="" ref="0x407dc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x407da010" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x407da010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x407da1e8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x407da2c8"/>
        <function-ref name="controlABusy" scoped="" ref="0x407da3a8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x407da488"/>
        <function-ref name="countBusy" scoped="" ref="0x407da568"/>
        <function-ref name="compareABusy" scoped="" ref="0x407da648"/>
        <function-ref name="getAssr" scoped="" ref="0x407da728"/>
        <function-ref name="setAssr" scoped="" ref="0x407da808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407dc418" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407dc418"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407db9f0"/>
        <function-ref name="fired" scoped="" ref="0x407db010"/>
        <function-ref name="get" scoped="" ref="0x407dca60"/>
        <function-ref name="reset" scoped="" ref="0x407db288"/>
        <function-ref name="isOn" scoped="" ref="0x407dbc68"/>
        <function-ref name="set" scoped="" ref="0x407dccd8"/>
        <function-ref name="start" scoped="" ref="0x407db500"/>
        <function-ref name="stop" scoped="" ref="0x407db778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407e0540" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407e0540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407de010"/>
        <function-ref name="test" scoped="" ref="0x407dfa98"/>
        <function-ref name="get" scoped="" ref="0x407e0b88"/>
        <function-ref name="setScale" scoped="" ref="0x407de288"/>
        <function-ref name="getScale" scoped="" ref="0x407de528"/>
        <function-ref name="reset" scoped="" ref="0x407df330"/>
        <function-ref name="overflow" scoped="" ref="0x407df0b8"/>
        <function-ref name="isOn" scoped="" ref="0x407dfd10"/>
        <function-ref name="set" scoped="" ref="0x407e0e00"/>
        <function-ref name="start" scoped="" ref="0x407df5a8"/>
        <function-ref name="stop" scoped="" ref="0x407df820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x407ea8d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407ea8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407eaaa8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407eab88"/>
        <function-ref name="getControlA" scoped="" ref="0x407eac68"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407ead48"/>
        <function-ref name="setControlB" scoped="" ref="0x407eae28"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407eaf08"/>
        <function-ref name="getControlB" scoped="" ref="0x407e9010"/>
        <function-ref name="setControlA" scoped="" ref="0x407e90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x407e8f20" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x407e8f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407e7110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x407e7398" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x407e7398"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x407e7570"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x407e7650"/>
        <function-ref name="controlABusy" scoped="" ref="0x407e7730"/>
        <function-ref name="controlBBusy" scoped="" ref="0x407e7810"/>
        <function-ref name="countBusy" scoped="" ref="0x407e78f0"/>
        <function-ref name="compareABusy" scoped="" ref="0x407e79d0"/>
        <function-ref name="getAssr" scoped="" ref="0x407e7ab0"/>
        <function-ref name="setAssr" scoped="" ref="0x407e7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407e9418" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407e9418"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407e89f0"/>
        <function-ref name="fired" scoped="" ref="0x407e8010"/>
        <function-ref name="get" scoped="" ref="0x407e9a60"/>
        <function-ref name="reset" scoped="" ref="0x407e8288"/>
        <function-ref name="isOn" scoped="" ref="0x407e8c68"/>
        <function-ref name="set" scoped="" ref="0x407e9cd8"/>
        <function-ref name="start" scoped="" ref="0x407e8500"/>
        <function-ref name="stop" scoped="" ref="0x407e8778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407ed5f8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407ed5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407ea068"/>
        <function-ref name="test" scoped="" ref="0x407ecb50"/>
        <function-ref name="get" scoped="" ref="0x407edc40"/>
        <function-ref name="setScale" scoped="" ref="0x407ea2e0"/>
        <function-ref name="getScale" scoped="" ref="0x407ea580"/>
        <function-ref name="reset" scoped="" ref="0x407ec3e8"/>
        <function-ref name="overflow" scoped="" ref="0x407ec170"/>
        <function-ref name="isOn" scoped="" ref="0x407ecdc8"/>
        <function-ref name="set" scoped="" ref="0x407edeb8"/>
        <function-ref name="start" scoped="" ref="0x407ec660"/>
        <function-ref name="stop" scoped="" ref="0x407ec8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x408324d8" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x408324d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408326b0"/>
        <function-ref name="runTask" scoped="" ref="0x40832790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40834a48" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40834a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40832010"/>
        <function-ref name="fired" scoped="" ref="0x40833718"/>
        <function-ref name="startAt" scoped="" ref="0x40833c08"/>
        <function-ref name="isRunning" scoped="" ref="0x40833990"/>
        <function-ref name="getAlarm" scoped="" ref="0x40832288"/>
        <function-ref name="start" scoped="" ref="0x40833200"/>
        <function-ref name="stop" scoped="" ref="0x408334a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4078f720" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4078f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40834248"/>
        <function-ref name="fired" scoped="" ref="0x408364e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40836bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40836998"/>
        <function-ref name="getdt" scoped="" ref="0x408346f8"/>
        <function-ref name="gett0" scoped="" ref="0x408344a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40836740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4078fd48"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40836f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x40836010"/>
        <function-ref name="stop" scoped="" ref="0x40836290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40864bc8" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40864bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40864da0"/>
        <function-ref name="runTask" scoped="" ref="0x40864e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40867968" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40867968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408644c8"/>
        <function-ref name="fired" scoped="" ref="0x40866768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40866e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40866c18"/>
        <function-ref name="getdt" scoped="" ref="0x40864978"/>
        <function-ref name="gett0" scoped="" ref="0x40864720"/>
        <function-ref name="isRunning" scoped="" ref="0x408669c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40866010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408641a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40866290"/>
        <function-ref name="stop" scoped="" ref="0x40866510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40845600" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40845600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408671a8"/>
        <function-ref name="fired" scoped="" ref="0x408693d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40869b10"/>
        <function-ref name="isOneShot" scoped="" ref="0x408698a8"/>
        <function-ref name="getdt" scoped="" ref="0x40867678"/>
        <function-ref name="gett0" scoped="" ref="0x40867410"/>
        <function-ref name="isRunning" scoped="" ref="0x40869640"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40845c38"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40869e40"/>
        <function-ref name="startOneShot" scoped="" ref="0x40845ec8"/>
        <function-ref name="stop" scoped="" ref="0x40869170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x408620a0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x408620a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408626e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40862a38" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40862a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40861200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408616f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40861478"/>
        <function-ref name="overflow" scoped="" ref="0x40861968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Crc" ref="0x4088c010" loc="46:/opt/tinyos-2.1.2/tos/system/CrcC.nc">
      <component-ref qname="CrcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x4088c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x4088c1e8"/>
        <function-ref name="crc16" scoped="" ref="0x4088c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40884ed8" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40884ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408870c0"/>
        <function-ref name="getPayload" scoped="" ref="0x408871a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40887280"/>
        <function-ref name="cancel" scoped="" ref="0x40887360"/>
        <function-ref name="sendDone" scoped="" ref="0x40887440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40887580" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40887580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40887758"/>
        <function-ref name="payloadLength" scoped="" ref="0x40887838"/>
        <function-ref name="getPayload" scoped="" ref="0x40887918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408879f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40887ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40887c18" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40887c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40887df0"/>
        <function-ref name="source" scoped="" ref="0x40887ed0"/>
        <function-ref name="address" scoped="" ref="0x40f09010"/>
        <function-ref name="destination" scoped="" ref="0x40f090f0"/>
        <function-ref name="setSource" scoped="" ref="0x40f091d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40f092b0"/>
        <function-ref name="type" scoped="" ref="0x40f09390"/>
        <function-ref name="setType" scoped="" ref="0x40f09470"/>
        <function-ref name="isForMe" scoped="" ref="0x40f09550"/>
        <function-ref name="setGroup" scoped="" ref="0x40f09630"/>
        <function-ref name="localGroup" scoped="" ref="0x40f09710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40f09870" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40f09870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f09a48"/>
        <function-ref name="noAck" scoped="" ref="0x40f09b28"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f09c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41713ea0" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41713ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417620c0"/>
        <function-ref name="getPayload" scoped="" ref="0x417621a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41762280"/>
        <function-ref name="cancel" scoped="" ref="0x41762360"/>
        <function-ref name="sendDone" scoped="" ref="0x41762440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41762580" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41762580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41762758"/>
        <function-ref name="payloadLength" scoped="" ref="0x41762838"/>
        <function-ref name="getPayload" scoped="" ref="0x41762918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417629f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41762ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41762c18" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41762c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41762df0"/>
        <function-ref name="source" scoped="" ref="0x41762ed0"/>
        <function-ref name="address" scoped="" ref="0x41761010"/>
        <function-ref name="destination" scoped="" ref="0x417610f0"/>
        <function-ref name="setSource" scoped="" ref="0x417611d0"/>
        <function-ref name="setDestination" scoped="" ref="0x417612b0"/>
        <function-ref name="type" scoped="" ref="0x41761390"/>
        <function-ref name="setType" scoped="" ref="0x41761470"/>
        <function-ref name="isForMe" scoped="" ref="0x41761550"/>
        <function-ref name="setGroup" scoped="" ref="0x41761630"/>
        <function-ref name="localGroup" scoped="" ref="0x41761710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41761870" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41761870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41761a48"/>
        <function-ref name="noAck" scoped="" ref="0x41761b28"/>
        <function-ref name="wasAcked" scoped="" ref="0x41761c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4175e998" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4175e998"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4175eb70"/>
        <function-ref name="getPayload" scoped="" ref="0x4175ec50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4175ed30"/>
        <function-ref name="cancel" scoped="" ref="0x4175ee10"/>
        <function-ref name="sendDone" scoped="" ref="0x4175eef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4175b070" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4175b070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4175b248"/>
        <function-ref name="payloadLength" scoped="" ref="0x4175b328"/>
        <function-ref name="getPayload" scoped="" ref="0x4175b408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4175b4e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4175b5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4175b708" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4175b708"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4175b8e0"/>
        <function-ref name="source" scoped="" ref="0x4175b9c0"/>
        <function-ref name="address" scoped="" ref="0x4175baa0"/>
        <function-ref name="destination" scoped="" ref="0x4175bb80"/>
        <function-ref name="setSource" scoped="" ref="0x4175bc60"/>
        <function-ref name="setDestination" scoped="" ref="0x4175bd40"/>
        <function-ref name="type" scoped="" ref="0x4175be20"/>
        <function-ref name="setType" scoped="" ref="0x4175bf00"/>
        <function-ref name="isForMe" scoped="" ref="0x4175a010"/>
        <function-ref name="setGroup" scoped="" ref="0x4175a0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4175a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4175a330" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4175a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4175a508"/>
        <function-ref name="noAck" scoped="" ref="0x4175a5e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4175a6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41753af8" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41753af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41753cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x41753db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41753e90"/>
        <function-ref name="cancel" scoped="" ref="0x41750010"/>
        <function-ref name="sendDone" scoped="" ref="0x417500f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41750260" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41750260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41750438"/>
        <function-ref name="getPayload" scoped="" ref="0x41750518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417505f8"/>
        <function-ref name="cancel" scoped="" ref="0x417506d8"/>
        <function-ref name="sendDone" scoped="" ref="0x417507b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x417508f8" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x417508f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41750ad0"/>
        <function-ref name="source" scoped="" ref="0x41750bb0"/>
        <function-ref name="address" scoped="" ref="0x41750c90"/>
        <function-ref name="destination" scoped="" ref="0x41750d70"/>
        <function-ref name="setSource" scoped="" ref="0x41750e50"/>
        <function-ref name="setDestination" scoped="" ref="0x4174f010"/>
        <function-ref name="type" scoped="" ref="0x4174f0f0"/>
        <function-ref name="setType" scoped="" ref="0x4174f1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x4174f2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x4174f390"/>
        <function-ref name="localGroup" scoped="" ref="0x4174f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408b0ef8" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408b0ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ad0e0"/>
        <function-ref name="getPayload" scoped="" ref="0x408ad1c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408ad2a0"/>
        <function-ref name="cancel" scoped="" ref="0x408ad380"/>
        <function-ref name="sendDone" scoped="" ref="0x408ad460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x408d0598" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x408d0598"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408d0780"/>
        <function-ref name="getPayload" scoped="" ref="0x408d0860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408d0940"/>
        <function-ref name="cancel" scoped="" ref="0x408d0a20"/>
        <function-ref name="sendDone" scoped="" ref="0x408d0b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408d1da0" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408d1da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408d0010"/>
        <function-ref name="getPayload" scoped="" ref="0x408d00f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408d01d0"/>
        <function-ref name="cancel" scoped="" ref="0x408d02b0"/>
        <function-ref name="sendDone" scoped="" ref="0x408d0390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x408cf850" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408cf850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408cfa28"/>
        <function-ref name="payloadLength" scoped="" ref="0x408cfb08"/>
        <function-ref name="getPayload" scoped="" ref="0x408cfbe8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408cfcc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408cfda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x408cff28" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x408cff28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408e8110"/>
        <function-ref name="runTask" scoped="" ref="0x408e81f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x408e8370" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x408e8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408e8548"/>
        <function-ref name="runTask" scoped="" ref="0x408e8628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x408d0c40" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408d0c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408d0e18"/>
        <function-ref name="source" scoped="" ref="0x408d0ef8"/>
        <function-ref name="address" scoped="" ref="0x408cf010"/>
        <function-ref name="destination" scoped="" ref="0x408cf0f0"/>
        <function-ref name="setSource" scoped="" ref="0x408cf1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x408cf2b0"/>
        <function-ref name="type" scoped="" ref="0x408cf390"/>
        <function-ref name="setType" scoped="" ref="0x408cf470"/>
        <function-ref name="isForMe" scoped="" ref="0x408cf550"/>
        <function-ref name="setGroup" scoped="" ref="0x408cf630"/>
        <function-ref name="localGroup" scoped="" ref="0x408cf710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408e1980" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408e1980"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408e1b58"/>
        <function-ref name="stopDone" scoped="" ref="0x408e1c38"/>
        <function-ref name="start" scoped="" ref="0x408e1d18"/>
        <function-ref name="stop" scoped="" ref="0x408e1df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x408dda38" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x408dda38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x408ddc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408ddd90" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408ddd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408df010"/>
        <function-ref name="payloadLength" scoped="" ref="0x408df0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x408df1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408df2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408df390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x408e42a8" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x408e42a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e4480"/>
        <function-ref name="getPayload" scoped="" ref="0x408e4560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408e4640"/>
        <function-ref name="cancel" scoped="" ref="0x408e4720"/>
        <function-ref name="sendDone" scoped="" ref="0x408e4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x408e0310" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x408e0310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408e04e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408f3ed0" loc="52:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408f3ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x408dc0c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x408dc1a0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x408dc280"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x408dc360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408e4c68" loc="44:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408e4c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408e4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408de230" loc="51:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408de230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408de408"/>
        <function-ref name="noAck" scoped="" ref="0x408de4e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x408de5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x408ed7d0" loc="53:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x408ed7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x408ed9a8"/>
        <function-ref name="setRetries" scoped="" ref="0x408eda88"/>
        <function-ref name="getRetries" scoped="" ref="0x408edb68"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x408edc48"/>
        <function-ref name="wasDelivered" scoped="" ref="0x408edd28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x408df528" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408df528"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408df700"/>
        <function-ref name="source" scoped="" ref="0x408df7e0"/>
        <function-ref name="address" scoped="" ref="0x408df8c0"/>
        <function-ref name="destination" scoped="" ref="0x408df9a0"/>
        <function-ref name="setSource" scoped="" ref="0x408dfa80"/>
        <function-ref name="setDestination" scoped="" ref="0x408dfb60"/>
        <function-ref name="type" scoped="" ref="0x408dfc40"/>
        <function-ref name="setType" scoped="" ref="0x408dfd20"/>
        <function-ref name="isForMe" scoped="" ref="0x408dfe00"/>
        <function-ref name="setGroup" scoped="" ref="0x408dfee0"/>
        <function-ref name="localGroup" scoped="" ref="0x408de010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x408edee8" loc="54:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x408edee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x408f50e0"/>
        <function-ref name="setChannel" scoped="" ref="0x408f51c0"/>
        <function-ref name="getChannel" scoped="" ref="0x408f52a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x40902920" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x40902920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40462778"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408f2438"/>
        <function-ref name="clear" scoped="" ref="0x408f27e8"/>
        <function-ref name="isValid" scoped="" ref="0x408f2088"/>
        <function-ref name="set" scoped="" ref="0x408f2b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x409012e8" loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409012e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40901e68"/>
        <function-ref name="clear" scoped="" ref="0x40900230"/>
        <function-ref name="isValid" scoped="" ref="0x40901ab8"/>
        <function-ref name="set" scoped="" ref="0x409005e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408fd0e0" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408fd0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408fd2b8"/>
        <function-ref name="stopDone" scoped="" ref="0x408fd398"/>
        <function-ref name="start" scoped="" ref="0x408fd478"/>
        <function-ref name="stop" scoped="" ref="0x408fd558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x4090b8a0" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x4090b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409094a0"/>
        <function-ref name="get" scoped="" ref="0x409091e0"/>
        <function-ref name="isSet" scoped="" ref="0x4090bee8"/>
        <function-ref name="set" scoped="" ref="0x40909760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40904488" loc="71:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40904488"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40903010"/>
        <function-ref name="clear" scoped="" ref="0x409033c0"/>
        <function-ref name="isValid" scoped="" ref="0x40904bd8"/>
        <function-ref name="set" scoped="" ref="0x40903770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x408fa100" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x408fa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x408fa2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408f9260" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408f9260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408f9438"/>
        <function-ref name="payloadLength" scoped="" ref="0x408f9518"/>
        <function-ref name="getPayload" scoped="" ref="0x408f95f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408f96d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408f97b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x408fd9b8" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x408fd9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408fdb90"/>
        <function-ref name="getPayload" scoped="" ref="0x408fdc70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408fdd50"/>
        <function-ref name="cancel" scoped="" ref="0x408fde30"/>
        <function-ref name="sendDone" scoped="" ref="0x408fdf10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x408fca30" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x408fca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408fcc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x4090c530" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x4090c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4090b118"/>
        <function-ref name="get" scoped="" ref="0x4090ce38"/>
        <function-ref name="isSet" scoped="" ref="0x4090cb78"/>
        <function-ref name="set" scoped="" ref="0x4090b3d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408f8c18" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408f8c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x408f8df0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x408f8ed0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x408f7010"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x408f70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408fc398" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408fc398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408fc570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40908a28" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40908a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TRadio" ref="0x404eba40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409055b0"/>
        <function-ref name="clear" scoped="" ref="0x40905960"/>
        <function-ref name="isValid" scoped="" ref="0x40905200"/>
        <function-ref name="set" scoped="" ref="0x40905d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40906e70" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40906e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TRadio" ref="0x404eba40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409084d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4090f0e0" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4090f0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4090fca8"/>
        <function-ref name="get" scoped="" ref="0x4090f9e8"/>
        <function-ref name="isSet" scoped="" ref="0x4090f728"/>
        <function-ref name="set" scoped="" ref="0x4090c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408f8690" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408f8690"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408f8868"/>
        <function-ref name="noAck" scoped="" ref="0x408f8948"/>
        <function-ref name="wasAcked" scoped="" ref="0x408f8a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x408fa800" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x408fa800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408fa9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x408f7298" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x408f7298"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x408f7470"/>
        <function-ref name="setRetries" scoped="" ref="0x408f7550"/>
        <function-ref name="getRetries" scoped="" ref="0x408f7630"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x408f7710"/>
        <function-ref name="wasDelivered" scoped="" ref="0x408f77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x408f9950" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408f9950"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408f9b28"/>
        <function-ref name="source" scoped="" ref="0x408f9c08"/>
        <function-ref name="address" scoped="" ref="0x408f9ce8"/>
        <function-ref name="destination" scoped="" ref="0x408f9dc8"/>
        <function-ref name="setSource" scoped="" ref="0x408f9ea8"/>
        <function-ref name="setDestination" scoped="" ref="0x408f8010"/>
        <function-ref name="type" scoped="" ref="0x408f80f0"/>
        <function-ref name="setType" scoped="" ref="0x408f81d0"/>
        <function-ref name="isForMe" scoped="" ref="0x408f82b0"/>
        <function-ref name="setGroup" scoped="" ref="0x408f8390"/>
        <function-ref name="localGroup" scoped="" ref="0x408f8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x408f79b0" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x408f79b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x408f7c08"/>
        <function-ref name="setChannel" scoped="" ref="0x408f7ce8"/>
        <function-ref name="getChannel" scoped="" ref="0x408f7dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40906978" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40906978"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40906b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x408faee0" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x408faee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408f90e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40919140" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40919140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40919318"/>
        <function-ref name="stopDone" scoped="" ref="0x409193f8"/>
        <function-ref name="start" scoped="" ref="0x409194d8"/>
        <function-ref name="stop" scoped="" ref="0x409195b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40935580" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40935580"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40934170"/>
        <function-ref name="get" scoped="" ref="0x40935e88"/>
        <function-ref name="isSet" scoped="" ref="0x40935bc8"/>
        <function-ref name="set" scoped="" ref="0x40934430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x40914778" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x40914778"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40914950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x40926eb0" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x40926eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40913188"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40913268"/>
        <function-ref name="request" scoped="" ref="0x40913348"/>
        <function-ref name="granted" scoped="" ref="0x40913428"/>
        <function-ref name="isOwner" scoped="" ref="0x40913508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x409171b0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x409171b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40917388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40919a18" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40919a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40919bf0"/>
        <function-ref name="getPayload" scoped="" ref="0x40919cd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40919db0"/>
        <function-ref name="cancel" scoped="" ref="0x40919e90"/>
        <function-ref name="sendDone" scoped="" ref="0x40918010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40918b10" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40918b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40918ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x4091f098" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x4091f098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x4091f270"/>
        <function-ref name="address" scoped="" ref="0x4091f350"/>
        <function-ref name="destination" scoped="" ref="0x4091f430"/>
        <function-ref name="setSource" scoped="" ref="0x4091f510"/>
        <function-ref name="setDestination" scoped="" ref="0x4091f5f0"/>
        <function-ref name="pan" scoped="" ref="0x4091f6d0"/>
        <function-ref name="setPan" scoped="" ref="0x4091f7b0"/>
        <function-ref name="isForMe" scoped="" ref="0x4091f890"/>
        <function-ref name="localPan" scoped="" ref="0x4091f970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x4091fbf8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x4091fbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4091fdd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4091feb0"/>
        <function-ref name="getPayload" scoped="" ref="0x40925010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409250f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409251d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x4091d218" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x4091d218"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4091dde0"/>
        <function-ref name="get" scoped="" ref="0x4091db20"/>
        <function-ref name="isSet" scoped="" ref="0x4091d860"/>
        <function-ref name="set" scoped="" ref="0x409350b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40925978" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40925978"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40925b50"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40925c30"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40925d10"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40925df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x40915110" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40915110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409152e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409153c8"/>
        <function-ref name="getPayload" scoped="" ref="0x409154a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40915588"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40915668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40918478" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40918478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40918650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x409328c0" loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409328c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TRadio" ref="0x404eba40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409314d8"/>
        <function-ref name="clear" scoped="" ref="0x40931888"/>
        <function-ref name="isValid" scoped="" ref="0x40931128"/>
        <function-ref name="set" scoped="" ref="0x40931c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40934cd8" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40934cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TRadio" ref="0x404eba40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40932370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40924e18" loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40924e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4091ea08"/>
        <function-ref name="get" scoped="" ref="0x4091e748"/>
        <function-ref name="isSet" scoped="" ref="0x4091e488"/>
        <function-ref name="set" scoped="" ref="0x4091ecc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x409253f0" loc="68:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409253f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x409255c8"/>
        <function-ref name="noAck" scoped="" ref="0x409256a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40925788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40929ab8" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40929ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40929c90"/>
        <function-ref name="getPayload" scoped="" ref="0x40929d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40929e50"/>
        <function-ref name="cancel" scoped="" ref="0x40914010"/>
        <function-ref name="sendDone" scoped="" ref="0x409140f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x409178b0" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x409178b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40917a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40924010" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40924010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x409241e8"/>
        <function-ref name="setRetries" scoped="" ref="0x409242c8"/>
        <function-ref name="getRetries" scoped="" ref="0x409243a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40924488"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40924568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40924728" loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40924728"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40924900"/>
        <function-ref name="setChannel" scoped="" ref="0x409249e0"/>
        <function-ref name="getChannel" scoped="" ref="0x40924ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40916380" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40916380"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40916558"/>
        <function-ref name="source" scoped="" ref="0x40916638"/>
        <function-ref name="address" scoped="" ref="0x40916718"/>
        <function-ref name="destination" scoped="" ref="0x409167f8"/>
        <function-ref name="setSource" scoped="" ref="0x409168d8"/>
        <function-ref name="setDestination" scoped="" ref="0x409169b8"/>
        <function-ref name="type" scoped="" ref="0x40916a98"/>
        <function-ref name="setType" scoped="" ref="0x40916b78"/>
        <function-ref name="isForMe" scoped="" ref="0x40916c58"/>
        <function-ref name="setGroup" scoped="" ref="0x40916d38"/>
        <function-ref name="localGroup" scoped="" ref="0x40916e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x409303a0" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409303a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40930ea0"/>
        <function-ref name="clear" scoped="" ref="0x4092e280"/>
        <function-ref name="isValid" scoped="" ref="0x40930af0"/>
        <function-ref name="set" scoped="" ref="0x4092e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40914328" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40914328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40914500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x409347e0" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x409347e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x409349b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40916010" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40916010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409161e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x409526f8" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x409526f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409528d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x40943010" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x40943010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x409431e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x40948778" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x40948778"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40948950"/>
        <function-ref name="checkFrame" scoped="" ref="0x40948a30"/>
        <function-ref name="source" scoped="" ref="0x40948b10"/>
        <function-ref name="destination" scoped="" ref="0x40948bf0"/>
        <function-ref name="setSource" scoped="" ref="0x40948cd0"/>
        <function-ref name="setDestination" scoped="" ref="0x40948db0"/>
        <function-ref name="setGroup" scoped="" ref="0x40948e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x4094dc80" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x4094dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x4094de58"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x4093b010"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x4093b0f0"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x4093b1d0"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x4093b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x409693c0" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x409693c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40969598"/>
        <function-ref name="wait" scoped="" ref="0x40969678"/>
        <function-ref name="cancel" scoped="" ref="0x40969758"/>
        <function-ref name="isFree" scoped="" ref="0x40969838"/>
        <function-ref name="getNow" scoped="" ref="0x40969918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x40966578" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x40966578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409667d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x409668b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40966990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40966a70"/>
        <function-ref name="headerLength" scoped="" ref="0x40966b50"/>
        <function-ref name="metadataLength" scoped="" ref="0x40966c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x4096d010" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x4096d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TRadio" ref="0x404eba40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4096db10"/>
        <function-ref name="clear" scoped="" ref="0x4096dec0"/>
        <function-ref name="isValid" scoped="" ref="0x4096d760"/>
        <function-ref name="set" scoped="" ref="0x409652a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x409412d0" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x409412d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409414a8"/>
        <function-ref name="headerLength" scoped="" ref="0x40941588"/>
        <function-ref name="metadataLength" scoped="" ref="0x40941668"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40941748"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40941828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x40937268" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x40937268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x40937440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x4093c6e8" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x4093c6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x4093c8c0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x4093c9a0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4093ca80"/>
        <function-ref name="isAckPacket" scoped="" ref="0x4093cb60"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x4093cc40"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x4093cd20"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4093ce00"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4093cee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x4096ee20" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4096ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4094c010"/>
        <function-ref name="getDSN" scoped="" ref="0x4094c0f0"/>
        <function-ref name="setFCF" scoped="" ref="0x4094c1d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4094c2b0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4094c390"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4094c470"/>
        <function-ref name="setDSN" scoped="" ref="0x4094c550"/>
        <function-ref name="createAckReply" scoped="" ref="0x4094c630"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4094c710"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4094c7f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4094c8d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4094c9b0"/>
        <function-ref name="localAddr" scoped="" ref="0x4094ca90"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4094cbf0"/>
        <function-ref name="localPan" scoped="" ref="0x4094ccd0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4094cdb0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4094ce90"/>
        <function-ref name="setFramePending" scoped="" ref="0x40947010"/>
        <function-ref name="setDestPan" scoped="" ref="0x409470f0"/>
        <function-ref name="isForMe" scoped="" ref="0x409471d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x409472b0"/>
        <function-ref name="getFCF" scoped="" ref="0x40947390"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40947470"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40947550"/>
        <function-ref name="getFramePending" scoped="" ref="0x40947630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x40938278" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40938278"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40938450"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40938530"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40938610"/>
        <function-ref name="getSender" scoped="" ref="0x409386f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListeningConfig" ref="0x40960280" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListeningConfig" scoped="" ref="0x40960280"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getListenLength" scoped="" ref="0x40960458"/>
        <function-ref name="ackRequested" scoped="" ref="0x40960538"/>
        <function-ref name="needsAutoAckRequest" scoped="" ref="0x40960618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x4094f118" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x4094f118"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4094f2f0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4094f3d0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4094f4b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4094f590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x4099f3d0" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4099f3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4099f5b8"/>
        <function-ref name="wait" scoped="" ref="0x4099f698"/>
        <function-ref name="cancel" scoped="" ref="0x4099f778"/>
        <function-ref name="isFree" scoped="" ref="0x4099f858"/>
        <function-ref name="getNow" scoped="" ref="0x4099f938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4099fc88" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4099fc88"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x404087d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x404087d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TRadio" ref="0x404eba40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x404ebce8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409bd150"/>
        <function-ref name="fired" scoped="" ref="0x4099e908"/>
        <function-ref name="startAt" scoped="" ref="0x4099edf8"/>
        <function-ref name="isRunning" scoped="" ref="0x4099eb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x409bd3c8"/>
        <function-ref name="start" scoped="" ref="0x4099e3f0"/>
        <function-ref name="stop" scoped="" ref="0x4099e690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x4176d180" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4176d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4176d368"/>
        <function-ref name="wait" scoped="" ref="0x4176d448"/>
        <function-ref name="cancel" scoped="" ref="0x4176d528"/>
        <function-ref name="isFree" scoped="" ref="0x4176d608"/>
        <function-ref name="getNow" scoped="" ref="0x4176d6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4176d978" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4176d978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TRadio" ref="0x404eba40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x404ebce8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4176ce40"/>
        <function-ref name="fired" scoped="" ref="0x4176c610"/>
        <function-ref name="startAt" scoped="" ref="0x4176cb00"/>
        <function-ref name="isRunning" scoped="" ref="0x4176c888"/>
        <function-ref name="getAlarm" scoped="" ref="0x4176a0d8"/>
        <function-ref name="start" scoped="" ref="0x4176c0f8"/>
        <function-ref name="stop" scoped="" ref="0x4176c398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x4176a2e8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x4176a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x4176a4c0"/>
        <function-ref name="suspend" scoped="" ref="0x4176a5a0"/>
        <function-ref name="resume" scoped="" ref="0x4176a680"/>
        <function-ref name="run" scoped="" ref="0x4176a760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x409bfe18" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x409bfe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x409bc010"/>
        <function-ref name="suspend" scoped="" ref="0x409bc0f0"/>
        <function-ref name="resume" scoped="" ref="0x409bc1d0"/>
        <function-ref name="run" scoped="" ref="0x409bc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a22030" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a22030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a22208"/>
        <function-ref name="cancel" scoped="" ref="0x40a222e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a223c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40a22528" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40a22528"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a22700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40a25d08" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40a25d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40a25ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40a26690" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40a26690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a26868"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a26948"/>
        <function-ref name="getPayload" scoped="" ref="0x40a26a28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a26b08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a26be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40a26dc0" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40a26dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a25010"/>
        <function-ref name="getPayload" scoped="" ref="0x40a250f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a251d0"/>
        <function-ref name="cancel" scoped="" ref="0x40a252b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a25390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40a25948" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40a25948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a25b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a23880" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a23880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a23a58"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a23b38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a23c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a23cf8"/>
        <function-ref name="headerLength" scoped="" ref="0x40a23dd8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a23eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a22860" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a22860"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40a22a38"/>
        <function-ref name="checkFrame" scoped="" ref="0x40a22b18"/>
        <function-ref name="source" scoped="" ref="0x40a22bf8"/>
        <function-ref name="destination" scoped="" ref="0x40a22cd8"/>
        <function-ref name="setSource" scoped="" ref="0x40a22db8"/>
        <function-ref name="setDestination" scoped="" ref="0x40a22e98"/>
        <function-ref name="setGroup" scoped="" ref="0x40a21010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a25568" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a25568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a25750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40a23128" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40a23128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a23310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40a279e0" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40a279e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40a27bb8"/>
        <function-ref name="source" scoped="" ref="0x40a27c98"/>
        <function-ref name="address" scoped="" ref="0x40a27d78"/>
        <function-ref name="destination" scoped="" ref="0x40a27e58"/>
        <function-ref name="setSource" scoped="" ref="0x40a26010"/>
        <function-ref name="setDestination" scoped="" ref="0x40a260f0"/>
        <function-ref name="type" scoped="" ref="0x40a261d0"/>
        <function-ref name="setType" scoped="" ref="0x40a262b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40a26390"/>
        <function-ref name="setGroup" scoped="" ref="0x40a26470"/>
        <function-ref name="localGroup" scoped="" ref="0x40a26550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40a23508" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40a23508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a236f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x417b6030" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x417b6030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x417b6208"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x417b7b20" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x417b7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417b7cf8"/>
        <function-ref name="cancel" scoped="" ref="0x417b7dd8"/>
        <function-ref name="sendDone" scoped="" ref="0x417b7eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x417b87b0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x417b87b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x417b8998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x417b9150" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x417b9150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x417b9328"/>
        <function-ref name="payloadLength" scoped="" ref="0x417b9408"/>
        <function-ref name="getPayload" scoped="" ref="0x417b94e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417b95c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x417b96a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x417b9880" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x417b9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417b9a68"/>
        <function-ref name="getPayload" scoped="" ref="0x417b9b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417b9c28"/>
        <function-ref name="cancel" scoped="" ref="0x417b9d08"/>
        <function-ref name="sendDone" scoped="" ref="0x417b9de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x417b83f0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x417b83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x417b85d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x417c1cd0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x417c1cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x417c1ea8"/>
        <function-ref name="payloadLength" scoped="" ref="0x417ba010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417ba0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x417ba1d0"/>
        <function-ref name="headerLength" scoped="" ref="0x417ba2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x417ba390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x417b6368" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x417b6368"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x417b65c0"/>
        <function-ref name="checkFrame" scoped="" ref="0x417b66a0"/>
        <function-ref name="source" scoped="" ref="0x417b6780"/>
        <function-ref name="destination" scoped="" ref="0x417b6860"/>
        <function-ref name="setSource" scoped="" ref="0x417b6940"/>
        <function-ref name="setDestination" scoped="" ref="0x417b6a20"/>
        <function-ref name="setGroup" scoped="" ref="0x417b6b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x417b6c40" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x417b6c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x417b6e18"/>
        <function-ref name="changed" scoped="" ref="0x417b6ef8"/>
        <function-ref name="amGroup" scoped="" ref="0x417b5010"/>
        <function-ref name="setAddress" scoped="" ref="0x417b50f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x417b7388" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x417b7388"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x417b7560"/>
        <function-ref name="payloadLength" scoped="" ref="0x417b7640"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417b7720"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x417b7800"/>
        <function-ref name="headerLength" scoped="" ref="0x417b78e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x417b79c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x417b8010" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x417b8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x417b81f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x417b8b90" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x417b8b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x417b8d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x417ba4d0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x417ba4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x417ba6a8"/>
        <function-ref name="source" scoped="" ref="0x417ba788"/>
        <function-ref name="address" scoped="" ref="0x417ba868"/>
        <function-ref name="destination" scoped="" ref="0x417ba948"/>
        <function-ref name="setSource" scoped="" ref="0x417baa28"/>
        <function-ref name="setDestination" scoped="" ref="0x417bab08"/>
        <function-ref name="type" scoped="" ref="0x417babe8"/>
        <function-ref name="setType" scoped="" ref="0x417bacc8"/>
        <function-ref name="isForMe" scoped="" ref="0x417bada8"/>
        <function-ref name="setGroup" scoped="" ref="0x417bae88"/>
        <function-ref name="localGroup" scoped="" ref="0x417b9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x417b7010" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x417b7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x417b71f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40a13010" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40a13010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40a131e8"/>
        <function-ref name="changed" scoped="" ref="0x40a132c8"/>
        <function-ref name="amGroup" scoped="" ref="0x40a133a8"/>
        <function-ref name="setAddress" scoped="" ref="0x40a13488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a3ba60" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a3ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a3bc38"/>
        <function-ref name="cancel" scoped="" ref="0x40a3bd18"/>
        <function-ref name="sendDone" scoped="" ref="0x40a3bdf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40a32010" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a32010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a321e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a322c8"/>
        <function-ref name="request" scoped="" ref="0x40a323a8"/>
        <function-ref name="granted" scoped="" ref="0x40a32488"/>
        <function-ref name="isOwner" scoped="" ref="0x40a32568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40a3b538" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40a3b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a3b710"/>
        <function-ref name="cancel" scoped="" ref="0x40a3b7f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a3b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40a2fb60" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40a2fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40a2fd48"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40a2fe28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40a784c0" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40a784c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40a786a8"/>
        <function-ref name="configure" scoped="" ref="0x40a78788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a2f420" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a2f420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a2f608"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a2f6e8"/>
        <function-ref name="request" scoped="" ref="0x40a2f7c8"/>
        <function-ref name="granted" scoped="" ref="0x40a2f8a8"/>
        <function-ref name="isOwner" scoped="" ref="0x40a2f988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40a78010" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a78010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a781e8"/>
        <function-ref name="userId" scoped="" ref="0x40a782c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x417dfcb8" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x417dfcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x417dfe90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x417dd010" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x417dd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x417dd1e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x417dd2c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x417dd3a8"/>
        <function-ref name="dequeue" scoped="" ref="0x417dd488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x417db750" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x417db750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x417db938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x417dba18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x417da030" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x417da030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x417da218"/>
        <function-ref name="configure" scoped="" ref="0x417da2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x417da458" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x417da458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x417da630"/>
        <function-ref name="isEmpty" scoped="" ref="0x417da710"/>
        <function-ref name="isEnqueued" scoped="" ref="0x417da7f0"/>
        <function-ref name="dequeue" scoped="" ref="0x417da8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x417db010" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x417db010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x417db1f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x417db2d8"/>
        <function-ref name="request" scoped="" ref="0x417db3b8"/>
        <function-ref name="granted" scoped="" ref="0x417db498"/>
        <function-ref name="isOwner" scoped="" ref="0x417db578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x417dbb58" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x417dbb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x417dbd30"/>
        <function-ref name="userId" scoped="" ref="0x417dbe10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x417daa50" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x417daa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x417dac28"/>
        <function-ref name="runTask" scoped="" ref="0x417dad08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a989e8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a989e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a98bc0"/>
        <function-ref name="cancel" scoped="" ref="0x40a98ca0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a98d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40a98ee0" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40a98ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a970e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40a9a488" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40a9a488"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40a9a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40a743b0" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40a743b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a74588"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a74668"/>
        <function-ref name="getPayload" scoped="" ref="0x40a74748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a74828"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a74908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x40a98250" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a98250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a98428"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a98508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a985e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a986c8"/>
        <function-ref name="headerLength" scoped="" ref="0x40a987a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a98888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x40a9a7d0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40a9a7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40a9a9a8"/>
        <function-ref name="getDSN" scoped="" ref="0x40a9aa88"/>
        <function-ref name="setFCF" scoped="" ref="0x40a9ab68"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40a9ac48"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40a9ad28"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40a9ae08"/>
        <function-ref name="setDSN" scoped="" ref="0x40a9aee8"/>
        <function-ref name="createAckReply" scoped="" ref="0x40a99010"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40a990f0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40a991d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40a992b0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40a99390"/>
        <function-ref name="localAddr" scoped="" ref="0x40a99470"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40a995d0"/>
        <function-ref name="localPan" scoped="" ref="0x40a996b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40a99790"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40a99870"/>
        <function-ref name="setFramePending" scoped="" ref="0x40a99950"/>
        <function-ref name="setDestPan" scoped="" ref="0x40a99a30"/>
        <function-ref name="isForMe" scoped="" ref="0x40a99b10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40a99bf0"/>
        <function-ref name="getFCF" scoped="" ref="0x40a99cd0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40a99db0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40a99e90"/>
        <function-ref name="getFramePending" scoped="" ref="0x40a98010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40a74a48" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40a74a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a74c20"/>
        <function-ref name="getPayload" scoped="" ref="0x40a74d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a74de0"/>
        <function-ref name="cancel" scoped="" ref="0x40a74ec0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a9a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40a9a170" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40a9a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a9a348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ab5280" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ab5280"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ab5458"/>
        <function-ref name="cancel" scoped="" ref="0x40ab5538"/>
        <function-ref name="sendDone" scoped="" ref="0x40ab5618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40ab5778" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40ab5778"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ab5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40a94a58" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40a94a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a94c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a94d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a94df0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a94ed0"/>
        <function-ref name="headerLength" scoped="" ref="0x40a93010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a930f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x40a93748" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x40a93748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a93920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40ab5ab0" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40ab5ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ab5c88"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ab5d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ab5e48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ab5f28"/>
        <function-ref name="headerLength" scoped="" ref="0x40ab4018"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ab40f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x40a93250" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x40a93250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a93428"/>
        <function-ref name="cancel" scoped="" ref="0x40a93508"/>
        <function-ref name="sendDone" scoped="" ref="0x40a935e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40a94228" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40a94228"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a94400"/>
        <function-ref name="cancel" scoped="" ref="0x40a944e0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a945c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40a94720" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40a94720"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a948f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x40a93a80" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x40a93a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a93c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a93d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a93e18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a93ef8"/>
        <function-ref name="headerLength" scoped="" ref="0x40ab5010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ab50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40b08170" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40b08170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40b08348"/>
        <function-ref name="address" scoped="" ref="0x40b08428"/>
        <function-ref name="destination" scoped="" ref="0x40b08508"/>
        <function-ref name="setSource" scoped="" ref="0x40b085e8"/>
        <function-ref name="setDestination" scoped="" ref="0x40b086c8"/>
        <function-ref name="pan" scoped="" ref="0x40b087a8"/>
        <function-ref name="setPan" scoped="" ref="0x40b08888"/>
        <function-ref name="isForMe" scoped="" ref="0x40b08968"/>
        <function-ref name="localPan" scoped="" ref="0x40b08a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40b08b88" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40b08b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b08d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b08e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b08f20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b07018"/>
        <function-ref name="headerLength" scoped="" ref="0x40b070f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b071d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x40b0a658" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40b0a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40b0a830"/>
        <function-ref name="getDSN" scoped="" ref="0x40b0a910"/>
        <function-ref name="setFCF" scoped="" ref="0x40b0a9f0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40b0aad0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40b0abb0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40b0ac90"/>
        <function-ref name="setDSN" scoped="" ref="0x40b0ad70"/>
        <function-ref name="createAckReply" scoped="" ref="0x40b0ae50"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40b09010"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40b090f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40b091d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40b092b0"/>
        <function-ref name="localAddr" scoped="" ref="0x40b09390"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40b094f0"/>
        <function-ref name="localPan" scoped="" ref="0x40b095d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40b096b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40b09790"/>
        <function-ref name="setFramePending" scoped="" ref="0x40b09870"/>
        <function-ref name="setDestPan" scoped="" ref="0x40b09950"/>
        <function-ref name="isForMe" scoped="" ref="0x40b09a30"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40b09b10"/>
        <function-ref name="getFCF" scoped="" ref="0x40b09bf0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40b09cd0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40b09db0"/>
        <function-ref name="getFramePending" scoped="" ref="0x40b09e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40b07368" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40b07368"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b07540"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b07620"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b07700"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b077e0"/>
        <function-ref name="headerLength" scoped="" ref="0x40b078c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b079a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x417f76b0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x417f76b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x417f7888"/>
        <function-ref name="address" scoped="" ref="0x417f7968"/>
        <function-ref name="destination" scoped="" ref="0x417f7a48"/>
        <function-ref name="setSource" scoped="" ref="0x417f7b28"/>
        <function-ref name="setDestination" scoped="" ref="0x417f7c08"/>
        <function-ref name="pan" scoped="" ref="0x417f7ce8"/>
        <function-ref name="setPan" scoped="" ref="0x417f7dc8"/>
        <function-ref name="isForMe" scoped="" ref="0x417f7ea8"/>
        <function-ref name="localPan" scoped="" ref="0x417f6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x417f6150" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x417f6150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x417f6328"/>
        <function-ref name="payloadLength" scoped="" ref="0x417f6408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417f64e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x417f65c8"/>
        <function-ref name="headerLength" scoped="" ref="0x417f66a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x417f6788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x417febc0" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x417febc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x417fed98"/>
        <function-ref name="getDSN" scoped="" ref="0x417fee78"/>
        <function-ref name="setFCF" scoped="" ref="0x417f8010"/>
        <function-ref name="isAckFrame" scoped="" ref="0x417f80f0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x417f81d0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x417f82b0"/>
        <function-ref name="setDSN" scoped="" ref="0x417f8390"/>
        <function-ref name="createAckReply" scoped="" ref="0x417f8470"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x417f8550"/>
        <function-ref name="isDataFrame" scoped="" ref="0x417f8630"/>
        <function-ref name="getAckRequired" scoped="" ref="0x417f8710"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x417f87f0"/>
        <function-ref name="localAddr" scoped="" ref="0x417f88d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x417f8a30"/>
        <function-ref name="localPan" scoped="" ref="0x417f8b10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x417f8bf0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x417f8cd0"/>
        <function-ref name="setFramePending" scoped="" ref="0x417f8db0"/>
        <function-ref name="setDestPan" scoped="" ref="0x417f8e90"/>
        <function-ref name="isForMe" scoped="" ref="0x417f7010"/>
        <function-ref name="setAckRequired" scoped="" ref="0x417f70f0"/>
        <function-ref name="getFCF" scoped="" ref="0x417f71d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x417f72b0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x417f7390"/>
        <function-ref name="getFramePending" scoped="" ref="0x417f7470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x417f68f8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x417f68f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x417f6ad0"/>
        <function-ref name="changed" scoped="" ref="0x417f6bb0"/>
        <function-ref name="amGroup" scoped="" ref="0x417f6c90"/>
        <function-ref name="setAddress" scoped="" ref="0x417f6d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x417f6ed0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x417f6ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x417f50c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x417f51a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417f5280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x417f5360"/>
        <function-ref name="headerLength" scoped="" ref="0x417f5440"/>
        <function-ref name="metadataLength" scoped="" ref="0x417f5520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b04ca8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b04ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b04e80"/>
        <function-ref name="cancel" scoped="" ref="0x40b52010"/>
        <function-ref name="sendDone" scoped="" ref="0x40b520f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b52250" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b52250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b52428"/>
        <function-ref name="header" scoped="" ref="0x40b52508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40b04388" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b04388"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b04560"/>
        <function-ref name="cancel" scoped="" ref="0x40b04640"/>
        <function-ref name="sendDone" scoped="" ref="0x40b04720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40b52668" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40b52668"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40b52840"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40b52920"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40b52a00"/>
        <function-ref name="getSender" scoped="" ref="0x40b52ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40b04860" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40b04860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b04a38"/>
        <function-ref name="header" scoped="" ref="0x40b04b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41821a70" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41821a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41821c48"/>
        <function-ref name="cancel" scoped="" ref="0x41821d28"/>
        <function-ref name="sendDone" scoped="" ref="0x41821e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41820010" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41820010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x418201e8"/>
        <function-ref name="header" scoped="" ref="0x418202c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x4181f070" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4181f070"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4181f248"/>
        <function-ref name="clearAll" scoped="" ref="0x4181f328"/>
        <function-ref name="get" scoped="" ref="0x4181f408"/>
        <function-ref name="set" scoped="" ref="0x4181f4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41824d90" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41824d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41821010"/>
        <function-ref name="cancel" scoped="" ref="0x418210f0"/>
        <function-ref name="sendDone" scoped="" ref="0x418211d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x418209c0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x418209c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x41820b98"/>
        <function-ref name="insertNode" scoped="" ref="0x41820c78"/>
        <function-ref name="getNode" scoped="" ref="0x41820d58"/>
        <function-ref name="evicted" scoped="" ref="0x41820e38"/>
        <function-ref name="getIndex" scoped="" ref="0x41820f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x41821310" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41821310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x418214e8"/>
        <function-ref name="header" scoped="" ref="0x418215c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41821708" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41821708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x418218e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x41820408" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x41820408"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x418205e0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x418206c0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x418207a0"/>
        <function-ref name="getSender" scoped="" ref="0x41820880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40b2b540" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40b2b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40b2b718"/>
        <function-ref name="insertNode" scoped="" ref="0x40b2b7f8"/>
        <function-ref name="getNode" scoped="" ref="0x40b2b8d8"/>
        <function-ref name="evicted" scoped="" ref="0x40b2b9b8"/>
        <function-ref name="getIndex" scoped="" ref="0x40b2ba98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40b25010" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40b25010"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b251e8"/>
        <function-ref name="clearAll" scoped="" ref="0x40b252c8"/>
        <function-ref name="get" scoped="" ref="0x40b253a8"/>
        <function-ref name="set" scoped="" ref="0x40b25488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40b26510" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40b26510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40b266e8"/>
        <function-ref name="insertNode" scoped="" ref="0x40b267c8"/>
        <function-ref name="getNode" scoped="" ref="0x40b268a8"/>
        <function-ref name="evicted" scoped="" ref="0x40b26988"/>
        <function-ref name="getIndex" scoped="" ref="0x40b26a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b26178" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b26178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b26350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x4181e4c0" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4181e4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4181e698"/>
        <function-ref name="clearAll" scoped="" ref="0x4181e778"/>
        <function-ref name="get" scoped="" ref="0x4181e858"/>
        <function-ref name="set" scoped="" ref="0x4181e938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b48440" loc="85:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b48440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b48618"/>
        <function-ref name="cancel" scoped="" ref="0x40b486f8"/>
        <function-ref name="sendDone" scoped="" ref="0x40b487d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b48938" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b48938"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b48b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x40b46010" loc="93:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x40b46010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40b461e8"/>
        <function-ref name="noAck" scoped="" ref="0x40b462c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40b463a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40b50d38" loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b50d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b50f10"/>
        <function-ref name="cancel" scoped="" ref="0x40b4f010"/>
        <function-ref name="sendDone" scoped="" ref="0x40b4f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40b4fc00" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40b4fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b4fdd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b4feb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b48010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b480f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40b481d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b482b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40b48c70" loc="87:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40b48c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b48e48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b48f28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b47018"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b470f8"/>
        <function-ref name="headerLength" scoped="" ref="0x40b471d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b472b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x40b47910" loc="92:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x40b47910"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40b47ae8"/>
        <function-ref name="setRetries" scoped="" ref="0x40b47bc8"/>
        <function-ref name="getRetries" scoped="" ref="0x40b47ca8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40b47d88"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40b47e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40b4f250" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b4f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b4f428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40b473f8" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40b473f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40b475d0"/>
        <function-ref name="noAck" scoped="" ref="0x40b476b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40b47790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40b4f568" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40b4f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40b4f740"/>
        <function-ref name="setRetries" scoped="" ref="0x40b4f820"/>
        <function-ref name="getRetries" scoped="" ref="0x40b4f900"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40b4f9e0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40b4fac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40bbb348" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40bbb348"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40bbb520"/>
        <function-ref name="stopDone" scoped="" ref="0x40bbb600"/>
        <function-ref name="start" scoped="" ref="0x40bbb6e0"/>
        <function-ref name="stop" scoped="" ref="0x40bbb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bd34c0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bd34c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bd3698"/>
        <function-ref name="cancel" scoped="" ref="0x40bd3778"/>
        <function-ref name="sendDone" scoped="" ref="0x40bd3858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bd39b8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bd39b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bd3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bbb920" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bbb920"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bbbaf8"/>
        <function-ref name="cancel" scoped="" ref="0x40bbbbd8"/>
        <function-ref name="sendDone" scoped="" ref="0x40bbbcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40bd4150" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40bd4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bd4328"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bd4408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bd44e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bd45c8"/>
        <function-ref name="headerLength" scoped="" ref="0x40bd46a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40bd4788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40bd48c8" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40bd48c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40bd4aa0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40bd4b80"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40bd4c60"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40bd4d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40bd4ed0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40bd4ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40bd30c0"/>
        <function-ref name="stopDone" scoped="" ref="0x40bd31a0"/>
        <function-ref name="start" scoped="" ref="0x40bd3280"/>
        <function-ref name="stop" scoped="" ref="0x40bd3360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bbbe18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bbbe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bd4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40bd3cf0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40bd3cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bd3ec8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bd2010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bd20f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bd21d0"/>
        <function-ref name="headerLength" scoped="" ref="0x40bd22b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40bd2390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40bd24f0" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40bd24f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getListenLength" scoped="" ref="0x40bd26c8"/>
        <function-ref name="ackRequested" scoped="" ref="0x40bd27a8"/>
        <function-ref name="needsAutoAckRequest" scoped="" ref="0x40bd2888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40bd29c8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bd29c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40bd2ba0"/>
        <function-ref name="noAck" scoped="" ref="0x40bd2c80"/>
        <function-ref name="wasAcked" scoped="" ref="0x40bd2d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41864b40" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41864b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41864d18"/>
        <function-ref name="stopDone" scoped="" ref="0x41864df8"/>
        <function-ref name="start" scoped="" ref="0x41864ed8"/>
        <function-ref name="stop" scoped="" ref="0x41860010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4185ed30" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4185ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4185ef08"/>
        <function-ref name="cancel" scoped="" ref="0x4185d010"/>
        <function-ref name="sendDone" scoped="" ref="0x4185d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4185d250" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4185d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4185d428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x4185a9f0" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4185a9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x4185ac48"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x4185ad28"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x4185ae08"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x4185aee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41860170" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41860170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41860348"/>
        <function-ref name="cancel" scoped="" ref="0x41860428"/>
        <function-ref name="sendDone" scoped="" ref="0x41860508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41860980" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41860980"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41860b58"/>
        <function-ref name="payloadLength" scoped="" ref="0x41860c38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41860d18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41860df8"/>
        <function-ref name="headerLength" scoped="" ref="0x41860ed8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4185e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4185e150" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4185e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4185e328"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4185e408"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4185e4e8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4185e5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4185c250" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4185c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getListenLength" scoped="" ref="0x4185c428"/>
        <function-ref name="ackRequested" scoped="" ref="0x4185c508"/>
        <function-ref name="needsAutoAckRequest" scoped="" ref="0x4185c5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4185d588" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4185d588"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4185d760"/>
        <function-ref name="payloadLength" scoped="" ref="0x4185d840"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4185d920"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4185da00"/>
        <function-ref name="headerLength" scoped="" ref="0x4185dae0"/>
        <function-ref name="metadataLength" scoped="" ref="0x4185dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x4185e758" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x4185e758"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4185e930"/>
        <function-ref name="stopDone" scoped="" ref="0x4185ea10"/>
        <function-ref name="start" scoped="" ref="0x4185eaf0"/>
        <function-ref name="stop" scoped="" ref="0x4185ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="transition" ref="0x41858c58" loc="111:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="transition" scoped="" ref="0x41858c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41858e30"/>
        <function-ref name="runTask" scoped="" ref="0x41858f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41860668" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41860668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41860840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41858040" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41858040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41858218"/>
        <function-ref name="led0Toggle" scoped="" ref="0x418582f8"/>
        <function-ref name="led1On" scoped="" ref="0x418583d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x418584b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41858598"/>
        <function-ref name="get" scoped="" ref="0x41858678"/>
        <function-ref name="led1Off" scoped="" ref="0x41858758"/>
        <function-ref name="led0On" scoped="" ref="0x41858ad8"/>
        <function-ref name="set" scoped="" ref="0x41858918"/>
        <function-ref name="led2On" scoped="" ref="0x41858838"/>
        <function-ref name="led2Off" scoped="" ref="0x418589f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x4185dd00" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4185dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4185ded8"/>
        <function-ref name="noAck" scoped="" ref="0x4185c010"/>
        <function-ref name="wasAcked" scoped="" ref="0x4185c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4185c7b8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4185c7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4185a330"/>
        <function-ref name="fired" scoped="" ref="0x4185b560"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4185bc68"/>
        <function-ref name="isOneShot" scoped="" ref="0x4185ba10"/>
        <function-ref name="getdt" scoped="" ref="0x4185a7e0"/>
        <function-ref name="gett0" scoped="" ref="0x4185a588"/>
        <function-ref name="isRunning" scoped="" ref="0x4185b7b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4185cde0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4185a010"/>
        <function-ref name="startOneShot" scoped="" ref="0x4185b088"/>
        <function-ref name="stop" scoped="" ref="0x4185b308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41856b88" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41856b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x418546a8"/>
        <function-ref name="fired" scoped="" ref="0x41855938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41854068"/>
        <function-ref name="isOneShot" scoped="" ref="0x41855de8"/>
        <function-ref name="getdt" scoped="" ref="0x41854b58"/>
        <function-ref name="gett0" scoped="" ref="0x41854900"/>
        <function-ref name="isRunning" scoped="" ref="0x41855b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x418551e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41854388"/>
        <function-ref name="startOneShot" scoped="" ref="0x41855460"/>
        <function-ref name="stop" scoped="" ref="0x418556e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemLowPowerListening" ref="0x40b9f010" loc="3:/opt/tinyos-2.1.2/tos/system/SystemLowPowerListeningC.nc">
      <component-ref qname="SystemLowPowerListeningC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40b9f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x40b9f1e8"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x40b9f2c8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x40b9f3a8"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x40b9f488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemLowPowerListening" ref="0x40b9fc58" loc="5:/opt/tinyos-2.1.2/tos/system/SystemLowPowerListeningP.nc">
      <component-ref qname="SystemLowPowerListeningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x40b9fc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x40b9fe30"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x40b9ff10"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x40bc0010"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x40bc00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ba0e78" loc="46:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ba0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bba070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40bba200" loc="47:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40bba200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40bba3d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40bba4b8"/>
        <function-ref name="led1On" scoped="" ref="0x40bba598"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40bba678"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40bba758"/>
        <function-ref name="get" scoped="" ref="0x40bba838"/>
        <function-ref name="led1Off" scoped="" ref="0x40bba918"/>
        <function-ref name="led2Off" scoped="" ref="0x40bbac98"/>
        <function-ref name="set" scoped="" ref="0x40bba9f8"/>
        <function-ref name="led0On" scoped="" ref="0x40bbaad8"/>
        <function-ref name="led2On" scoped="" ref="0x40bbabb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40bcda58" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40bcda58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40bcdc30"/>
        <function-ref name="stopDone" scoped="" ref="0x40bcdd10"/>
        <function-ref name="start" scoped="" ref="0x40bcddf0"/>
        <function-ref name="stop" scoped="" ref="0x40bcded0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40c04d68" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40c04d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40c02010"/>
        <function-ref name="turnOn" scoped="" ref="0x40c020f0"/>
        <function-ref name="setChannel" scoped="" ref="0x40c021d0"/>
        <function-ref name="done" scoped="" ref="0x40c022b0"/>
        <function-ref name="standby" scoped="" ref="0x40c02390"/>
        <function-ref name="getChannel" scoped="" ref="0x40c02470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c04050" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c04050"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c04228"/>
        <function-ref name="cancel" scoped="" ref="0x40c04308"/>
        <function-ref name="sendDone" scoped="" ref="0x40c043e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40c02a88" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40c02a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c02c60"/>
        <function-ref name="header" scoped="" ref="0x40c02d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c04548" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c04548"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c04720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40c025b0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40c025b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c02788"/>
        <function-ref name="ready" scoped="" ref="0x40c02868"/>
        <function-ref name="sendDone" scoped="" ref="0x40c02948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40c04860" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40c04860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40c04a38"/>
        <function-ref name="setChannel" scoped="" ref="0x40c04b18"/>
        <function-ref name="getChannel" scoped="" ref="0x40c04bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4187f150" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4187f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4187f328"/>
        <function-ref name="stopDone" scoped="" ref="0x4187f408"/>
        <function-ref name="start" scoped="" ref="0x4187f4e8"/>
        <function-ref name="stop" scoped="" ref="0x4187f5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x4187f728" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4187f728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4187f900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x4187d830" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4187d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4187da08"/>
        <function-ref name="turnOn" scoped="" ref="0x4187dae8"/>
        <function-ref name="setChannel" scoped="" ref="0x4187dbc8"/>
        <function-ref name="done" scoped="" ref="0x4187dca8"/>
        <function-ref name="standby" scoped="" ref="0x4187dd88"/>
        <function-ref name="getChannel" scoped="" ref="0x4187de68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4187fa60" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4187fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4187fc38"/>
        <function-ref name="cancel" scoped="" ref="0x4187fd18"/>
        <function-ref name="sendDone" scoped="" ref="0x4187fdf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x4187b320" loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x4187b320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4187b4f8"/>
        <function-ref name="runTask" scoped="" ref="0x4187b5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x4187caa0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4187caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4187cc78"/>
        <function-ref name="header" scoped="" ref="0x4187cd58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x4187b758" loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x4187b758"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4187b930"/>
        <function-ref name="runTask" scoped="" ref="0x4187ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4187d010" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4187d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4187d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x4187ced8" loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x4187ced8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4187b0c0"/>
        <function-ref name="runTask" scoped="" ref="0x4187b1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x4187c5c8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4187c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4187c7a0"/>
        <function-ref name="ready" scoped="" ref="0x4187c880"/>
        <function-ref name="sendDone" scoped="" ref="0x4187c960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4187d328" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4187d328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4187d500"/>
        <function-ref name="setChannel" scoped="" ref="0x4187d5e0"/>
        <function-ref name="getChannel" scoped="" ref="0x4187d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x4187c010" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x4187c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x4187c1e8"/>
        <function-ref name="suspend" scoped="" ref="0x4187c2c8"/>
        <function-ref name="resume" scoped="" ref="0x4187c3a8"/>
        <function-ref name="run" scoped="" ref="0x4187c488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bfde58" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bfde58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c29050"/>
        <function-ref name="ready" scoped="" ref="0x40c29130"/>
        <function-ref name="sendDone" scoped="" ref="0x40c29210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c29370" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c29370"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c29548"/>
        <function-ref name="header" scoped="" ref="0x40c29628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40c29768" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40c29768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40c29940"/>
        <function-ref name="wait" scoped="" ref="0x40c29a20"/>
        <function-ref name="cancel" scoped="" ref="0x40c29b00"/>
        <function-ref name="isFree" scoped="" ref="0x40c29be0"/>
        <function-ref name="getNow" scoped="" ref="0x40c29cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40c29e20" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40c29e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40c28010"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40c280f0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40c281d0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40c282b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40bfda10" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40bfda10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bfdbe8"/>
        <function-ref name="header" scoped="" ref="0x40bfdcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40bfd538" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40bfd538"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bfd710"/>
        <function-ref name="ready" scoped="" ref="0x40bfd7f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bfd8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x418b5b08" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x418b5b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x418b5ce0"/>
        <function-ref name="ready" scoped="" ref="0x418b5dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x418b5ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x418b4030" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x418b4030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x418b4208"/>
        <function-ref name="header" scoped="" ref="0x418b42e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x418b4428" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x418b4428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x418b4600"/>
        <function-ref name="wait" scoped="" ref="0x418b46e0"/>
        <function-ref name="cancel" scoped="" ref="0x418b47c0"/>
        <function-ref name="isFree" scoped="" ref="0x418b48a0"/>
        <function-ref name="getNow" scoped="" ref="0x418b4980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x418b4ac0" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x418b4ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x418b4c98"/>
        <function-ref name="rand32" scoped="" ref="0x418b4d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x418b4ed8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x418b4ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x418b20c0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x418b21a0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x418b2280"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x418b2360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x418b56c0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x418b56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x418b5898"/>
        <function-ref name="header" scoped="" ref="0x418b5978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x418b51e8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x418b51e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x418b53c0"/>
        <function-ref name="ready" scoped="" ref="0x418b54a0"/>
        <function-ref name="sendDone" scoped="" ref="0x418b5580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x418b24e0" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x418b24e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x418b26b8"/>
        <function-ref name="runTask" scoped="" ref="0x418b2798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c59060" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c59060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c59238"/>
        <function-ref name="ready" scoped="" ref="0x40c59318"/>
        <function-ref name="sendDone" scoped="" ref="0x40c593f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c59558" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c59558"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c59730"/>
        <function-ref name="header" scoped="" ref="0x40c59810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40c59950" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40c59950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40c59b28"/>
        <function-ref name="wait" scoped="" ref="0x40c59c08"/>
        <function-ref name="cancel" scoped="" ref="0x40c59ce8"/>
        <function-ref name="isFree" scoped="" ref="0x40c59dc8"/>
        <function-ref name="getNow" scoped="" ref="0x40c59ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x40c58988" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x40c58988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c58b60"/>
        <function-ref name="get" scoped="" ref="0x40c58c40"/>
        <function-ref name="setValue" scoped="" ref="0x40c58d20"/>
        <function-ref name="set" scoped="" ref="0x40c58e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40c58030" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40c58030"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40c58208"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40c582e8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40c583c8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40c584a8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40c58588"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40c58668"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40c58748"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40c58828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40c26720" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40c26720"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c268f8"/>
        <function-ref name="header" scoped="" ref="0x40c269d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40c26248" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40c26248"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c26420"/>
        <function-ref name="ready" scoped="" ref="0x40c26500"/>
        <function-ref name="sendDone" scoped="" ref="0x40c265e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40c26b18" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c26b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c26cf0"/>
        <function-ref name="noAck" scoped="" ref="0x40c26dd0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c26eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c54e40" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c54e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c53050"/>
        <function-ref name="stopDone" scoped="" ref="0x40c53130"/>
        <function-ref name="start" scoped="" ref="0x40c53210"/>
        <function-ref name="stop" scoped="" ref="0x40c532f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40c48cc0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40c48cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40c48e98"/>
        <function-ref name="request" scoped="" ref="0x40c47010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c6d330" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c6d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c6d508"/>
        <function-ref name="ready" scoped="" ref="0x40c6d5e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c6d6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c6d828" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c6d828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c6da00"/>
        <function-ref name="header" scoped="" ref="0x40c6dae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40c53c20" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40c53c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40c53df8"/>
        <function-ref name="turnOn" scoped="" ref="0x40c53ed8"/>
        <function-ref name="setChannel" scoped="" ref="0x40c48010"/>
        <function-ref name="done" scoped="" ref="0x40c480f0"/>
        <function-ref name="standby" scoped="" ref="0x40c481d0"/>
        <function-ref name="getChannel" scoped="" ref="0x40c482b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40c47150" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40c47150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c47328"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c47408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c474e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c475c8"/>
        <function-ref name="headerLength" scoped="" ref="0x40c476a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c47788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40c6ea80" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40c6ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40c6ecd8"/>
        <function-ref name="turnOn" scoped="" ref="0x40c6edb8"/>
        <function-ref name="setChannel" scoped="" ref="0x40c6ee98"/>
        <function-ref name="done" scoped="" ref="0x40c6d010"/>
        <function-ref name="standby" scoped="" ref="0x40c6d0f0"/>
        <function-ref name="getChannel" scoped="" ref="0x40c6d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40c478e8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40c478e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40c47ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40c488c8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40c488c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c48aa0"/>
        <function-ref name="header" scoped="" ref="0x40c48b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40c6e748" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40c6e748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c6e920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40c47c50" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40c47c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c47e28"/>
        <function-ref name="stopDone" scoped="" ref="0x40c47f08"/>
        <function-ref name="start" scoped="" ref="0x40c6e010"/>
        <function-ref name="stop" scoped="" ref="0x40c6e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40c6c090" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40c6c090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c6c268"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c6c348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c6c428"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c6c508"/>
        <function-ref name="headerLength" scoped="" ref="0x40c6c5e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c6c6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40c53908" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40c53908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c53ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40c6c828" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40c6c828"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40c6ca00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40c6e250" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40c6e250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c6e428"/>
        <function-ref name="cancel" scoped="" ref="0x40c6e508"/>
        <function-ref name="sendDone" scoped="" ref="0x40c6e5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40c483f0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40c483f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c485c8"/>
        <function-ref name="ready" scoped="" ref="0x40c486a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c48788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40c6dc40" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40c6dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40c6de18"/>
        <function-ref name="request" scoped="" ref="0x40c6def8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40c53430" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40c53430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c53608"/>
        <function-ref name="cancel" scoped="" ref="0x40c536e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c537c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x40c837a8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x40c837a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c83980"/>
        <function-ref name="get" scoped="" ref="0x40c83a60"/>
        <function-ref name="setValue" scoped="" ref="0x40c83b40"/>
        <function-ref name="set" scoped="" ref="0x40c83c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40c86e40" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40c86e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c85050"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c85130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c85210"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c852f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40c853d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c854b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40c83010" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40c83010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c831e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c832c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c833a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c83488"/>
        <function-ref name="headerLength" scoped="" ref="0x40c83568"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c83648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40c877d8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40c877d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TRadio" ref="0x404eba40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c862e8"/>
        <function-ref name="clear" scoped="" ref="0x40c86698"/>
        <function-ref name="isValid" scoped="" ref="0x40c87f28"/>
        <function-ref name="set" scoped="" ref="0x40c86a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x40c856d0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40c856d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TRadio" ref="0x404eba40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c85d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40c67010" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c67010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c67b10"/>
        <function-ref name="clear" scoped="" ref="0x40c67ec0"/>
        <function-ref name="isValid" scoped="" ref="0x40c67760"/>
        <function-ref name="set" scoped="" ref="0x40c872a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x418e07d8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x418e07d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x418e09b0"/>
        <function-ref name="get" scoped="" ref="0x418e0a90"/>
        <function-ref name="setValue" scoped="" ref="0x418e0b70"/>
        <function-ref name="set" scoped="" ref="0x418e0c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x418e0010" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x418e0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x418e01e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x418e02c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418e03a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x418e0488"/>
        <function-ref name="headerLength" scoped="" ref="0x418e0568"/>
        <function-ref name="metadataLength" scoped="" ref="0x418e0648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x418de030" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x418de030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x418de208"/>
        <function-ref name="payloadLength" scoped="" ref="0x418de2e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418de3c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x418de4a8"/>
        <function-ref name="headerLength" scoped="" ref="0x418de588"/>
        <function-ref name="metadataLength" scoped="" ref="0x418de668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x418e38f8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x418e38f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TRadio" ref="0x404eba40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x418e1418"/>
        <function-ref name="clear" scoped="" ref="0x418e17c8"/>
        <function-ref name="isValid" scoped="" ref="0x418e1068"/>
        <function-ref name="set" scoped="" ref="0x418e1b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x418e0e40" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x418e0e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TRadio" ref="0x404eba40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x418df4d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x418df798" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x418df798"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x418dfde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x418e4108" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x418e4108"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x418e4c08"/>
        <function-ref name="clear" scoped="" ref="0x418e3010"/>
        <function-ref name="isValid" scoped="" ref="0x418e4858"/>
        <function-ref name="set" scoped="" ref="0x418e33c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40c8cc48" loc="20:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40c8cc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c892a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40ca8a10" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40ca8a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ca8be8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ca8cc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ca8da8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ca8e88"/>
        <function-ref name="headerLength" scoped="" ref="0x40ca7010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ca70f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40ca7280" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40ca7280"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ca7458"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ca7538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ca7618"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ca76f8"/>
        <function-ref name="headerLength" scoped="" ref="0x40ca77d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ca78b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40ca8448" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40ca8448"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ca8630"/>
        <function-ref name="get" scoped="" ref="0x40ca8710"/>
        <function-ref name="setValue" scoped="" ref="0x40ca87f0"/>
        <function-ref name="set" scoped="" ref="0x40ca88d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40cbcb50" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40cbcb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40cbcd28"/>
        <function-ref name="stopDone" scoped="" ref="0x40cbce08"/>
        <function-ref name="start" scoped="" ref="0x40cbcee8"/>
        <function-ref name="stop" scoped="" ref="0x40cbb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40cbaa20" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40cbaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40cbabf8"/>
        <function-ref name="request" scoped="" ref="0x40cbacd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40cb7010" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40cb7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cb71e8"/>
        <function-ref name="ready" scoped="" ref="0x40cb72c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40cb73a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40cb7508" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40cb7508"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cb76e0"/>
        <function-ref name="header" scoped="" ref="0x40cb77c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40cbb940" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40cbb940"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40cbbb18"/>
        <function-ref name="turnOn" scoped="" ref="0x40cbbbf8"/>
        <function-ref name="setChannel" scoped="" ref="0x40cbbcd8"/>
        <function-ref name="done" scoped="" ref="0x40cbbdb8"/>
        <function-ref name="standby" scoped="" ref="0x40cbbe98"/>
        <function-ref name="getChannel" scoped="" ref="0x40cba010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40cbae18" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40cbae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cb9010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cb90f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cb91d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cb92b0"/>
        <function-ref name="headerLength" scoped="" ref="0x40cb9390"/>
        <function-ref name="metadataLength" scoped="" ref="0x40cb9470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40cb8760" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40cb8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40cb89b8"/>
        <function-ref name="turnOn" scoped="" ref="0x40cb8a98"/>
        <function-ref name="setChannel" scoped="" ref="0x40cb8b78"/>
        <function-ref name="done" scoped="" ref="0x40cb8c58"/>
        <function-ref name="standby" scoped="" ref="0x40cb8d38"/>
        <function-ref name="getChannel" scoped="" ref="0x40cb8e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40cb95d0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40cb95d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40cb97a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40cba628" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40cba628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cba800"/>
        <function-ref name="header" scoped="" ref="0x40cba8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40cb8428" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40cb8428"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cb8600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40cb9938" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40cb9938"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40cb9b10"/>
        <function-ref name="stopDone" scoped="" ref="0x40cb9bf0"/>
        <function-ref name="start" scoped="" ref="0x40cb9cd0"/>
        <function-ref name="stop" scoped="" ref="0x40cb9db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40cb7d38" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40cb7d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cb7f10"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cb5010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cb50f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cb51d0"/>
        <function-ref name="headerLength" scoped="" ref="0x40cb52b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40cb5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40cbb628" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40cbb628"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cbb800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40cb54f0" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40cb54f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40cb56c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40cb9f10" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40cb9f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cb8108"/>
        <function-ref name="cancel" scoped="" ref="0x40cb81e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40cb82c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40cba150" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40cba150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cba328"/>
        <function-ref name="ready" scoped="" ref="0x40cba408"/>
        <function-ref name="sendDone" scoped="" ref="0x40cba4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40cb7920" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40cb7920"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40cb7af8"/>
        <function-ref name="request" scoped="" ref="0x40cb7bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40cbb150" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40cbb150"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cbb328"/>
        <function-ref name="cancel" scoped="" ref="0x40cbb408"/>
        <function-ref name="sendDone" scoped="" ref="0x40cbb4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40caf010" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40caf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40caf1e8"/>
        <function-ref name="request" scoped="" ref="0x40caf2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40cad1c0" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40cad1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cadd88"/>
        <function-ref name="get" scoped="" ref="0x40cadac8"/>
        <function-ref name="isSet" scoped="" ref="0x40cad808"/>
        <function-ref name="set" scoped="" ref="0x40cab068"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40ccbe68" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40ccbe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cca050"/>
        <function-ref name="get" scoped="" ref="0x40cca130"/>
        <function-ref name="setValue" scoped="" ref="0x40cca210"/>
        <function-ref name="set" scoped="" ref="0x40cca2f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40ccc010" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40ccc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TRadio" ref="0x404eba40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40cccb10"/>
        <function-ref name="clear" scoped="" ref="0x40cccec0"/>
        <function-ref name="isValid" scoped="" ref="0x40ccc760"/>
        <function-ref name="set" scoped="" ref="0x40ccb2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40cb3e10" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40cb3e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40cb0010"/>
        <function-ref name="turnOn" scoped="" ref="0x40cb00f0"/>
        <function-ref name="setChannel" scoped="" ref="0x40cb01d0"/>
        <function-ref name="done" scoped="" ref="0x40cb02b0"/>
        <function-ref name="standby" scoped="" ref="0x40cb0390"/>
        <function-ref name="getChannel" scoped="" ref="0x40cb0470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40ccab58" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40ccab58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ccad30"/>
        <function-ref name="wait" scoped="" ref="0x40ccae10"/>
        <function-ref name="cancel" scoped="" ref="0x40ccaef0"/>
        <function-ref name="isFree" scoped="" ref="0x40cc9010"/>
        <function-ref name="getNow" scoped="" ref="0x40cc90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40cafe18" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40cafe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40caea08"/>
        <function-ref name="get" scoped="" ref="0x40cae748"/>
        <function-ref name="isSet" scoped="" ref="0x40cae488"/>
        <function-ref name="set" scoped="" ref="0x40caecc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40caf478" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40caf478"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40caf650"/>
        <function-ref name="payloadLength" scoped="" ref="0x40caf730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40caf810"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40caf8f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40caf9d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40cafab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40ccd650" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40ccd650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ccd8a8"/>
        <function-ref name="headerLength" scoped="" ref="0x40ccd988"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ccda68"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40ccdb48"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40ccdc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40cb0b68" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40cb0b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cb0d40"/>
        <function-ref name="header" scoped="" ref="0x40cb0e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40cd0b98" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40cd0b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TRadio" ref="0x404eba40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x404ebce8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ccd068"/>
        <function-ref name="fired" scoped="" ref="0x40ccf820"/>
        <function-ref name="startAt" scoped="" ref="0x40ccfd10"/>
        <function-ref name="isRunning" scoped="" ref="0x40ccfa98"/>
        <function-ref name="getAlarm" scoped="" ref="0x40ccd2e0"/>
        <function-ref name="start" scoped="" ref="0x40ccf308"/>
        <function-ref name="stop" scoped="" ref="0x40ccf5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40cab598" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40cab598"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cd3190"/>
        <function-ref name="get" scoped="" ref="0x40cabea0"/>
        <function-ref name="isSet" scoped="" ref="0x40cabbe0"/>
        <function-ref name="set" scoped="" ref="0x40cd3450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40cd0138" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40cd0138"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TRadio" ref="0x404eba40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cd0780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40cb0610" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40cb0610"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cb07e8"/>
        <function-ref name="ready" scoped="" ref="0x40cb08c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40cb09a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40cd3960" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40cd3960"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cd2590"/>
        <function-ref name="get" scoped="" ref="0x40cd22d0"/>
        <function-ref name="isSet" scoped="" ref="0x40cd2010"/>
        <function-ref name="set" scoped="" ref="0x40cd2850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40cca538" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40cca538"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cca710"/>
        <function-ref name="get" scoped="" ref="0x40cca7f0"/>
        <function-ref name="setValue" scoped="" ref="0x40cca8d0"/>
        <function-ref name="set" scoped="" ref="0x40cca9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40ccb7d0" loc="63:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40ccb7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ccb9a8"/>
        <function-ref name="get" scoped="" ref="0x40ccba88"/>
        <function-ref name="setValue" scoped="" ref="0x40ccbb68"/>
        <function-ref name="set" scoped="" ref="0x40ccbc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40cd2c00" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40cd2c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40cd2dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40cc3b58" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40cc3b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40cc3d30"/>
        <function-ref name="request" scoped="" ref="0x40cc3e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40cd9748" loc="74:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40cd9748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40462778"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40cd9e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40cc1d18" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40cc1d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cbf8f0"/>
        <function-ref name="get" scoped="" ref="0x40cbf630"/>
        <function-ref name="isSet" scoped="" ref="0x40cbf370"/>
        <function-ref name="set" scoped="" ref="0x40cbfbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40cdaa00" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40cdaa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cdabd8"/>
        <function-ref name="get" scoped="" ref="0x40cdacb8"/>
        <function-ref name="setValue" scoped="" ref="0x40cdad98"/>
        <function-ref name="set" scoped="" ref="0x40cdae78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40cc4590" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40cc4590"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x404087d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x404087d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cc4768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40cd78e8" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40cd78e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TRadio" ref="0x404eba40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40cd65b0"/>
        <function-ref name="clear" scoped="" ref="0x40cd6960"/>
        <function-ref name="isValid" scoped="" ref="0x40cd6200"/>
        <function-ref name="set" scoped="" ref="0x40cd6d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40ce3db8" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40ce3db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ce2010"/>
        <function-ref name="isInput" scoped="" ref="0x40ce20f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ce21d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ce22b0"/>
        <function-ref name="get" scoped="" ref="0x40ce2390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ce2470"/>
        <function-ref name="set" scoped="" ref="0x40ce2550"/>
        <function-ref name="clr" scoped="" ref="0x40ce2630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40cd57b0" loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40cd57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40cd5988"/>
        <function-ref name="wait" scoped="" ref="0x40cd5a68"/>
        <function-ref name="cancel" scoped="" ref="0x40cd5b48"/>
        <function-ref name="isFree" scoped="" ref="0x40cd5c28"/>
        <function-ref name="getNow" scoped="" ref="0x40cd5d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40cc4910" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40cc4910"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40cc4ae8"/>
        <function-ref name="turnOn" scoped="" ref="0x40cc4bc8"/>
        <function-ref name="setChannel" scoped="" ref="0x40cc4ca8"/>
        <function-ref name="done" scoped="" ref="0x40cc4d88"/>
        <function-ref name="standby" scoped="" ref="0x40cc4e68"/>
        <function-ref name="getChannel" scoped="" ref="0x40cc3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40cdc218" loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40cdc218"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TRadio" ref="0x404eba40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cdc860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40cc29b0" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40cc29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cc1590"/>
        <function-ref name="get" scoped="" ref="0x40cc12d0"/>
        <function-ref name="isSet" scoped="" ref="0x40cc1010"/>
        <function-ref name="set" scoped="" ref="0x40cc1850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40cc2010" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40cc2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cc21e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cc22c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cc23a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cc2488"/>
        <function-ref name="headerLength" scoped="" ref="0x40cc2568"/>
        <function-ref name="metadataLength" scoped="" ref="0x40cc2648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x40ce33d0" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40ce33d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ce35a8"/>
        <function-ref name="isInput" scoped="" ref="0x40ce3688"/>
        <function-ref name="toggle" scoped="" ref="0x40ce3768"/>
        <function-ref name="isOutput" scoped="" ref="0x40ce3848"/>
        <function-ref name="get" scoped="" ref="0x40ce3928"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ce3a08"/>
        <function-ref name="set" scoped="" ref="0x40ce3ae8"/>
        <function-ref name="clr" scoped="" ref="0x40ce3bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40cdcb80" loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40cdcb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cdcd58"/>
        <function-ref name="headerLength" scoped="" ref="0x40cdce38"/>
        <function-ref name="metadataLength" scoped="" ref="0x40cdcf18"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40cda010"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40cda0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40cc3708" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40cc3708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cc38e0"/>
        <function-ref name="header" scoped="" ref="0x40cc39c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x40d291e0" loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x40d291e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d293b8"/>
        <function-ref name="runTask" scoped="" ref="0x40d29498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40ce8100" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40ce8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ce8cc8"/>
        <function-ref name="get" scoped="" ref="0x40ce8a08"/>
        <function-ref name="isSet" scoped="" ref="0x40ce8748"/>
        <function-ref name="set" scoped="" ref="0x40ce7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40cc5f10" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40cc5f10"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x404087d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x404087d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cc4108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40ce4698" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40ce4698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ce4870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ce4950"/>
        <function-ref name="request" scoped="" ref="0x40ce4a30"/>
        <function-ref name="granted" scoped="" ref="0x40ce4b10"/>
        <function-ref name="isOwner" scoped="" ref="0x40ce4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x40ce5b80" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40ce5b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ce5dd8"/>
        <function-ref name="isInput" scoped="" ref="0x40ce5eb8"/>
        <function-ref name="toggle" scoped="" ref="0x40ce4010"/>
        <function-ref name="isOutput" scoped="" ref="0x40ce40f0"/>
        <function-ref name="get" scoped="" ref="0x40ce41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ce42b0"/>
        <function-ref name="set" scoped="" ref="0x40ce4390"/>
        <function-ref name="clr" scoped="" ref="0x40ce4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40ce7520" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40ce7520"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ce50f8"/>
        <function-ref name="get" scoped="" ref="0x40ce7e28"/>
        <function-ref name="isSet" scoped="" ref="0x40ce7b68"/>
        <function-ref name="set" scoped="" ref="0x40ce53b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40cc31b0" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40cc31b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cc3388"/>
        <function-ref name="ready" scoped="" ref="0x40cc3468"/>
        <function-ref name="sendDone" scoped="" ref="0x40cc3548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x40cdbef8" loc="72:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40cdbef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40cde0e0"/>
        <function-ref name="disable" scoped="" ref="0x40cde1c0"/>
        <function-ref name="captured" scoped="" ref="0x40cde2a0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40cde380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x40ce0d10" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40ce0d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40ce0ee8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40ce3010"/>
        <function-ref name="splitRead" scoped="" ref="0x40ce30f0"/>
        <function-ref name="write" scoped="" ref="0x40ce31d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40cd70e0" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40cd70e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cd72b8"/>
        <function-ref name="get" scoped="" ref="0x40cd7398"/>
        <function-ref name="setValue" scoped="" ref="0x40cd7478"/>
        <function-ref name="set" scoped="" ref="0x40cd7558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40cda368" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40cda368"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cda540"/>
        <function-ref name="get" scoped="" ref="0x40cda620"/>
        <function-ref name="setValue" scoped="" ref="0x40cda700"/>
        <function-ref name="set" scoped="" ref="0x40cda7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40ce5768" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ce5768"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40ce5940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40cd5190" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40cd5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40cd5368"/>
        <function-ref name="suspend" scoped="" ref="0x40cd5448"/>
        <function-ref name="resume" scoped="" ref="0x40cd5528"/>
        <function-ref name="run" scoped="" ref="0x40cd5608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40d594a0" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40d594a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d59678"/>
        <function-ref name="isInput" scoped="" ref="0x40d59758"/>
        <function-ref name="toggle" scoped="" ref="0x40d59838"/>
        <function-ref name="isOutput" scoped="" ref="0x40d59918"/>
        <function-ref name="get" scoped="" ref="0x40d599f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d59ad8"/>
        <function-ref name="set" scoped="" ref="0x40d59bb8"/>
        <function-ref name="clr" scoped="" ref="0x40d59c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x40d5a9f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40d5a9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d5abd0"/>
        <function-ref name="isInput" scoped="" ref="0x40d5acb0"/>
        <function-ref name="toggle" scoped="" ref="0x40d5ad90"/>
        <function-ref name="isOutput" scoped="" ref="0x40d5ae70"/>
        <function-ref name="get" scoped="" ref="0x40d59010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d590f0"/>
        <function-ref name="set" scoped="" ref="0x40d591d0"/>
        <function-ref name="clr" scoped="" ref="0x40d592b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40d58698" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40d58698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TRadio" ref="0x404eba40"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d56b50"/>
        <function-ref name="fired" scoped="" ref="0x40d56320"/>
        <function-ref name="startAt" scoped="" ref="0x40d56810"/>
        <function-ref name="isRunning" scoped="" ref="0x40d56598"/>
        <function-ref name="getAlarm" scoped="" ref="0x40d56dc8"/>
        <function-ref name="start" scoped="" ref="0x40d58de8"/>
        <function-ref name="stop" scoped="" ref="0x40d560a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x40d5bc00" loc="42:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40d5bc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d5bdd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d5beb8"/>
        <function-ref name="request" scoped="" ref="0x40d5a010"/>
        <function-ref name="granted" scoped="" ref="0x40d5a0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40d5a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x40d5b1e0" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x40d5b1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d5b3b8"/>
        <function-ref name="isInput" scoped="" ref="0x40d5b498"/>
        <function-ref name="toggle" scoped="" ref="0x40d5b578"/>
        <function-ref name="isOutput" scoped="" ref="0x40d5b658"/>
        <function-ref name="get" scoped="" ref="0x40d5b738"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d5b818"/>
        <function-ref name="set" scoped="" ref="0x40d5b8f8"/>
        <function-ref name="clr" scoped="" ref="0x40d5b9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40d59e88" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40d59e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40d58070"/>
        <function-ref name="disable" scoped="" ref="0x40d58150"/>
        <function-ref name="captured" scoped="" ref="0x40d58230"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40d58310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40d5a380" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40d5a380"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40d5a558"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40d5a638"/>
        <function-ref name="splitRead" scoped="" ref="0x40d5a718"/>
        <function-ref name="write" scoped="" ref="0x40d5a7f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40d551e0" loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40d551e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TRadio" ref="0x404eba40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d55828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x40d7cae0" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x40d7cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d7ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x40d7cd98"/>
        <function-ref name="toggle" scoped="" ref="0x40d7ce78"/>
        <function-ref name="isOutput" scoped="" ref="0x40d76010"/>
        <function-ref name="get" scoped="" ref="0x40d760f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d761d0"/>
        <function-ref name="set" scoped="" ref="0x40d762b0"/>
        <function-ref name="clr" scoped="" ref="0x40d76390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x40d78d40" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40d78d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40d7c7d0"/>
        <function-ref name="test" scoped="" ref="0x40d7c2e0"/>
        <function-ref name="get" scoped="" ref="0x40d7d3a0"/>
        <function-ref name="captured" scoped="" ref="0x40d7d8b8"/>
        <function-ref name="reset" scoped="" ref="0x40d7db58"/>
        <function-ref name="isOn" scoped="" ref="0x40d7c558"/>
        <function-ref name="set" scoped="" ref="0x40d7d618"/>
        <function-ref name="start" scoped="" ref="0x40d7ddd0"/>
        <function-ref name="stop" scoped="" ref="0x40d7c068"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x40d76598" loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x40d76598"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d76770"/>
        <function-ref name="isInput" scoped="" ref="0x40d76850"/>
        <function-ref name="toggle" scoped="" ref="0x40d76930"/>
        <function-ref name="isOutput" scoped="" ref="0x40d76a10"/>
        <function-ref name="get" scoped="" ref="0x40d76af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d76bd0"/>
        <function-ref name="set" scoped="" ref="0x40d76cb0"/>
        <function-ref name="clr" scoped="" ref="0x40d76d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40d7e698" loc="40:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40d7e698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d7e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40d7e010" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40d7e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40d7e1e8"/>
        <function-ref name="disable" scoped="" ref="0x40d7e2c8"/>
        <function-ref name="captured" scoped="" ref="0x40d7e3a8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40d7e488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40d94dc8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40d94dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d6d010"/>
        <function-ref name="sendDone" scoped="" ref="0x40d6d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40d6b248" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40d6b248"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40d6b420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d53570" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d53570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d53748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40d6b5f0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40d6b5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40d6b7c8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40d6b8a8"/>
        <function-ref name="splitRead" scoped="" ref="0x40d6b988"/>
        <function-ref name="write" scoped="" ref="0x40d6ba68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d6d588" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d6d588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d6d760"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d6d840"/>
        <function-ref name="request" scoped="" ref="0x40d6d920"/>
        <function-ref name="granted" scoped="" ref="0x40d6da00"/>
        <function-ref name="isOwner" scoped="" ref="0x40d6dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40d97be0" loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40d97be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d97db8"/>
        <function-ref name="runTask" scoped="" ref="0x40d97e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40d90450" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40d90450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d90628"/>
        <function-ref name="sendDone" scoped="" ref="0x40d90708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40d8c8c0" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40d8c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d8ca98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d8cb78"/>
        <function-ref name="request" scoped="" ref="0x40d8cc58"/>
        <function-ref name="granted" scoped="" ref="0x40d8cd38"/>
        <function-ref name="isOwner" scoped="" ref="0x40d8ce18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40d6ca28" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40d6ca28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40d6cc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d6c6c8" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d6c6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d6c8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40d7fbc8" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40d7fbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40d7fda0"/>
        <function-ref name="sleep" scoped="" ref="0x40d8c2b0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40d8d010"/>
        <function-ref name="dataReady" scoped="" ref="0x40d8c390"/>
        <function-ref name="initMaster" scoped="" ref="0x40d8d1d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40d8d2b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40d8d390"/>
        <function-ref name="read" scoped="" ref="0x40d8d470"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40d8d550"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40d8d630"/>
        <function-ref name="setClock" scoped="" ref="0x40d8d710"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40d8d7f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40d8d8d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40d8da30"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40d8db10"/>
        <function-ref name="write" scoped="" ref="0x40d8dbf0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40d8dcd0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40d8ddb0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40d8de90"/>
        <function-ref name="getClock" scoped="" ref="0x40d8c010"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40d8c0f0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40d7fe80"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40d8d0f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40d8c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x40d6cdb0" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x40d6cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40d90010"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40d900f0"/>
        <function-ref name="splitRead" scoped="" ref="0x40d901d0"/>
        <function-ref name="write" scoped="" ref="0x40d902b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d90b80" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d90b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d90d58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d90e38"/>
        <function-ref name="request" scoped="" ref="0x40d90f18"/>
        <function-ref name="granted" scoped="" ref="0x40d8e010"/>
        <function-ref name="isOwner" scoped="" ref="0x40d8e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40da9010" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40da9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40da91e8"/>
        <function-ref name="userId" scoped="" ref="0x40da92c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40da9490" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40da9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40da9668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40d919b8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40d919b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40d91b90"/>
        <function-ref name="sleep" scoped="" ref="0x40dd5010"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40d91d50"/>
        <function-ref name="dataReady" scoped="" ref="0x40dd50f0"/>
        <function-ref name="initMaster" scoped="" ref="0x40d91f10"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40dd6010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40dd60f0"/>
        <function-ref name="read" scoped="" ref="0x40dd61d0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40dd62b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40dd6390"/>
        <function-ref name="setClock" scoped="" ref="0x40dd6470"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40dd6550"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40dd6630"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40dd6790"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40dd6870"/>
        <function-ref name="write" scoped="" ref="0x40dd6950"/>
        <function-ref name="enableSpi" scoped="" ref="0x40dd6a30"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40dd6b10"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40dd6bf0"/>
        <function-ref name="getClock" scoped="" ref="0x40dd6cd0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40dd6db0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40d91c70"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40d91e30"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40dd6e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40dcd9f8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40dcd9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dcdbd0"/>
        <function-ref name="isInput" scoped="" ref="0x40dcdcb0"/>
        <function-ref name="toggle" scoped="" ref="0x40dcdd90"/>
        <function-ref name="isOutput" scoped="" ref="0x40dcde70"/>
        <function-ref name="get" scoped="" ref="0x40dcc010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dcc0f0"/>
        <function-ref name="set" scoped="" ref="0x40dcc1d0"/>
        <function-ref name="clr" scoped="" ref="0x40dcc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40dd0578" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40dd0578"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dd0750"/>
        <function-ref name="isInput" scoped="" ref="0x40dd0830"/>
        <function-ref name="toggle" scoped="" ref="0x40dd0910"/>
        <function-ref name="isOutput" scoped="" ref="0x40dd09f0"/>
        <function-ref name="get" scoped="" ref="0x40dd0ad0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dd0bb0"/>
        <function-ref name="set" scoped="" ref="0x40dd0c90"/>
        <function-ref name="clr" scoped="" ref="0x40dd0d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40dceb88" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40dceb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dced60"/>
        <function-ref name="isInput" scoped="" ref="0x40dcee40"/>
        <function-ref name="toggle" scoped="" ref="0x40dcef20"/>
        <function-ref name="isOutput" scoped="" ref="0x40dd0018"/>
        <function-ref name="get" scoped="" ref="0x40dd00f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dd01d8"/>
        <function-ref name="set" scoped="" ref="0x40dd02b8"/>
        <function-ref name="clr" scoped="" ref="0x40dd0398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40dce6c8" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40dce6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40dce8a0"/>
        <function-ref name="stop" scoped="" ref="0x40dce980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40dcc4b8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40dcc4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40dcc690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40dd5d50" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40dd5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40dd5f28"/>
        <function-ref name="sleep" scoped="" ref="0x40dd1390"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40dd20f8"/>
        <function-ref name="dataReady" scoped="" ref="0x40dd1470"/>
        <function-ref name="initMaster" scoped="" ref="0x40dd22b8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40dd2398"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40dd2478"/>
        <function-ref name="read" scoped="" ref="0x40dd2558"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40dd2638"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40dd2718"/>
        <function-ref name="setClock" scoped="" ref="0x40dd27f8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40dd28d8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40dd29b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40dd2b18"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40dd2bf8"/>
        <function-ref name="write" scoped="" ref="0x40dd2cd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x40dd2db8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40dd2e98"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40dd1010"/>
        <function-ref name="getClock" scoped="" ref="0x40dd10f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40dd11d0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40dd2018"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40dd21d8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40dd12b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40dcd010" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40dcd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dcd1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40dcd2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40dcd3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40dcd488"/>
        <function-ref name="get" scoped="" ref="0x40dcd568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dcd648"/>
        <function-ref name="set" scoped="" ref="0x40dcd728"/>
        <function-ref name="clr" scoped="" ref="0x40dcd808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40e01488" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40e01488"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40e01670"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e01750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40e01d40" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40e01d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40e01f28"/>
        <function-ref name="configure" scoped="" ref="0x40e00018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e02ca0" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e02ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e02e88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e01010"/>
        <function-ref name="request" scoped="" ref="0x40e010f0"/>
        <function-ref name="granted" scoped="" ref="0x40e011d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40e012b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40e01890" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40e01890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40e01a68"/>
        <function-ref name="userId" scoped="" ref="0x40e01b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41911f18" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41911f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4190f108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x4190f268" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x4190f268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4190f440"/>
        <function-ref name="isEmpty" scoped="" ref="0x4190f520"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4190f600"/>
        <function-ref name="dequeue" scoped="" ref="0x4190f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4190e998" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4190e998"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4190eb80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4190ec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4190d2f8" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4190d2f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4190d4e0"/>
        <function-ref name="configure" scoped="" ref="0x4190d5c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4190d720" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4190d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4190d8f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x4190d9d8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4190dab8"/>
        <function-ref name="dequeue" scoped="" ref="0x4190db98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4190e258" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4190e258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4190e440"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4190e520"/>
        <function-ref name="request" scoped="" ref="0x4190e600"/>
        <function-ref name="granted" scoped="" ref="0x4190e6e0"/>
        <function-ref name="isOwner" scoped="" ref="0x4190e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4190eda0" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4190eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4190d010"/>
        <function-ref name="userId" scoped="" ref="0x4190d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4190dd18" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4190dd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4190def0"/>
        <function-ref name="runTask" scoped="" ref="0x4190c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40df2e10" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40df2e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40df7010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40df70f0"/>
        <function-ref name="getControlA" scoped="" ref="0x40df71d0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40df72b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40df7390"/>
        <function-ref name="setControlB" scoped="" ref="0x40df7470"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40df7550"/>
        <function-ref name="getControlB" scoped="" ref="0x40df7630"/>
        <function-ref name="setControlC" scoped="" ref="0x40df7710"/>
        <function-ref name="setControlA" scoped="" ref="0x40df77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40df7b28" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40df7b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40df0640"/>
        <function-ref name="test" scoped="" ref="0x40df0150"/>
        <function-ref name="get" scoped="" ref="0x40df6200"/>
        <function-ref name="captured" scoped="" ref="0x40df6718"/>
        <function-ref name="reset" scoped="" ref="0x40df69b8"/>
        <function-ref name="isOn" scoped="" ref="0x40df03c8"/>
        <function-ref name="set" scoped="" ref="0x40df6478"/>
        <function-ref name="start" scoped="" ref="0x40df6c30"/>
        <function-ref name="stop" scoped="" ref="0x40df6ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40df0d50" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40df0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e1c300"/>
        <function-ref name="fired" scoped="" ref="0x40def8f8"/>
        <function-ref name="get" scoped="" ref="0x40def3e0"/>
        <function-ref name="reset" scoped="" ref="0x40defb70"/>
        <function-ref name="isOn" scoped="" ref="0x40e1c578"/>
        <function-ref name="set" scoped="" ref="0x40def658"/>
        <function-ref name="start" scoped="" ref="0x40defde8"/>
        <function-ref name="stop" scoped="" ref="0x40e1c088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40dfc4a8" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40dfc4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40df9f18"/>
        <function-ref name="test" scoped="" ref="0x40df9a28"/>
        <function-ref name="get" scoped="" ref="0x40dfcaf0"/>
        <function-ref name="setScale" scoped="" ref="0x40df81a8"/>
        <function-ref name="getScale" scoped="" ref="0x40df8448"/>
        <function-ref name="reset" scoped="" ref="0x40df92c0"/>
        <function-ref name="overflow" scoped="" ref="0x40df9048"/>
        <function-ref name="isOn" scoped="" ref="0x40df9ca0"/>
        <function-ref name="set" scoped="" ref="0x40dfcd68"/>
        <function-ref name="start" scoped="" ref="0x40df9538"/>
        <function-ref name="stop" scoped="" ref="0x40df97b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40e16530" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40e16530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40e16708"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40e167e8"/>
        <function-ref name="getControlA" scoped="" ref="0x40e168c8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40e169a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40e16a88"/>
        <function-ref name="setControlB" scoped="" ref="0x40e16b68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40e16c48"/>
        <function-ref name="getControlB" scoped="" ref="0x40e16d28"/>
        <function-ref name="setControlC" scoped="" ref="0x40e16e08"/>
        <function-ref name="setControlA" scoped="" ref="0x40e16ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40e12128" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40e12128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e11690"/>
        <function-ref name="fired" scoped="" ref="0x40e12c88"/>
        <function-ref name="get" scoped="" ref="0x40e12770"/>
        <function-ref name="reset" scoped="" ref="0x40e12f00"/>
        <function-ref name="isOn" scoped="" ref="0x40e11908"/>
        <function-ref name="set" scoped="" ref="0x40e129e8"/>
        <function-ref name="start" scoped="" ref="0x40e111a0"/>
        <function-ref name="stop" scoped="" ref="0x40e11418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40e15258" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40e15258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40e13cc0"/>
        <function-ref name="test" scoped="" ref="0x40e137d0"/>
        <function-ref name="get" scoped="" ref="0x40e158a0"/>
        <function-ref name="captured" scoped="" ref="0x40e15db8"/>
        <function-ref name="reset" scoped="" ref="0x40e13068"/>
        <function-ref name="isOn" scoped="" ref="0x40e13a48"/>
        <function-ref name="set" scoped="" ref="0x40e15b18"/>
        <function-ref name="start" scoped="" ref="0x40e132e0"/>
        <function-ref name="stop" scoped="" ref="0x40e13558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40e11d20" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40e11d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e0e2c0"/>
        <function-ref name="fired" scoped="" ref="0x40e108a8"/>
        <function-ref name="get" scoped="" ref="0x40e10390"/>
        <function-ref name="reset" scoped="" ref="0x40e10b20"/>
        <function-ref name="isOn" scoped="" ref="0x40e0e538"/>
        <function-ref name="set" scoped="" ref="0x40e10608"/>
        <function-ref name="start" scoped="" ref="0x40e10d98"/>
        <function-ref name="stop" scoped="" ref="0x40e0e048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40e0e950" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40e0e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e0df08"/>
        <function-ref name="fired" scoped="" ref="0x40e0d528"/>
        <function-ref name="get" scoped="" ref="0x40e0d010"/>
        <function-ref name="reset" scoped="" ref="0x40e0d7a0"/>
        <function-ref name="isOn" scoped="" ref="0x40e0c1a0"/>
        <function-ref name="set" scoped="" ref="0x40e0d288"/>
        <function-ref name="start" scoped="" ref="0x40e0da18"/>
        <function-ref name="stop" scoped="" ref="0x40e0dc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40e18230" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e18230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e17ca0"/>
        <function-ref name="test" scoped="" ref="0x40e177b0"/>
        <function-ref name="get" scoped="" ref="0x40e18878"/>
        <function-ref name="setScale" scoped="" ref="0x40e17f18"/>
        <function-ref name="getScale" scoped="" ref="0x40e161d0"/>
        <function-ref name="reset" scoped="" ref="0x40e17048"/>
        <function-ref name="overflow" scoped="" ref="0x40e18d90"/>
        <function-ref name="isOn" scoped="" ref="0x40e17a28"/>
        <function-ref name="set" scoped="" ref="0x40e18af0"/>
        <function-ref name="start" scoped="" ref="0x40e172c0"/>
        <function-ref name="stop" scoped="" ref="0x40e17538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e55c88" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e55c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TOne" ref="0x4048a8b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e87150"/>
        <function-ref name="fired" scoped="" ref="0x40e88908"/>
        <function-ref name="startAt" scoped="" ref="0x40e88df8"/>
        <function-ref name="isRunning" scoped="" ref="0x40e88b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e873c8"/>
        <function-ref name="start" scoped="" ref="0x40e883f0"/>
        <function-ref name="stop" scoped="" ref="0x40e88690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e4e480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e4e480"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x404085d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x404085d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e4e658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40e4e868" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40e4e868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e762e0"/>
        <function-ref name="test" scoped="" ref="0x40e4ddd0"/>
        <function-ref name="get" scoped="" ref="0x40e4eeb0"/>
        <function-ref name="setScale" scoped="" ref="0x40e76558"/>
        <function-ref name="getScale" scoped="" ref="0x40e767f8"/>
        <function-ref name="reset" scoped="" ref="0x40e4d668"/>
        <function-ref name="overflow" scoped="" ref="0x40e4d3f0"/>
        <function-ref name="isOn" scoped="" ref="0x40e76068"/>
        <function-ref name="set" scoped="" ref="0x40e4d150"/>
        <function-ref name="start" scoped="" ref="0x40e4d8e0"/>
        <function-ref name="stop" scoped="" ref="0x40e4db58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x418f6678" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x418f6678"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x404083d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x404083d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TOne" ref="0x4048a8b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x418f5b30"/>
        <function-ref name="fired" scoped="" ref="0x418f5300"/>
        <function-ref name="startAt" scoped="" ref="0x418f57f0"/>
        <function-ref name="isRunning" scoped="" ref="0x418f5578"/>
        <function-ref name="getAlarm" scoped="" ref="0x418f5da8"/>
        <function-ref name="start" scoped="" ref="0x418f6dc8"/>
        <function-ref name="stop" scoped="" ref="0x418f5088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x4194e308" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x4194e308"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4194d878"/>
        <function-ref name="fired" scoped="" ref="0x4194ee68"/>
        <function-ref name="get" scoped="" ref="0x4194e950"/>
        <function-ref name="reset" scoped="" ref="0x4194d110"/>
        <function-ref name="isOn" scoped="" ref="0x4194daf0"/>
        <function-ref name="set" scoped="" ref="0x4194ebc8"/>
        <function-ref name="start" scoped="" ref="0x4194d388"/>
        <function-ref name="stop" scoped="" ref="0x4194d600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x419500a0" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x419500a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4194faf0"/>
        <function-ref name="test" scoped="" ref="0x4194f600"/>
        <function-ref name="get" scoped="" ref="0x419506e8"/>
        <function-ref name="setScale" scoped="" ref="0x4194fd68"/>
        <function-ref name="getScale" scoped="" ref="0x4194e048"/>
        <function-ref name="reset" scoped="" ref="0x41950e78"/>
        <function-ref name="overflow" scoped="" ref="0x41950c00"/>
        <function-ref name="isOn" scoped="" ref="0x4194f878"/>
        <function-ref name="set" scoped="" ref="0x41950960"/>
        <function-ref name="start" scoped="" ref="0x4194f110"/>
        <function-ref name="stop" scoped="" ref="0x4194f388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40e85570" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40e85570"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40462778"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e85bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e82688" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e82688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TOne" ref="0x4048a8b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e82dd8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e7e2e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e7e068"/>
        <function-ref name="overflow" scoped="" ref="0x40e7e558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e7ce90" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e7ce90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TOne" ref="0x4048a8b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e7b600"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e7baf0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e7b878"/>
        <function-ref name="overflow" scoped="" ref="0x40e7bd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40ea1078" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ea1078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40ea0ab8"/>
        <function-ref name="test" scoped="" ref="0x40ea05c8"/>
        <function-ref name="get" scoped="" ref="0x40ea16c0"/>
        <function-ref name="setScale" scoped="" ref="0x40ea0d30"/>
        <function-ref name="getScale" scoped="" ref="0x40e9f010"/>
        <function-ref name="reset" scoped="" ref="0x40ea1e50"/>
        <function-ref name="overflow" scoped="" ref="0x40ea1bd8"/>
        <function-ref name="isOn" scoped="" ref="0x40ea0840"/>
        <function-ref name="set" scoped="" ref="0x40ea1938"/>
        <function-ref name="start" scoped="" ref="0x40ea00d8"/>
        <function-ref name="stop" scoped="" ref="0x40ea0350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40ebd0e0" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40ebd0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40462778"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ebd830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ebdd20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ebdaa8"/>
        <function-ref name="overflow" scoped="" ref="0x40ebc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e9ee60" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e9ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40462778"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ebe5e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ebead0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ebe858"/>
        <function-ref name="overflow" scoped="" ref="0x40ebed48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40ebcf18" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40ebcf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40462778"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40eba578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40eba8c8" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40eba8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40462778"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40eb9048"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40eb9538"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40eb92c0"/>
        <function-ref name="overflow" scoped="" ref="0x40eb97b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40eb5010" loc="36:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40eb5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40462778"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40eb5760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x41758c38" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x41758c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41758e10"/>
        <function-ref name="getPayload" scoped="" ref="0x41758ef0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41757010"/>
        <function-ref name="cancel" scoped="" ref="0x417570f0"/>
        <function-ref name="sendDone" scoped="" ref="0x417571d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x417578e8" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x417578e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x41757ac0"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x41757ba0"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x41757c80"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x41757d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41758550" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41758550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41758728"/>
        <function-ref name="getPayload" scoped="" ref="0x41758808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417588e8"/>
        <function-ref name="cancel" scoped="" ref="0x417589c8"/>
        <function-ref name="sendDone" scoped="" ref="0x41758aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x41757330" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendAdvMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x41757330"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x41757508"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x417575e8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x417576c8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x417577a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f065d8" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f065d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f067b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f06890"/>
        <function-ref name="getPayload" scoped="" ref="0x40f06970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f06a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f06b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f062c0" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f062c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f06498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f06c70" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveAdvMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f06c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f06e48"/>
        <function-ref name="source" scoped="" ref="0x40f06f28"/>
        <function-ref name="address" scoped="" ref="0x40f02018"/>
        <function-ref name="destination" scoped="" ref="0x40f020f8"/>
        <function-ref name="setSource" scoped="" ref="0x40f021d8"/>
        <function-ref name="setDestination" scoped="" ref="0x40f022b8"/>
        <function-ref name="type" scoped="" ref="0x40f02398"/>
        <function-ref name="setType" scoped="" ref="0x40f02478"/>
        <function-ref name="isForMe" scoped="" ref="0x40f02558"/>
        <function-ref name="setGroup" scoped="" ref="0x40f02638"/>
        <function-ref name="localGroup" scoped="" ref="0x40f02718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f01778" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f01778"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f01950"/>
        <function-ref name="getPayload" scoped="" ref="0x40f01a30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f01b10"/>
        <function-ref name="cancel" scoped="" ref="0x40f01bf0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f01cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f01e10" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f01e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f00010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f000f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f001d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f002b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f00390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f004d0" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f004d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f006a8"/>
        <function-ref name="source" scoped="" ref="0x40f00788"/>
        <function-ref name="address" scoped="" ref="0x40f00868"/>
        <function-ref name="destination" scoped="" ref="0x40f00948"/>
        <function-ref name="setSource" scoped="" ref="0x40f00a28"/>
        <function-ref name="setDestination" scoped="" ref="0x40f00b08"/>
        <function-ref name="type" scoped="" ref="0x40f00be8"/>
        <function-ref name="setType" scoped="" ref="0x40f00cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x40f00da8"/>
        <function-ref name="setGroup" scoped="" ref="0x40f00e88"/>
        <function-ref name="localGroup" scoped="" ref="0x40eff010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40eff170" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40eff170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40eff348"/>
        <function-ref name="noAck" scoped="" ref="0x40eff428"/>
        <function-ref name="wasAcked" scoped="" ref="0x40eff508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4192b698" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4192b698"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4192b870"/>
        <function-ref name="getPayload" scoped="" ref="0x4192b950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4192ba30"/>
        <function-ref name="cancel" scoped="" ref="0x4192bb10"/>
        <function-ref name="sendDone" scoped="" ref="0x4192bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4192bd30" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4192bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4192bf08"/>
        <function-ref name="payloadLength" scoped="" ref="0x4192a010"/>
        <function-ref name="getPayload" scoped="" ref="0x4192a0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4192a1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4192a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4192a3f0" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4192a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4192a5c8"/>
        <function-ref name="source" scoped="" ref="0x4192a6a8"/>
        <function-ref name="address" scoped="" ref="0x4192a788"/>
        <function-ref name="destination" scoped="" ref="0x4192a868"/>
        <function-ref name="setSource" scoped="" ref="0x4192a948"/>
        <function-ref name="setDestination" scoped="" ref="0x4192aa28"/>
        <function-ref name="type" scoped="" ref="0x4192ab08"/>
        <function-ref name="setType" scoped="" ref="0x4192abe8"/>
        <function-ref name="isForMe" scoped="" ref="0x4192acc8"/>
        <function-ref name="setGroup" scoped="" ref="0x4192ada8"/>
        <function-ref name="localGroup" scoped="" ref="0x4192ae88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41929010" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41929010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x419291e8"/>
        <function-ref name="noAck" scoped="" ref="0x419292c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x419293a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4197f200" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4197f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4197f3d8"/>
        <function-ref name="getPayload" scoped="" ref="0x4197f4b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4197f598"/>
        <function-ref name="cancel" scoped="" ref="0x4197f678"/>
        <function-ref name="sendDone" scoped="" ref="0x4197f758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4197f898" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4197f898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4197fa70"/>
        <function-ref name="payloadLength" scoped="" ref="0x4197fb50"/>
        <function-ref name="getPayload" scoped="" ref="0x4197fc30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4197fd10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4197fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4197e010" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4197e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4197e1e8"/>
        <function-ref name="source" scoped="" ref="0x4197e2c8"/>
        <function-ref name="address" scoped="" ref="0x4197e3a8"/>
        <function-ref name="destination" scoped="" ref="0x4197e488"/>
        <function-ref name="setSource" scoped="" ref="0x4197e568"/>
        <function-ref name="setDestination" scoped="" ref="0x4197e648"/>
        <function-ref name="type" scoped="" ref="0x4197e728"/>
        <function-ref name="setType" scoped="" ref="0x4197e808"/>
        <function-ref name="isForMe" scoped="" ref="0x4197e8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x4197e9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x4197eaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4197ec08" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4197ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4197ede0"/>
        <function-ref name="noAck" scoped="" ref="0x4197eec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4197d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41974420" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41974420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x419745f8"/>
        <function-ref name="getPayload" scoped="" ref="0x419746d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x419747b8"/>
        <function-ref name="cancel" scoped="" ref="0x41974898"/>
        <function-ref name="sendDone" scoped="" ref="0x41974978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41974ae8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41974ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41974cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x41974da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41974e80"/>
        <function-ref name="cancel" scoped="" ref="0x41973010"/>
        <function-ref name="sendDone" scoped="" ref="0x419730f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41973230" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41973230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41973408"/>
        <function-ref name="source" scoped="" ref="0x419734e8"/>
        <function-ref name="address" scoped="" ref="0x419735c8"/>
        <function-ref name="destination" scoped="" ref="0x419736a8"/>
        <function-ref name="setSource" scoped="" ref="0x41973788"/>
        <function-ref name="setDestination" scoped="" ref="0x41973868"/>
        <function-ref name="type" scoped="" ref="0x41973948"/>
        <function-ref name="setType" scoped="" ref="0x41973a28"/>
        <function-ref name="isForMe" scoped="" ref="0x41973b08"/>
        <function-ref name="setGroup" scoped="" ref="0x41973be8"/>
        <function-ref name="localGroup" scoped="" ref="0x41973cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x4197c580" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x4197c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4197c758"/>
        <function-ref name="getPayload" scoped="" ref="0x4197c838"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4197c918"/>
        <function-ref name="cancel" scoped="" ref="0x4197c9f8"/>
        <function-ref name="sendDone" scoped="" ref="0x4197cad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x4197a230" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x4197a230"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x4197a408"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x4197a4e8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x4197a5c8"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x4197a6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4197de88" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4197de88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4197c070"/>
        <function-ref name="getPayload" scoped="" ref="0x4197c150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4197c230"/>
        <function-ref name="cancel" scoped="" ref="0x4197c310"/>
        <function-ref name="sendDone" scoped="" ref="0x4197c3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x4197cc38" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendReqMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x4197cc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4197ce10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4197cef0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4197a010"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4197a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40efea60" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40efea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40efec38"/>
        <function-ref name="payloadLength" scoped="" ref="0x40efed18"/>
        <function-ref name="getPayload" scoped="" ref="0x40efedf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40efeed8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40efd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40efe748" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40efe748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40efe920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40efd150" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveReqMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40efd150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40efd328"/>
        <function-ref name="source" scoped="" ref="0x40efd408"/>
        <function-ref name="address" scoped="" ref="0x40efd4e8"/>
        <function-ref name="destination" scoped="" ref="0x40efd5c8"/>
        <function-ref name="setSource" scoped="" ref="0x40efd6a8"/>
        <function-ref name="setDestination" scoped="" ref="0x40efd788"/>
        <function-ref name="type" scoped="" ref="0x40efd868"/>
        <function-ref name="setType" scoped="" ref="0x40efd948"/>
        <function-ref name="isForMe" scoped="" ref="0x40efda28"/>
        <function-ref name="setGroup" scoped="" ref="0x40efdb08"/>
        <function-ref name="localGroup" scoped="" ref="0x40efdbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40efcc30" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40efcc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40efce08"/>
        <function-ref name="getPayload" scoped="" ref="0x40efcee8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40efb010"/>
        <function-ref name="cancel" scoped="" ref="0x40efb0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40efb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40efb310" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40efb310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40efb4e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40efb5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40efb6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40efb788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40efb868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40efb9a8" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40efb9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40efbb80"/>
        <function-ref name="source" scoped="" ref="0x40efbc60"/>
        <function-ref name="address" scoped="" ref="0x40efbd40"/>
        <function-ref name="destination" scoped="" ref="0x40efbe20"/>
        <function-ref name="setSource" scoped="" ref="0x40efbf00"/>
        <function-ref name="setDestination" scoped="" ref="0x40efa010"/>
        <function-ref name="type" scoped="" ref="0x40efa0f0"/>
        <function-ref name="setType" scoped="" ref="0x40efa1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40efa2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40efa390"/>
        <function-ref name="localGroup" scoped="" ref="0x40efa470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40efa5d0" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40efa5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40efa7a8"/>
        <function-ref name="noAck" scoped="" ref="0x40efa888"/>
        <function-ref name="wasAcked" scoped="" ref="0x40efa968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4195f2f0" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4195f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4195f4c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4195f5a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4195f688"/>
        <function-ref name="cancel" scoped="" ref="0x4195f768"/>
        <function-ref name="sendDone" scoped="" ref="0x4195f848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4195f988" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4195f988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4195fb60"/>
        <function-ref name="payloadLength" scoped="" ref="0x4195fc40"/>
        <function-ref name="getPayload" scoped="" ref="0x4195fd20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4195fe00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4195fee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4195e040" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4195e040"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4195e218"/>
        <function-ref name="source" scoped="" ref="0x4195e2f8"/>
        <function-ref name="address" scoped="" ref="0x4195e3d8"/>
        <function-ref name="destination" scoped="" ref="0x4195e4b8"/>
        <function-ref name="setSource" scoped="" ref="0x4195e598"/>
        <function-ref name="setDestination" scoped="" ref="0x4195e678"/>
        <function-ref name="type" scoped="" ref="0x4195e758"/>
        <function-ref name="setType" scoped="" ref="0x4195e838"/>
        <function-ref name="isForMe" scoped="" ref="0x4195e918"/>
        <function-ref name="setGroup" scoped="" ref="0x4195e9f8"/>
        <function-ref name="localGroup" scoped="" ref="0x4195ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4195ec38" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4195ec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4195ee10"/>
        <function-ref name="noAck" scoped="" ref="0x4195eef0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4195d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4195baf8" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4195baf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4195bcd0"/>
        <function-ref name="getPayload" scoped="" ref="0x4195bdb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4195be90"/>
        <function-ref name="cancel" scoped="" ref="0x41958010"/>
        <function-ref name="sendDone" scoped="" ref="0x419580f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41958230" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41958230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41958408"/>
        <function-ref name="payloadLength" scoped="" ref="0x419584e8"/>
        <function-ref name="getPayload" scoped="" ref="0x419585c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x419586a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41958788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x419588c8" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x419588c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41958aa0"/>
        <function-ref name="source" scoped="" ref="0x41958b80"/>
        <function-ref name="address" scoped="" ref="0x41958c60"/>
        <function-ref name="destination" scoped="" ref="0x41958d40"/>
        <function-ref name="setSource" scoped="" ref="0x41958e20"/>
        <function-ref name="setDestination" scoped="" ref="0x41958f00"/>
        <function-ref name="type" scoped="" ref="0x41956010"/>
        <function-ref name="setType" scoped="" ref="0x419560f0"/>
        <function-ref name="isForMe" scoped="" ref="0x419561d0"/>
        <function-ref name="setGroup" scoped="" ref="0x419562b0"/>
        <function-ref name="localGroup" scoped="" ref="0x41956390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x419564f0" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x419564f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x419566c8"/>
        <function-ref name="noAck" scoped="" ref="0x419567a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x41956888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x419acb78" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x419acb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x419acd50"/>
        <function-ref name="getPayload" scoped="" ref="0x419ace30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x419acf10"/>
        <function-ref name="cancel" scoped="" ref="0x419a9010"/>
        <function-ref name="sendDone" scoped="" ref="0x419a90f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x419a9260" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x419a9260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x419a9438"/>
        <function-ref name="getPayload" scoped="" ref="0x419a9518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x419a95f8"/>
        <function-ref name="cancel" scoped="" ref="0x419a96d8"/>
        <function-ref name="sendDone" scoped="" ref="0x419a97b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x419a98f8" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x419a98f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x419a9ad0"/>
        <function-ref name="source" scoped="" ref="0x419a9bb0"/>
        <function-ref name="address" scoped="" ref="0x419a9c90"/>
        <function-ref name="destination" scoped="" ref="0x419a9d70"/>
        <function-ref name="setSource" scoped="" ref="0x419a9e50"/>
        <function-ref name="setDestination" scoped="" ref="0x419a8010"/>
        <function-ref name="type" scoped="" ref="0x419a80f0"/>
        <function-ref name="setType" scoped="" ref="0x419a81d0"/>
        <function-ref name="isForMe" scoped="" ref="0x419a82b0"/>
        <function-ref name="setGroup" scoped="" ref="0x419a8390"/>
        <function-ref name="localGroup" scoped="" ref="0x419a8470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x41955df8" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x41955df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41954010"/>
        <function-ref name="getPayload" scoped="" ref="0x419540f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x419541d0"/>
        <function-ref name="cancel" scoped="" ref="0x419542b0"/>
        <function-ref name="sendDone" scoped="" ref="0x41954390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x41954aa8" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41954aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x41954c80"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x41954d60"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x41954e40"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x41954f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41955710" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41955710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x419558e8"/>
        <function-ref name="getPayload" scoped="" ref="0x419559c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41955aa8"/>
        <function-ref name="cancel" scoped="" ref="0x41955b88"/>
        <function-ref name="sendDone" scoped="" ref="0x41955c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x419544f0" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ObjectTransferC.SendDataMsg.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x419544f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x419546c8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x419547a8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x41954888"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x41954968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ef8eb8" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ef8eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ef70c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ef71a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ef7280"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ef7360"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ef7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ef8ba0" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ef8ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ef8d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40ef7580" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ObjectTransferC.ReceiveDataMsg"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40ef7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ef7758"/>
        <function-ref name="source" scoped="" ref="0x40ef7838"/>
        <function-ref name="address" scoped="" ref="0x40ef7918"/>
        <function-ref name="destination" scoped="" ref="0x40ef79f8"/>
        <function-ref name="setSource" scoped="" ref="0x40ef7ad8"/>
        <function-ref name="setDestination" scoped="" ref="0x40ef7bb8"/>
        <function-ref name="type" scoped="" ref="0x40ef7c98"/>
        <function-ref name="setType" scoped="" ref="0x40ef7d78"/>
        <function-ref name="isForMe" scoped="" ref="0x40ef7e58"/>
        <function-ref name="setGroup" scoped="" ref="0x40ef6010"/>
        <function-ref name="localGroup" scoped="" ref="0x40ef60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f26a38" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="ObjectTransferC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f26a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f24558"/>
        <function-ref name="fired" scoped="" ref="0x40f257e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f25ee8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f25c90"/>
        <function-ref name="getdt" scoped="" ref="0x40f24a08"/>
        <function-ref name="gett0" scoped="" ref="0x40f247b0"/>
        <function-ref name="isRunning" scoped="" ref="0x40f25a38"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f25088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f24238"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f25308"/>
        <function-ref name="stop" scoped="" ref="0x40f25588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40f1f550" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40f1f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f1f728"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40f1f808"/>
        <function-ref name="computeCrc" scoped="" ref="0x40f1f8e8"/>
        <function-ref name="getSize" scoped="" ref="0x40f1f9c8"/>
        <function-ref name="readDone" scoped="" ref="0x40f1faa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40f1fbe8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f1fbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f1fdc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f1fea0"/>
        <function-ref name="request" scoped="" ref="0x40f1e010"/>
        <function-ref name="granted" scoped="" ref="0x40f1e0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40f1e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41996df0" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41996df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41994010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40f1a788" loc="42:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40f1a788"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f1a960"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40f1aa40"/>
        <function-ref name="computeCrc" scoped="" ref="0x40f1ab20"/>
        <function-ref name="getSize" scoped="" ref="0x40f1ac00"/>
        <function-ref name="readDone" scoped="" ref="0x40f1ace0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40f161b8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40f161b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40f16390"/>
        <function-ref name="writeDone" scoped="" ref="0x40f16470"/>
        <function-ref name="erase" scoped="" ref="0x40f16550"/>
        <function-ref name="eraseDone" scoped="" ref="0x40f16630"/>
        <function-ref name="write" scoped="" ref="0x40f16710"/>
        <function-ref name="sync" scoped="" ref="0x40f167f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumeId" ref="0x40f12e00" loc="46:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x40f12e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f14010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StorageMap" ref="0x40f12758" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerC.nc">
      <component-ref qname="BlockStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x40f12758"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x40f12930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40f11aa8" loc="40:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40f11aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f11c90"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40f11d70"/>
        <function-ref name="computeCrc" scoped="" ref="0x40f11e50"/>
        <function-ref name="getSize" scoped="" ref="0x40f10010"/>
        <function-ref name="readDone" scoped="" ref="0x40f100f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40f102c8" loc="41:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40f102c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40f104b0"/>
        <function-ref name="writeDone" scoped="" ref="0x40f10590"/>
        <function-ref name="erase" scoped="" ref="0x40f10670"/>
        <function-ref name="eraseDone" scoped="" ref="0x40f10750"/>
        <function-ref name="write" scoped="" ref="0x40f10830"/>
        <function-ref name="sync" scoped="" ref="0x40f10910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumeId" ref="0x40f40e88" loc="47:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x40f40e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f730c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StorageMap" ref="0x40f10ae8" loc="42:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x40f10ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x40f10cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBlockRead" ref="0x40f10ef8" loc="45:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBlockRead" scoped="" ref="0x40f10ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f400f0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40f401d0"/>
        <function-ref name="computeCrc" scoped="" ref="0x40f402b0"/>
        <function-ref name="getSize" scoped="" ref="0x40f40390"/>
        <function-ref name="readDone" scoped="" ref="0x40f40470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBlockWrite" ref="0x40f40668" loc="46:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBlockWrite" scoped="" ref="0x40f40668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40f40850"/>
        <function-ref name="writeDone" scoped="" ref="0x40f40930"/>
        <function-ref name="erase" scoped="" ref="0x40f40a10"/>
        <function-ref name="eraseDone" scoped="" ref="0x40f40af0"/>
        <function-ref name="write" scoped="" ref="0x40f40bd0"/>
        <function-ref name="sync" scoped="" ref="0x40f40cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45dbVolume" ref="0x40f73298" loc="51:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageManagerP.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x40f73298"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x40f73480"/>
        <function-ref name="remap" scoped="" ref="0x40f73560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40f70d48" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_Golden"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40f70d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40f70f20"/>
        <function-ref name="writeDone" scoped="" ref="0x410d2018"/>
        <function-ref name="erase" scoped="" ref="0x410d20f8"/>
        <function-ref name="eraseDone" scoped="" ref="0x410d21d8"/>
        <function-ref name="write" scoped="" ref="0x410d22b8"/>
        <function-ref name="sync" scoped="" ref="0x410d2398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x410d24d8" loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_Golden"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x410d24d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410d26b0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x410d2790"/>
        <function-ref name="computeCrc" scoped="" ref="0x410d2870"/>
        <function-ref name="getSize" scoped="" ref="0x410d2950"/>
        <function-ref name="readDone" scoped="" ref="0x410d2a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45db" ref="0x40f5cdd8" loc="59:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x40f5cdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x40f67db0"/>
        <function-ref name="syncDone" scoped="" ref="0x40f670f0"/>
        <function-ref name="flushDone" scoped="" ref="0x40f671d0"/>
        <function-ref name="read" scoped="" ref="0x40f672b0"/>
        <function-ref name="writeDone" scoped="" ref="0x40f67390"/>
        <function-ref name="copyPage" scoped="" ref="0x40f67470"/>
        <function-ref name="erase" scoped="" ref="0x40f67550"/>
        <function-ref name="eraseDone" scoped="" ref="0x40f67630"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40f67710"/>
        <function-ref name="flush" scoped="" ref="0x40f677f0"/>
        <function-ref name="syncAll" scoped="" ref="0x40f678d0"/>
        <function-ref name="flushAll" scoped="" ref="0x40f679b0"/>
        <function-ref name="write" scoped="" ref="0x40f67a90"/>
        <function-ref name="sync" scoped="" ref="0x40f67bf0"/>
        <function-ref name="computeCrc" scoped="" ref="0x40f67cd0"/>
        <function-ref name="readDone" scoped="" ref="0x40f67010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x40f6dde0" loc="55:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x40f6dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x40f69010"/>
        <function-ref name="writeDone" scoped="" ref="0x40f690f0"/>
        <function-ref name="erase" scoped="" ref="0x40f691d0"/>
        <function-ref name="eraseDone" scoped="" ref="0x40f692b0"/>
        <function-ref name="write" scoped="" ref="0x40f69390"/>
        <function-ref name="sync" scoped="" ref="0x40f69470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x40f69920" loc="56:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x40f69920"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f69af8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40f69bd8"/>
        <function-ref name="computeCrc" scoped="" ref="0x40f69cb8"/>
        <function-ref name="getSize" scoped="" ref="0x40f69d98"/>
        <function-ref name="readDone" scoped="" ref="0x40f69e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BConfig" ref="0x40f8a910" loc="62:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BConfig" scoped="" ref="0x40f8a910"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbBlockConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="npages" scoped="" ref="0x40f8aae8"/>
        <function-ref name="flipped" scoped="" ref="0x40f8abc8"/>
        <function-ref name="isConfig" scoped="" ref="0x40f8aca8"/>
        <function-ref name="writeHook" scoped="" ref="0x40f8ad88"/>
        <function-ref name="remap" scoped="" ref="0x40f8ae68"/>
        <function-ref name="writeContinue" scoped="" ref="0x40f5a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="At45dbVolume" ref="0x40f66298" loc="60:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x40f66298"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x40f66470"/>
        <function-ref name="remap" scoped="" ref="0x40f66550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40f669f8" loc="61:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageP.nc">
      <component-ref qname="BlockStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f669f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f66bd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f66cb0"/>
        <function-ref name="request" scoped="" ref="0x40f66d90"/>
        <function-ref name="granted" scoped="" ref="0x40f66e70"/>
        <function-ref name="isOwner" scoped="" ref="0x40f5b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45db" ref="0x40faa680" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x40faa680"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x40fdc6b0"/>
        <function-ref name="syncDone" scoped="" ref="0x40faa938"/>
        <function-ref name="flushDone" scoped="" ref="0x40faaa18"/>
        <function-ref name="read" scoped="" ref="0x40faaaf8"/>
        <function-ref name="writeDone" scoped="" ref="0x40faabd8"/>
        <function-ref name="copyPage" scoped="" ref="0x40faacb8"/>
        <function-ref name="erase" scoped="" ref="0x40faad98"/>
        <function-ref name="eraseDone" scoped="" ref="0x40faae78"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40fdc010"/>
        <function-ref name="flush" scoped="" ref="0x40fdc0f0"/>
        <function-ref name="syncAll" scoped="" ref="0x40fdc1d0"/>
        <function-ref name="flushAll" scoped="" ref="0x40fdc2b0"/>
        <function-ref name="write" scoped="" ref="0x40fdc390"/>
        <function-ref name="sync" scoped="" ref="0x40fdc4f0"/>
        <function-ref name="computeCrc" scoped="" ref="0x40fdc5d0"/>
        <function-ref name="readDone" scoped="" ref="0x40faa858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40fd7250" loc="27:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40fd7250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fd7428"/>
        <function-ref name="requested" scoped="" ref="0x40fd7508"/>
        <function-ref name="granted" scoped="" ref="0x40fd75e8"/>
        <function-ref name="isOwner" scoped="" ref="0x40fd76c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40fd77a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40fdcb50" loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40fdcb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fdcd28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40fdce08"/>
        <function-ref name="request" scoped="" ref="0x40fdcee8"/>
        <function-ref name="granted" scoped="" ref="0x40fdb010"/>
        <function-ref name="isOwner" scoped="" ref="0x40fdb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40fd7958" loc="28:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbC.nc">
      <component-ref qname="At45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40fd7958"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40fd7b30"/>
        <function-ref name="userId" scoped="" ref="0x40fd7c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAt45db" ref="0x40fc6c30" loc="59:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x40fc6c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x40fd3e90"/>
        <function-ref name="waitCompare" scoped="" ref="0x40fc6ee8"/>
        <function-ref name="crcDone" scoped="" ref="0x40fd3010"/>
        <function-ref name="flushDone" scoped="" ref="0x40fd30f0"/>
        <function-ref name="read" scoped="" ref="0x40fd31d0"/>
        <function-ref name="erase" scoped="" ref="0x40fd32b0"/>
        <function-ref name="writeDone" scoped="" ref="0x40fd3390"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x40fd3470"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x40fd3550"/>
        <function-ref name="eraseDone" scoped="" ref="0x40fd3630"/>
        <function-ref name="waitIdle" scoped="" ref="0x40fd3710"/>
        <function-ref name="flush" scoped="" ref="0x40fd37f0"/>
        <function-ref name="write" scoped="" ref="0x40fd38d0"/>
        <function-ref name="compareDone" scoped="" ref="0x40fd3a30"/>
        <function-ref name="compare" scoped="" ref="0x40fd3b10"/>
        <function-ref name="crc" scoped="" ref="0x40fd3bf0"/>
        <function-ref name="readBuffer" scoped="" ref="0x40fd3cd0"/>
        <function-ref name="fillDone" scoped="" ref="0x40fd3db0"/>
        <function-ref name="readDone" scoped="" ref="0x40fc6e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45db" ref="0x40fda8b0" loc="56:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45db" scoped="" ref="0x40fda8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45db"/>
      </instance>
      <interface-functions>
        <function-ref name="copyPageDone" scoped="" ref="0x40fd4870"/>
        <function-ref name="syncDone" scoped="" ref="0x40fdab68"/>
        <function-ref name="flushDone" scoped="" ref="0x40fdac48"/>
        <function-ref name="read" scoped="" ref="0x40fdad28"/>
        <function-ref name="writeDone" scoped="" ref="0x40fdae08"/>
        <function-ref name="copyPage" scoped="" ref="0x40fdaee8"/>
        <function-ref name="erase" scoped="" ref="0x40fd4010"/>
        <function-ref name="eraseDone" scoped="" ref="0x40fd40f0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x40fd41d0"/>
        <function-ref name="flush" scoped="" ref="0x40fd42b0"/>
        <function-ref name="syncAll" scoped="" ref="0x40fd4390"/>
        <function-ref name="flushAll" scoped="" ref="0x40fd4470"/>
        <function-ref name="write" scoped="" ref="0x40fd4550"/>
        <function-ref name="sync" scoped="" ref="0x40fd46b0"/>
        <function-ref name="computeCrc" scoped="" ref="0x40fd4790"/>
        <function-ref name="readDone" scoped="" ref="0x40fdaa88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40fd21f8" loc="60:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40fd21f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40462778"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40fd2948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskSuccess" ref="0x40fefdc8" loc="145:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskSuccess" scoped="" ref="0x40fefdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fee010"/>
        <function-ref name="runTask" scoped="" ref="0x40fee0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskFail" ref="0x40feee10" loc="148:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskFail" scoped="" ref="0x40feee10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fed010"/>
        <function-ref name="runTask" scoped="" ref="0x40fed0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40fda558" loc="55:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbP.nc">
      <component-ref qname="At45dbP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40fda558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fda730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45db" ref="0x41019460" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/chips/at45db/HplAt45dbC.nc">
      <component-ref qname="HplAt45dbC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x41019460"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x404083d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x404083d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x410186b0"/>
        <function-ref name="waitCompare" scoped="" ref="0x41019718"/>
        <function-ref name="crcDone" scoped="" ref="0x410197f8"/>
        <function-ref name="flushDone" scoped="" ref="0x410198d8"/>
        <function-ref name="read" scoped="" ref="0x410199b8"/>
        <function-ref name="erase" scoped="" ref="0x41019a98"/>
        <function-ref name="writeDone" scoped="" ref="0x41019b78"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x41019c58"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x41019d38"/>
        <function-ref name="eraseDone" scoped="" ref="0x41019e18"/>
        <function-ref name="waitIdle" scoped="" ref="0x41019ef8"/>
        <function-ref name="flush" scoped="" ref="0x41018010"/>
        <function-ref name="write" scoped="" ref="0x410180f0"/>
        <function-ref name="compareDone" scoped="" ref="0x41018250"/>
        <function-ref name="compare" scoped="" ref="0x41018330"/>
        <function-ref name="crc" scoped="" ref="0x41018410"/>
        <function-ref name="readBuffer" scoped="" ref="0x410184f0"/>
        <function-ref name="fillDone" scoped="" ref="0x410185d0"/>
        <function-ref name="readDone" scoped="" ref="0x41019638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45db" ref="0x41017118" loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45db" scoped="" ref="0x41017118"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45db"/>
      </instance>
      <interface-functions>
        <function-ref name="readDone" scoped="" ref="0x41016390"/>
        <function-ref name="waitCompare" scoped="" ref="0x410173d0"/>
        <function-ref name="crcDone" scoped="" ref="0x410174b0"/>
        <function-ref name="flushDone" scoped="" ref="0x41017590"/>
        <function-ref name="read" scoped="" ref="0x41017670"/>
        <function-ref name="erase" scoped="" ref="0x41017750"/>
        <function-ref name="writeDone" scoped="" ref="0x41017830"/>
        <function-ref name="waitIdleDone" scoped="" ref="0x41017910"/>
        <function-ref name="waitCompareDone" scoped="" ref="0x410179f0"/>
        <function-ref name="eraseDone" scoped="" ref="0x41017ad0"/>
        <function-ref name="waitIdle" scoped="" ref="0x41017bb0"/>
        <function-ref name="flush" scoped="" ref="0x41017c90"/>
        <function-ref name="write" scoped="" ref="0x41017d70"/>
        <function-ref name="compareDone" scoped="" ref="0x41017ed0"/>
        <function-ref name="compare" scoped="" ref="0x41016010"/>
        <function-ref name="crc" scoped="" ref="0x410160f0"/>
        <function-ref name="readBuffer" scoped="" ref="0x410161d0"/>
        <function-ref name="fillDone" scoped="" ref="0x410162b0"/>
        <function-ref name="fill" scoped="" ref="0x410172f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAt45dbByte" ref="0x41016ed0" loc="30:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x41016ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x410560c0"/>
        <function-ref name="waitIdle" scoped="" ref="0x410561a0"/>
        <function-ref name="idle" scoped="" ref="0x41056280"/>
        <function-ref name="select" scoped="" ref="0x41056360"/>
        <function-ref name="deselect" scoped="" ref="0x41056440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x41016500" loc="28:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41016500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410166d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410167b8"/>
        <function-ref name="request" scoped="" ref="0x41016898"/>
        <function-ref name="granted" scoped="" ref="0x41016978"/>
        <function-ref name="isOwner" scoped="" ref="0x41016a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FlashSpi" ref="0x41016bb8" loc="29:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByteC.nc">
      <component-ref qname="HplAt45dbC.HplAt45dbByteC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x41016bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x41016d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45dbByte" ref="0x41052010" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x41052010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x410521e8"/>
        <function-ref name="waitIdle" scoped="" ref="0x410522c8"/>
        <function-ref name="idle" scoped="" ref="0x410523a8"/>
        <function-ref name="select" scoped="" ref="0x41052488"/>
        <function-ref name="deselect" scoped="" ref="0x41052568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41055450" loc="54:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41055450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41055628"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41055708"/>
        <function-ref name="request" scoped="" ref="0x410557e8"/>
        <function-ref name="granted" scoped="" ref="0x410558c8"/>
        <function-ref name="isOwner" scoped="" ref="0x410559a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlashSpi" ref="0x41055ba8" loc="55:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOC.nc">
      <component-ref qname="HplAt45dbIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x41055ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x41055d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="In" ref="0x4104dbc0" loc="100:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="In" scoped="" ref="0x4104dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4104dd98"/>
        <function-ref name="isInput" scoped="" ref="0x4104de78"/>
        <function-ref name="toggle" scoped="" ref="0x4104c010"/>
        <function-ref name="isOutput" scoped="" ref="0x4104c0f0"/>
        <function-ref name="get" scoped="" ref="0x4104c1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4104c2b0"/>
        <function-ref name="set" scoped="" ref="0x4104c390"/>
        <function-ref name="clr" scoped="" ref="0x4104c470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x4104c7c0" loc="101:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x4104c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40462778"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x4104cf10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Out" ref="0x4104d1f0" loc="99:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Out" scoped="" ref="0x4104d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4104d3c8"/>
        <function-ref name="isInput" scoped="" ref="0x4104d4a8"/>
        <function-ref name="toggle" scoped="" ref="0x4104d588"/>
        <function-ref name="isOutput" scoped="" ref="0x4104d668"/>
        <function-ref name="get" scoped="" ref="0x4104d748"/>
        <function-ref name="makeOutput" scoped="" ref="0x4104d828"/>
        <function-ref name="set" scoped="" ref="0x4104d908"/>
        <function-ref name="clr" scoped="" ref="0x4104d9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Select" ref="0x4104fd48" loc="97:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Select" scoped="" ref="0x4104fd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4104ff20"/>
        <function-ref name="isInput" scoped="" ref="0x4104e018"/>
        <function-ref name="toggle" scoped="" ref="0x4104e0f8"/>
        <function-ref name="isOutput" scoped="" ref="0x4104e1d8"/>
        <function-ref name="get" scoped="" ref="0x4104e2b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4104e398"/>
        <function-ref name="set" scoped="" ref="0x4104e478"/>
        <function-ref name="clr" scoped="" ref="0x4104e558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAt45dbByte" ref="0x4104f5b0" loc="94:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAt45dbByte" scoped="" ref="0x4104f5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAt45dbByte"/>
      </instance>
      <interface-functions>
        <function-ref name="getCompareStatus" scoped="" ref="0x4104f788"/>
        <function-ref name="waitIdle" scoped="" ref="0x4104f868"/>
        <function-ref name="idle" scoped="" ref="0x4104f948"/>
        <function-ref name="select" scoped="" ref="0x4104fa28"/>
        <function-ref name="deselect" scoped="" ref="0x4104fb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Clk" ref="0x4104e738" loc="98:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Clk" scoped="" ref="0x4104e738"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4104e910"/>
        <function-ref name="isInput" scoped="" ref="0x4104e9f0"/>
        <function-ref name="toggle" scoped="" ref="0x4104ead0"/>
        <function-ref name="isOutput" scoped="" ref="0x4104ebb0"/>
        <function-ref name="get" scoped="" ref="0x4104ec90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4104ed70"/>
        <function-ref name="set" scoped="" ref="0x4104ee50"/>
        <function-ref name="clr" scoped="" ref="0x4104d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="avail" ref="0x41072298" loc="163:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="avail" scoped="" ref="0x41072298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41072470"/>
        <function-ref name="runTask" scoped="" ref="0x41072550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41052dc8" loc="92:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41052dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4104f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FlashSpi" ref="0x4104f210" loc="93:/opt/tinyos-2.1.2/tos/platforms/iris/chips/at45db/HplAt45dbIOP.nc">
      <component-ref qname="HplAt45dbIOP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FlashSpi" scoped="" ref="0x4104f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x4104f3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4106c6c8" loc="22:/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4106c6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4106c8a0"/>
        <function-ref name="configure" scoped="" ref="0x4106c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4106c010" loc="21:/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4106c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4106c1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4106c2c8"/>
        <function-ref name="request" scoped="" ref="0x4106c3a8"/>
        <function-ref name="granted" scoped="" ref="0x4106c488"/>
        <function-ref name="isOwner" scoped="" ref="0x4106c568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="granted" ref="0x4106cb00" loc="25:/opt/tinyos-2.1.2/tos/system/NoArbiterC.nc">
      <component-ref qname="HplAt45dbIOC.NoArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="granted" scoped="" ref="0x4106cb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4106ccd8"/>
        <function-ref name="runTask" scoped="" ref="0x4106cdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4109e068" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4109e068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4109e250"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4109e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4109d010" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4109d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4109d1f8"/>
        <function-ref name="configure" scoped="" ref="0x4109d2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x4109e470" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4109e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4109e648"/>
        <function-ref name="requested" scoped="" ref="0x4109e728"/>
        <function-ref name="granted" scoped="" ref="0x4109e808"/>
        <function-ref name="isOwner" scoped="" ref="0x4109e8e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4109e9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41097908" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41097908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41097af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41097bd0"/>
        <function-ref name="request" scoped="" ref="0x41097cb0"/>
        <function-ref name="granted" scoped="" ref="0x41097d90"/>
        <function-ref name="isOwner" scoped="" ref="0x41097e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4109eb08" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="At45dbC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4109eb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4109ece0"/>
        <function-ref name="userId" scoped="" ref="0x4109edc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x419b4d40" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="At45dbC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x419b4d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x419b4f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x419b2090" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="At45dbC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x419b2090"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x419b2268"/>
        <function-ref name="isEmpty" scoped="" ref="0x419b2348"/>
        <function-ref name="isEnqueued" scoped="" ref="0x419b2428"/>
        <function-ref name="dequeue" scoped="" ref="0x419b2508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x419b09d0" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x419b09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x419b0bb8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x419b0c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x419af990" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x419af990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x419afb78"/>
        <function-ref name="configure" scoped="" ref="0x419afc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x419afdb8" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x419afdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x419ae010"/>
        <function-ref name="isEmpty" scoped="" ref="0x419ae0f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x419ae1d0"/>
        <function-ref name="dequeue" scoped="" ref="0x419ae2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x419b0dd8" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x419b0dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x419af010"/>
        <function-ref name="requested" scoped="" ref="0x419af0f0"/>
        <function-ref name="granted" scoped="" ref="0x419af1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x419af2b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x419af390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x419ae3f0" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x419ae3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x419ae5c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x419ae6a8"/>
        <function-ref name="led1On" scoped="" ref="0x419ae788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x419ae868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x419ae948"/>
        <function-ref name="get" scoped="" ref="0x419aea28"/>
        <function-ref name="led1Off" scoped="" ref="0x419aeb08"/>
        <function-ref name="led0On" scoped="" ref="0x419aee88"/>
        <function-ref name="set" scoped="" ref="0x419aecc8"/>
        <function-ref name="led2On" scoped="" ref="0x419aebe8"/>
        <function-ref name="led2Off" scoped="" ref="0x419aeda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x419b0290" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x419b0290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x419b0478"/>
        <function-ref name="immediateRequest" scoped="" ref="0x419b0558"/>
        <function-ref name="request" scoped="" ref="0x419b0638"/>
        <function-ref name="granted" scoped="" ref="0x419b0718"/>
        <function-ref name="isOwner" scoped="" ref="0x419b07f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x419af4d0" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x419af4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x419af6a8"/>
        <function-ref name="userId" scoped="" ref="0x419af788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41a0a030" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="At45dbC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41a0a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41a0a208"/>
        <function-ref name="runTask" scoped="" ref="0x41a0a2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="At45dbVolume" ref="0x40f6aac0" loc="18:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbStorageManagerC.nc">
      <component-ref qname="At45dbStorageManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="At45dbVolume" scoped="" ref="0x40f6aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="At45dbVolume"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="volumeSize" scoped="" ref="0x40f6ac98"/>
        <function-ref name="remap" scoped="" ref="0x40f6ad78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x410cc9c8" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x410cc9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x410ccba0"/>
        <function-ref name="writeDone" scoped="" ref="0x410ccc80"/>
        <function-ref name="erase" scoped="" ref="0x410ccd60"/>
        <function-ref name="eraseDone" scoped="" ref="0x410cce40"/>
        <function-ref name="write" scoped="" ref="0x410ccf20"/>
        <function-ref name="sync" scoped="" ref="0x410cb018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x410cb158" loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x410cb158"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410cb330"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x410cb410"/>
        <function-ref name="computeCrc" scoped="" ref="0x410cb4f0"/>
        <function-ref name="getSize" scoped="" ref="0x410cb5d0"/>
        <function-ref name="readDone" scoped="" ref="0x410cb6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x410ca6a8" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x410ca6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x410ca880"/>
        <function-ref name="writeDone" scoped="" ref="0x410ca960"/>
        <function-ref name="erase" scoped="" ref="0x410caa40"/>
        <function-ref name="eraseDone" scoped="" ref="0x410cab20"/>
        <function-ref name="write" scoped="" ref="0x410cac00"/>
        <function-ref name="sync" scoped="" ref="0x410cace0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x410cae20" loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x410cae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410c9010"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x410c90f0"/>
        <function-ref name="computeCrc" scoped="" ref="0x410c91d0"/>
        <function-ref name="getSize" scoped="" ref="0x410c92b0"/>
        <function-ref name="readDone" scoped="" ref="0x410c9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x410c8338" loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x410c8338"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x410c8510"/>
        <function-ref name="writeDone" scoped="" ref="0x410c85f0"/>
        <function-ref name="erase" scoped="" ref="0x410c86d0"/>
        <function-ref name="eraseDone" scoped="" ref="0x410c87b0"/>
        <function-ref name="write" scoped="" ref="0x410c8890"/>
        <function-ref name="sync" scoped="" ref="0x410c8970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x410c8ab0" loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/BlockStorageC.nc">
      <component-ref qname="BlockStorageManagerC.BlockStorageC_3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x410c8ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410c8c88"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x410c8d68"/>
        <function-ref name="computeCrc" scoped="" ref="0x410c8e48"/>
        <function-ref name="getSize" scoped="" ref="0x410c8f28"/>
        <function-ref name="readDone" scoped="" ref="0x410c7018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41994948" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41994948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41994b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41994c00"/>
        <function-ref name="request" scoped="" ref="0x41994ce0"/>
        <function-ref name="granted" scoped="" ref="0x41994dc0"/>
        <function-ref name="isOwner" scoped="" ref="0x41994ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410bc1b8" loc="40:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <component-ref qname="BlockStorageLockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410bc1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410bc390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410bc470"/>
        <function-ref name="request" scoped="" ref="0x410bc550"/>
        <function-ref name="granted" scoped="" ref="0x410bc630"/>
        <function-ref name="isOwner" scoped="" ref="0x410bc710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x410bc8c0" loc="41:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockC.nc">
      <component-ref qname="BlockStorageLockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x410bc8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x410bca98"/>
        <function-ref name="userId" scoped="" ref="0x410bcb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x410b90a8" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x410b90a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x410b9290"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410b9370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x410b9960" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x410b9960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x410b9b48"/>
        <function-ref name="configure" scoped="" ref="0x410b9c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410bb948" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410bb948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410bbb30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410bbc10"/>
        <function-ref name="request" scoped="" ref="0x410bbcf0"/>
        <function-ref name="granted" scoped="" ref="0x410bbdd0"/>
        <function-ref name="isOwner" scoped="" ref="0x410bbeb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x410b94b0" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x410b94b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x410b9688"/>
        <function-ref name="userId" scoped="" ref="0x410b9768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x419e1040" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x419e1040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x419e1218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x419e1378" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x419e1378"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x419e1550"/>
        <function-ref name="isEmpty" scoped="" ref="0x419e1630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x419e1710"/>
        <function-ref name="dequeue" scoped="" ref="0x419e17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x419e0ab0" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x419e0ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x419e0c98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x419e0d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x419df3a8" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x419df3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x419df590"/>
        <function-ref name="configure" scoped="" ref="0x419df670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x419df7d0" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x419df7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x419df9a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x419dfa88"/>
        <function-ref name="isEnqueued" scoped="" ref="0x419dfb68"/>
        <function-ref name="dequeue" scoped="" ref="0x419dfc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x419e0370" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x419e0370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x419e0558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x419e0638"/>
        <function-ref name="request" scoped="" ref="0x419e0718"/>
        <function-ref name="granted" scoped="" ref="0x419e07f8"/>
        <function-ref name="isOwner" scoped="" ref="0x419e08d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x419e0eb8" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x419e0eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x419df0c0"/>
        <function-ref name="userId" scoped="" ref="0x419df1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x419dfdc8" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="BlockStorageLockC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x419dfdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x419de010"/>
        <function-ref name="runTask" scoped="" ref="0x419de0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x410bd1f8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x410bd1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410bd3d0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x410bd4b0"/>
        <function-ref name="computeCrc" scoped="" ref="0x410bd590"/>
        <function-ref name="getSize" scoped="" ref="0x410bd670"/>
        <function-ref name="readDone" scoped="" ref="0x410bd750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410bd890" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410bd890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410bda68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410bdb48"/>
        <function-ref name="request" scoped="" ref="0x410bdc28"/>
        <function-ref name="granted" scoped="" ref="0x410bdd08"/>
        <function-ref name="isOwner" scoped="" ref="0x410bdde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41a28320" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41a28320"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41a284f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41a28e30" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41a28e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a26050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41a26130"/>
        <function-ref name="request" scoped="" ref="0x41a26210"/>
        <function-ref name="granted" scoped="" ref="0x41a262f0"/>
        <function-ref name="isOwner" scoped="" ref="0x41a263d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x410f1e30" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x410f1e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410f0050"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x410f0130"/>
        <function-ref name="computeCrc" scoped="" ref="0x410f0210"/>
        <function-ref name="getSize" scoped="" ref="0x410f02f0"/>
        <function-ref name="readDone" scoped="" ref="0x410f03d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410f0510" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410f0510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410f06e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410f07c8"/>
        <function-ref name="request" scoped="" ref="0x410f08a8"/>
        <function-ref name="granted" scoped="" ref="0x410f0988"/>
        <function-ref name="isOwner" scoped="" ref="0x410f0a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41a22828" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41a22828"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41a22a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41a21358" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockReaderDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41a21358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a21530"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41a21610"/>
        <function-ref name="request" scoped="" ref="0x41a216f0"/>
        <function-ref name="granted" scoped="" ref="0x41a217d0"/>
        <function-ref name="isOwner" scoped="" ref="0x41a218b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x410eee28" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x410eee28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x410ed050"/>
        <function-ref name="writeDone" scoped="" ref="0x410ed130"/>
        <function-ref name="erase" scoped="" ref="0x410ed210"/>
        <function-ref name="eraseDone" scoped="" ref="0x410ed2f0"/>
        <function-ref name="write" scoped="" ref="0x410ed3d0"/>
        <function-ref name="sync" scoped="" ref="0x410ed4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410ed5f0" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410ed5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410ed7c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410ed8a8"/>
        <function-ref name="request" scoped="" ref="0x410ed988"/>
        <function-ref name="granted" scoped="" ref="0x410eda68"/>
        <function-ref name="isOwner" scoped="" ref="0x410edb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41a1ec40" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41a1ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41a1ee18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41a1c820" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41a1c820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a1c9f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41a1cad8"/>
        <function-ref name="request" scoped="" ref="0x41a1cbb8"/>
        <function-ref name="granted" scoped="" ref="0x41a1cc98"/>
        <function-ref name="isOwner" scoped="" ref="0x41a1cd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x410e7af0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x410e7af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x410e7cc8"/>
        <function-ref name="writeDone" scoped="" ref="0x410e7da8"/>
        <function-ref name="erase" scoped="" ref="0x410e7e88"/>
        <function-ref name="eraseDone" scoped="" ref="0x410e6010"/>
        <function-ref name="write" scoped="" ref="0x410e60f0"/>
        <function-ref name="sync" scoped="" ref="0x410e61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410e6310" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410e6310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410e64e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410e65c8"/>
        <function-ref name="request" scoped="" ref="0x410e66a8"/>
        <function-ref name="granted" scoped="" ref="0x410e6788"/>
        <function-ref name="isOwner" scoped="" ref="0x410e6868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41a16220" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41a16220"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41a163f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41a16d30" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41a16d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a16f08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41a15010"/>
        <function-ref name="request" scoped="" ref="0x41a150f0"/>
        <function-ref name="granted" scoped="" ref="0x41a151d0"/>
        <function-ref name="isOwner" scoped="" ref="0x41a152b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x410e57f8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x410e57f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x410e59d0"/>
        <function-ref name="writeDone" scoped="" ref="0x410e5ab0"/>
        <function-ref name="erase" scoped="" ref="0x410e5b90"/>
        <function-ref name="eraseDone" scoped="" ref="0x410e5c70"/>
        <function-ref name="write" scoped="" ref="0x410e5d50"/>
        <function-ref name="sync" scoped="" ref="0x410e5e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410e4010" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410e4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410e41e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410e42c8"/>
        <function-ref name="request" scoped="" ref="0x410e43a8"/>
        <function-ref name="granted" scoped="" ref="0x410e4488"/>
        <function-ref name="isOwner" scoped="" ref="0x410e4568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41a11748" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41a11748"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41a11920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41a10270" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41a10270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a10448"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41a10528"/>
        <function-ref name="request" scoped="" ref="0x41a10608"/>
        <function-ref name="granted" scoped="" ref="0x41a106e8"/>
        <function-ref name="isOwner" scoped="" ref="0x41a107c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x411b42d0" loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="DelugeC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x411b42d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x4067c200"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x4067ca70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x411b48f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x41158450" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="DelugeC.DisseminatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x41158450"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x4067c200"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x4067ca70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x411b4010"/>
        <function-ref name="get" scoped="" ref="0x41158a98"/>
        <function-ref name="set" scoped="" ref="0x41158d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x41a67c28" loc="62:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x41a67c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41a67e00"/>
        <function-ref name="runTask" scoped="" ref="0x41a67ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x41a68810" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x41a68810"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x41a68ac8"/>
        <function-ref name="storeData" scoped="" ref="0x41a68e48"/>
        <function-ref name="newData" scoped="" ref="0x41a68ba8"/>
        <function-ref name="start" scoped="" ref="0x41a68c88"/>
        <function-ref name="requestSeqno" scoped="" ref="0x41a68d68"/>
        <function-ref name="stop" scoped="" ref="0x41a689e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x41a0be50" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x41a0be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x4067c200"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x4067ca70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x41a684b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41a67010" loc="52:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41a67010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41a671e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41a672c8"/>
        <function-ref name="led1On" scoped="" ref="0x41a673a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41a67488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41a67568"/>
        <function-ref name="get" scoped="" ref="0x41a67648"/>
        <function-ref name="led1Off" scoped="" ref="0x41a67728"/>
        <function-ref name="led0On" scoped="" ref="0x41a67aa8"/>
        <function-ref name="set" scoped="" ref="0x41a678e8"/>
        <function-ref name="led2On" scoped="" ref="0x41a67808"/>
        <function-ref name="led2Off" scoped="" ref="0x41a679c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x41a0b030" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x41a0b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x4067c200"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x4067ca70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x41a0bb90"/>
        <function-ref name="get" scoped="" ref="0x41a0b678"/>
        <function-ref name="set" scoped="" ref="0x41a0b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x41a0cb60" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="DelugeC.DisseminatorC.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41a0cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41a0cd38"/>
        <function-ref name="stop" scoped="" ref="0x41a0ce18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x411245c0" loc="52:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x411245c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41124798"/>
        <function-ref name="incrementCounter" scoped="" ref="0x41124878"/>
        <function-ref name="reset" scoped="" ref="0x41124958"/>
        <function-ref name="start" scoped="" ref="0x41124a38"/>
        <function-ref name="stop" scoped="" ref="0x41124b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x41129210" loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x41129210"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x411294c8"/>
        <function-ref name="stop" scoped="" ref="0x41129848"/>
        <function-ref name="newData" scoped="" ref="0x411295a8"/>
        <function-ref name="start" scoped="" ref="0x41129688"/>
        <function-ref name="requestSeqno" scoped="" ref="0x41129768"/>
        <function-ref name="requestData" scoped="" ref="0x411293e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4112c9d8" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4112c9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4112cbb0"/>
        <function-ref name="stop" scoped="" ref="0x4112cc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x41128100" loc="53:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x41128100"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411282d8"/>
        <function-ref name="stop" scoped="" ref="0x411283b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x4111e238" loc="57:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x4111e238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4111e410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x4111f9f8" loc="56:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x4111f9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4111fbd0"/>
        <function-ref name="getPayload" scoped="" ref="0x4111fcb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4111fd90"/>
        <function-ref name="cancel" scoped="" ref="0x4111fe70"/>
        <function-ref name="sendDone" scoped="" ref="0x4111e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x41120f18" loc="53:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41120f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4111f108"/>
        <function-ref name="getPayload" scoped="" ref="0x4111f1e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4111f2c8"/>
        <function-ref name="cancel" scoped="" ref="0x4111f3a8"/>
        <function-ref name="sendDone" scoped="" ref="0x4111f488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x41120010" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x41120010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411201e8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x411202c8"/>
        <function-ref name="reset" scoped="" ref="0x411203a8"/>
        <function-ref name="start" scoped="" ref="0x41120488"/>
        <function-ref name="stop" scoped="" ref="0x41120568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x41121450" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x41121450"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x41121708"/>
        <function-ref name="stop" scoped="" ref="0x41121a88"/>
        <function-ref name="newData" scoped="" ref="0x411217e8"/>
        <function-ref name="start" scoped="" ref="0x411218c8"/>
        <function-ref name="requestSeqno" scoped="" ref="0x411219a8"/>
        <function-ref name="requestData" scoped="" ref="0x41121628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x4111f610" loc="54:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4111f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4111f7e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4111e580" loc="59:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4111e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4111e758"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4111e838"/>
        <function-ref name="led1On" scoped="" ref="0x4111e918"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4111e9f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4111ead8"/>
        <function-ref name="get" scoped="" ref="0x4111ebb8"/>
        <function-ref name="led1Off" scoped="" ref="0x4111ec98"/>
        <function-ref name="led2Off" scoped="" ref="0x4111d0f0"/>
        <function-ref name="set" scoped="" ref="0x4111ed78"/>
        <function-ref name="led0On" scoped="" ref="0x4111ee58"/>
        <function-ref name="led2On" scoped="" ref="0x4111d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x41128c48" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41128c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41128e20"/>
        <function-ref name="stop" scoped="" ref="0x41128f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x41120ae0" loc="51:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x41120ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41120cb8"/>
        <function-ref name="stop" scoped="" ref="0x41120d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41123af8" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41123af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41123cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x41123db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41123e90"/>
        <function-ref name="cancel" scoped="" ref="0x41167010"/>
        <function-ref name="sendDone" scoped="" ref="0x411670f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41167230" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41167230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41167408"/>
        <function-ref name="payloadLength" scoped="" ref="0x411674e8"/>
        <function-ref name="getPayload" scoped="" ref="0x411675c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411676a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41167788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411678c8" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411678c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41167aa0"/>
        <function-ref name="source" scoped="" ref="0x41167b80"/>
        <function-ref name="address" scoped="" ref="0x41167c60"/>
        <function-ref name="destination" scoped="" ref="0x41167d40"/>
        <function-ref name="setSource" scoped="" ref="0x41167e20"/>
        <function-ref name="setDestination" scoped="" ref="0x41167f00"/>
        <function-ref name="type" scoped="" ref="0x41166010"/>
        <function-ref name="setType" scoped="" ref="0x411660f0"/>
        <function-ref name="isForMe" scoped="" ref="0x411661d0"/>
        <function-ref name="setGroup" scoped="" ref="0x411662b0"/>
        <function-ref name="localGroup" scoped="" ref="0x41166390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x411664f0" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x411664f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x411666c8"/>
        <function-ref name="noAck" scoped="" ref="0x411667a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x41166888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a58b48" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a58b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a58d20"/>
        <function-ref name="getPayload" scoped="" ref="0x41a58e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a58ee0"/>
        <function-ref name="cancel" scoped="" ref="0x41a54010"/>
        <function-ref name="sendDone" scoped="" ref="0x41a540f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41a54230" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41a54230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41a54408"/>
        <function-ref name="payloadLength" scoped="" ref="0x41a544e8"/>
        <function-ref name="getPayload" scoped="" ref="0x41a545c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a546a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41a54788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41a548c8" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41a548c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41a54aa0"/>
        <function-ref name="source" scoped="" ref="0x41a54b80"/>
        <function-ref name="address" scoped="" ref="0x41a54c60"/>
        <function-ref name="destination" scoped="" ref="0x41a54d40"/>
        <function-ref name="setSource" scoped="" ref="0x41a54e20"/>
        <function-ref name="setDestination" scoped="" ref="0x41a54f00"/>
        <function-ref name="type" scoped="" ref="0x41a53010"/>
        <function-ref name="setType" scoped="" ref="0x41a530f0"/>
        <function-ref name="isForMe" scoped="" ref="0x41a531d0"/>
        <function-ref name="setGroup" scoped="" ref="0x41a532b0"/>
        <function-ref name="localGroup" scoped="" ref="0x41a53390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41a534f0" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41a534f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41a536c8"/>
        <function-ref name="noAck" scoped="" ref="0x41a537a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x41a53888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a4e618" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a4e618"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a4e7f0"/>
        <function-ref name="getPayload" scoped="" ref="0x41a4e8d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a4e9b0"/>
        <function-ref name="cancel" scoped="" ref="0x41a4ea90"/>
        <function-ref name="sendDone" scoped="" ref="0x41a4eb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41a4ecb0" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41a4ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41a4ee88"/>
        <function-ref name="payloadLength" scoped="" ref="0x41a4d010"/>
        <function-ref name="getPayload" scoped="" ref="0x41a4d0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a4d1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41a4d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41a4d3f0" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41a4d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41a4d5c8"/>
        <function-ref name="source" scoped="" ref="0x41a4d6a8"/>
        <function-ref name="address" scoped="" ref="0x41a4d788"/>
        <function-ref name="destination" scoped="" ref="0x41a4d868"/>
        <function-ref name="setSource" scoped="" ref="0x41a4d948"/>
        <function-ref name="setDestination" scoped="" ref="0x41a4da28"/>
        <function-ref name="type" scoped="" ref="0x41a4db08"/>
        <function-ref name="setType" scoped="" ref="0x41a4dbe8"/>
        <function-ref name="isForMe" scoped="" ref="0x41a4dcc8"/>
        <function-ref name="setGroup" scoped="" ref="0x41a4dda8"/>
        <function-ref name="localGroup" scoped="" ref="0x41a4de88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41a4c010" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41a4c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41a4c1e8"/>
        <function-ref name="noAck" scoped="" ref="0x41a4c2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x41a4c3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a43690" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a43690"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a43868"/>
        <function-ref name="getPayload" scoped="" ref="0x41a43948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a43a28"/>
        <function-ref name="cancel" scoped="" ref="0x41a43b08"/>
        <function-ref name="sendDone" scoped="" ref="0x41a43be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41a43d58" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41a43d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a42010"/>
        <function-ref name="getPayload" scoped="" ref="0x41a420f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a421d0"/>
        <function-ref name="cancel" scoped="" ref="0x41a422b0"/>
        <function-ref name="sendDone" scoped="" ref="0x41a42390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41a424d0" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41a424d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41a426a8"/>
        <function-ref name="source" scoped="" ref="0x41a42788"/>
        <function-ref name="address" scoped="" ref="0x41a42868"/>
        <function-ref name="destination" scoped="" ref="0x41a42948"/>
        <function-ref name="setSource" scoped="" ref="0x41a42a28"/>
        <function-ref name="setDestination" scoped="" ref="0x41a42b08"/>
        <function-ref name="type" scoped="" ref="0x41a42be8"/>
        <function-ref name="setType" scoped="" ref="0x41a42cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x41a42da8"/>
        <function-ref name="setGroup" scoped="" ref="0x41a42e88"/>
        <function-ref name="localGroup" scoped="" ref="0x41a41010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x41a4b918" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x41a4b918"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a4baf0"/>
        <function-ref name="getPayload" scoped="" ref="0x41a4bbd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a4bcb0"/>
        <function-ref name="cancel" scoped="" ref="0x41a4bd90"/>
        <function-ref name="sendDone" scoped="" ref="0x41a4be70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x41a4a5c8" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41a4a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x41a4a7a0"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x41a4a880"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x41a4a960"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x41a4aa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a4b230" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a4b230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a4b408"/>
        <function-ref name="getPayload" scoped="" ref="0x41a4b4e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a4b5c8"/>
        <function-ref name="cancel" scoped="" ref="0x41a4b6a8"/>
        <function-ref name="sendDone" scoped="" ref="0x41a4b788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x41a4a010" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x41a4a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x41a4a1e8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41a4a2c8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x41a4a3a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x41a4a488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41163328" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41163328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41163500"/>
        <function-ref name="payloadLength" scoped="" ref="0x411635e0"/>
        <function-ref name="getPayload" scoped="" ref="0x411636c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411637a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41163880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41163010" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41163010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411631e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411639c0" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411639c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41163b98"/>
        <function-ref name="source" scoped="" ref="0x41163c78"/>
        <function-ref name="address" scoped="" ref="0x41163d58"/>
        <function-ref name="destination" scoped="" ref="0x41163e38"/>
        <function-ref name="setSource" scoped="" ref="0x41163f18"/>
        <function-ref name="setDestination" scoped="" ref="0x41162010"/>
        <function-ref name="type" scoped="" ref="0x411620f0"/>
        <function-ref name="setType" scoped="" ref="0x411621d0"/>
        <function-ref name="isForMe" scoped="" ref="0x411622b0"/>
        <function-ref name="setGroup" scoped="" ref="0x41162390"/>
        <function-ref name="localGroup" scoped="" ref="0x41162470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41161a28" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41161a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41161c00"/>
        <function-ref name="getPayload" scoped="" ref="0x41161ce0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41161dc0"/>
        <function-ref name="cancel" scoped="" ref="0x41161ea0"/>
        <function-ref name="sendDone" scoped="" ref="0x41160010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41160150" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41160150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41160328"/>
        <function-ref name="payloadLength" scoped="" ref="0x41160408"/>
        <function-ref name="getPayload" scoped="" ref="0x411604e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411605c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411606a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411607e8" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411607e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411609c0"/>
        <function-ref name="source" scoped="" ref="0x41160aa0"/>
        <function-ref name="address" scoped="" ref="0x41160b80"/>
        <function-ref name="destination" scoped="" ref="0x41160c60"/>
        <function-ref name="setSource" scoped="" ref="0x41160d40"/>
        <function-ref name="setDestination" scoped="" ref="0x41160e20"/>
        <function-ref name="type" scoped="" ref="0x41160f00"/>
        <function-ref name="setType" scoped="" ref="0x4115f010"/>
        <function-ref name="isForMe" scoped="" ref="0x4115f0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x4115f1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x4115f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4115f410" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4115f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4115f5e8"/>
        <function-ref name="noAck" scoped="" ref="0x4115f6c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4115f7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a8e600" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a8e600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a8e7d8"/>
        <function-ref name="getPayload" scoped="" ref="0x41a8e8b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a8e998"/>
        <function-ref name="cancel" scoped="" ref="0x41a8ea78"/>
        <function-ref name="sendDone" scoped="" ref="0x41a8eb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41a8ec98" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41a8ec98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41a8ee70"/>
        <function-ref name="payloadLength" scoped="" ref="0x41a8d010"/>
        <function-ref name="getPayload" scoped="" ref="0x41a8d0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a8d1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41a8d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41a8d3f0" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41a8d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41a8d5c8"/>
        <function-ref name="source" scoped="" ref="0x41a8d6a8"/>
        <function-ref name="address" scoped="" ref="0x41a8d788"/>
        <function-ref name="destination" scoped="" ref="0x41a8d868"/>
        <function-ref name="setSource" scoped="" ref="0x41a8d948"/>
        <function-ref name="setDestination" scoped="" ref="0x41a8da28"/>
        <function-ref name="type" scoped="" ref="0x41a8db08"/>
        <function-ref name="setType" scoped="" ref="0x41a8dbe8"/>
        <function-ref name="isForMe" scoped="" ref="0x41a8dcc8"/>
        <function-ref name="setGroup" scoped="" ref="0x41a8dda8"/>
        <function-ref name="localGroup" scoped="" ref="0x41a8de88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41a8c010" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41a8c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41a8c1e8"/>
        <function-ref name="noAck" scoped="" ref="0x41a8c2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x41a8c3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a87200" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a87200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a873d8"/>
        <function-ref name="getPayload" scoped="" ref="0x41a874b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a87598"/>
        <function-ref name="cancel" scoped="" ref="0x41a87678"/>
        <function-ref name="sendDone" scoped="" ref="0x41a87758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41a87898" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41a87898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41a87a70"/>
        <function-ref name="payloadLength" scoped="" ref="0x41a87b50"/>
        <function-ref name="getPayload" scoped="" ref="0x41a87c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a87d10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41a87df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41a86010" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41a86010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41a861e8"/>
        <function-ref name="source" scoped="" ref="0x41a862c8"/>
        <function-ref name="address" scoped="" ref="0x41a863a8"/>
        <function-ref name="destination" scoped="" ref="0x41a86488"/>
        <function-ref name="setSource" scoped="" ref="0x41a86568"/>
        <function-ref name="setDestination" scoped="" ref="0x41a86648"/>
        <function-ref name="type" scoped="" ref="0x41a86728"/>
        <function-ref name="setType" scoped="" ref="0x41a86808"/>
        <function-ref name="isForMe" scoped="" ref="0x41a868e8"/>
        <function-ref name="setGroup" scoped="" ref="0x41a869c8"/>
        <function-ref name="localGroup" scoped="" ref="0x41a86aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41a86c08" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41a86c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41a86de0"/>
        <function-ref name="noAck" scoped="" ref="0x41a86ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x41a85010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a7c420" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a7c420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a7c5f8"/>
        <function-ref name="getPayload" scoped="" ref="0x41a7c6d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a7c7b8"/>
        <function-ref name="cancel" scoped="" ref="0x41a7c898"/>
        <function-ref name="sendDone" scoped="" ref="0x41a7c978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41a7cae8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41a7cae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a7ccc0"/>
        <function-ref name="getPayload" scoped="" ref="0x41a7cda0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a7ce80"/>
        <function-ref name="cancel" scoped="" ref="0x41a7b010"/>
        <function-ref name="sendDone" scoped="" ref="0x41a7b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41a7b230" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41a7b230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41a7b408"/>
        <function-ref name="source" scoped="" ref="0x41a7b4e8"/>
        <function-ref name="address" scoped="" ref="0x41a7b5c8"/>
        <function-ref name="destination" scoped="" ref="0x41a7b6a8"/>
        <function-ref name="setSource" scoped="" ref="0x41a7b788"/>
        <function-ref name="setDestination" scoped="" ref="0x41a7b868"/>
        <function-ref name="type" scoped="" ref="0x41a7b948"/>
        <function-ref name="setType" scoped="" ref="0x41a7ba28"/>
        <function-ref name="isForMe" scoped="" ref="0x41a7bb08"/>
        <function-ref name="setGroup" scoped="" ref="0x41a7bbe8"/>
        <function-ref name="localGroup" scoped="" ref="0x41a7bcc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x41a83580" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x41a83580"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a83758"/>
        <function-ref name="getPayload" scoped="" ref="0x41a83838"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a83918"/>
        <function-ref name="cancel" scoped="" ref="0x41a839f8"/>
        <function-ref name="sendDone" scoped="" ref="0x41a83ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x41a82230" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41a82230"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x41a82408"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x41a824e8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x41a825c8"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x41a826a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a85e88" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a85e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a83070"/>
        <function-ref name="getPayload" scoped="" ref="0x41a83150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a83230"/>
        <function-ref name="cancel" scoped="" ref="0x41a83310"/>
        <function-ref name="sendDone" scoped="" ref="0x41a833f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x41a83c38" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x41a83c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x41a83e10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41a83ef0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x41a82010"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x41a820f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4115d328" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4115d328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4115d500"/>
        <function-ref name="payloadLength" scoped="" ref="0x4115d5e0"/>
        <function-ref name="getPayload" scoped="" ref="0x4115d6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4115d7a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4115d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4115d010" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4115d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4115d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4115d9c0" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4115d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4115db98"/>
        <function-ref name="source" scoped="" ref="0x4115dc78"/>
        <function-ref name="address" scoped="" ref="0x4115dd58"/>
        <function-ref name="destination" scoped="" ref="0x4115de38"/>
        <function-ref name="setSource" scoped="" ref="0x4115df18"/>
        <function-ref name="setDestination" scoped="" ref="0x4115c010"/>
        <function-ref name="type" scoped="" ref="0x4115c0f0"/>
        <function-ref name="setType" scoped="" ref="0x4115c1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x4115c2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x4115c390"/>
        <function-ref name="localGroup" scoped="" ref="0x4115c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x41157320" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x41157320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411574f8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x411575d8"/>
        <function-ref name="reset" scoped="" ref="0x411576b8"/>
        <function-ref name="start" scoped="" ref="0x41157798"/>
        <function-ref name="stop" scoped="" ref="0x41157878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x411b6278" loc="55:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x411b6278"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x411b6460"/>
        <function-ref name="incrementCounter" scoped="" ref="0x411b6540"/>
        <function-ref name="reset" scoped="" ref="0x411b6620"/>
        <function-ref name="start" scoped="" ref="0x411b6700"/>
        <function-ref name="stop" scoped="" ref="0x411b67e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x41ac57b8" loc="62:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x41ac57b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41ac5990"/>
        <function-ref name="clear" scoped="" ref="0x41ac5a70"/>
        <function-ref name="toggle" scoped="" ref="0x41ac5b50"/>
        <function-ref name="get" scoped="" ref="0x41ac5c30"/>
        <function-ref name="assign" scoped="" ref="0x41ac5d10"/>
        <function-ref name="setAll" scoped="" ref="0x41ac5df0"/>
        <function-ref name="set" scoped="" ref="0x41ac5ed0"/>
        <function-ref name="size" scoped="" ref="0x41ac4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x41ac4170" loc="63:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x41ac4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41ac4348"/>
        <function-ref name="clear" scoped="" ref="0x41ac4428"/>
        <function-ref name="toggle" scoped="" ref="0x41ac4508"/>
        <function-ref name="get" scoped="" ref="0x41ac45e8"/>
        <function-ref name="assign" scoped="" ref="0x41ac46c8"/>
        <function-ref name="setAll" scoped="" ref="0x41ac47a8"/>
        <function-ref name="set" scoped="" ref="0x41ac4888"/>
        <function-ref name="size" scoped="" ref="0x41ac4968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x41ac4aa8" loc="64:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x41ac4aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x41ac4c80"/>
        <function-ref name="rand32" scoped="" ref="0x41ac4d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x41ac9e30" loc="58:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x41ac9e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41ac8050"/>
        <function-ref name="incrementCounter" scoped="" ref="0x41ac8130"/>
        <function-ref name="reset" scoped="" ref="0x41ac8210"/>
        <function-ref name="start" scoped="" ref="0x41ac82f0"/>
        <function-ref name="stop" scoped="" ref="0x41ac83d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41ac9a80" loc="57:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41ac9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41ac9c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x41ac3b00" loc="154:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x41ac3b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41ac3cd8"/>
        <function-ref name="runTask" scoped="" ref="0x41ac3db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41ac4ea0" loc="65:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41ac4ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41ac30c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41ac31a0"/>
        <function-ref name="led1On" scoped="" ref="0x41ac3280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41ac3360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41ac3440"/>
        <function-ref name="get" scoped="" ref="0x41ac3520"/>
        <function-ref name="led1Off" scoped="" ref="0x41ac3600"/>
        <function-ref name="led0On" scoped="" ref="0x41ac3980"/>
        <function-ref name="set" scoped="" ref="0x41ac37c0"/>
        <function-ref name="led2On" scoped="" ref="0x41ac36e0"/>
        <function-ref name="led2Off" scoped="" ref="0x41ac38a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41ac85d0" loc="61:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41ac85d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41ac50d8"/>
        <function-ref name="fired" scoped="" ref="0x41ac7368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41ac7a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x41ac7818"/>
        <function-ref name="getdt" scoped="" ref="0x41ac5588"/>
        <function-ref name="gett0" scoped="" ref="0x41ac5330"/>
        <function-ref name="isRunning" scoped="" ref="0x41ac75c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41ac8bf8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41ac7d90"/>
        <function-ref name="startOneShot" scoped="" ref="0x41ac8e78"/>
        <function-ref name="stop" scoped="" ref="0x41ac7110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41ac1508" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41ac1508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41abf010"/>
        <function-ref name="fired" scoped="" ref="0x41ac02a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41ac09a8"/>
        <function-ref name="isOneShot" scoped="" ref="0x41ac0750"/>
        <function-ref name="getdt" scoped="" ref="0x41abf4c0"/>
        <function-ref name="gett0" scoped="" ref="0x41abf268"/>
        <function-ref name="isRunning" scoped="" ref="0x41ac04f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41ac1b30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41ac0cc8"/>
        <function-ref name="startOneShot" scoped="" ref="0x41ac1db0"/>
        <function-ref name="stop" scoped="" ref="0x41ac0048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41abd1e8" loc="46:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41abd1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41abd3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x41abd520" loc="47:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x41abd520"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41abd6f8"/>
        <function-ref name="clear" scoped="" ref="0x41abd7d8"/>
        <function-ref name="toggle" scoped="" ref="0x41abd8b8"/>
        <function-ref name="get" scoped="" ref="0x41abd998"/>
        <function-ref name="assign" scoped="" ref="0x41abda78"/>
        <function-ref name="setAll" scoped="" ref="0x41abdb58"/>
        <function-ref name="set" scoped="" ref="0x41abdc38"/>
        <function-ref name="size" scoped="" ref="0x41abdd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41abc9f8" loc="46:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41abc9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41abcbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x41abcd30" loc="47:/opt/tinyos-2.1.2/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x41abcd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41abcf08"/>
        <function-ref name="clear" scoped="" ref="0x41abb010"/>
        <function-ref name="toggle" scoped="" ref="0x41abb0f0"/>
        <function-ref name="get" scoped="" ref="0x41abb1d0"/>
        <function-ref name="assign" scoped="" ref="0x41abb2b0"/>
        <function-ref name="setAll" scoped="" ref="0x41abb390"/>
        <function-ref name="set" scoped="" ref="0x41abb470"/>
        <function-ref name="size" scoped="" ref="0x41abb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x411b35a0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x411b35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411b3778"/>
        <function-ref name="stop" scoped="" ref="0x411b3858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NetProg" ref="0x411a8228" loc="48:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgC.nc">
      <component-ref qname="NetProgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x411a8228"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x411a8400"/>
        <function-ref name="reboot" scoped="" ref="0x411a84e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InternalFlash" ref="0x411d5e78" loc="45:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/avr/InternalFlashC.nc">
      <component-ref qname="InternalFlashC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InternalFlash" scoped="" ref="0x411d5e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="InternalFlash"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411d8070"/>
        <function-ref name="write" scoped="" ref="0x411d8150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NetProg" ref="0x411d0ed0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x411d0ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x411cf0c0"/>
        <function-ref name="reboot" scoped="" ref="0x411cf1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IFlash" ref="0x411cf750" loc="51:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IFlash" scoped="" ref="0x411cf750"/></type-interface>
      <instance>
        <interfacedef-ref qname="InternalFlash"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411cf928"/>
        <function-ref name="write" scoped="" ref="0x411cfa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411cf310" loc="48:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411cf310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411cf4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x411ce010" loc="53:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x411ce010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x411ce1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x411ce2c8"/>
        <function-ref name="led1On" scoped="" ref="0x411ce3a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x411ce488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x411ce568"/>
        <function-ref name="get" scoped="" ref="0x411ce648"/>
        <function-ref name="led1Off" scoped="" ref="0x411ce728"/>
        <function-ref name="led2Off" scoped="" ref="0x411ceaa8"/>
        <function-ref name="set" scoped="" ref="0x411ce808"/>
        <function-ref name="led0On" scoped="" ref="0x411ce8e8"/>
        <function-ref name="led2On" scoped="" ref="0x411ce9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Crc" ref="0x411cfb68" loc="52:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/iris/NetProgM.nc">
      <component-ref qname="NetProgM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Crc" scoped="" ref="0x411cfb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Crc"/>
      </instance>
      <interface-functions>
        <function-ref name="seededCrc16" scoped="" ref="0x411cfd40"/>
        <function-ref name="crc16" scoped="" ref="0x411cfe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="taskRequest" ref="0x411f34e8" loc="97:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="taskRequest" scoped="" ref="0x411f34e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411f36c0"/>
        <function-ref name="runTask" scoped="" ref="0x411f37a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NetProg" ref="0x411fe610" loc="46:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x411fe610"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x411fe7e8"/>
        <function-ref name="reboot" scoped="" ref="0x411fe8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSplitControl" ref="0x411fe010" loc="45:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSplitControl" scoped="" ref="0x411fe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411fe1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x411fe2c8"/>
        <function-ref name="start" scoped="" ref="0x411fe3a8"/>
        <function-ref name="stop" scoped="" ref="0x411fe488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x411b0338" loc="40:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x411b0338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x411b0510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationStdControl" ref="0x411ff3c8" loc="43:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationStdControl" scoped="" ref="0x411ff3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411ff5a0"/>
        <function-ref name="stop" scoped="" ref="0x411ff680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StorageMap" ref="0x411fed90" loc="47:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x411fed90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x411fd010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeMetadata" ref="0x411fa4d8" loc="48:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x411fa4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x411fa6b0"/>
        <function-ref name="readDone" scoped="" ref="0x411fa790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x411b0680" loc="41:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x411b0680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x411b0858"/>
        <function-ref name="led0Toggle" scoped="" ref="0x411b0938"/>
        <function-ref name="led1On" scoped="" ref="0x411b0a18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x411b0af8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x411b0bd8"/>
        <function-ref name="get" scoped="" ref="0x411b0cb8"/>
        <function-ref name="led1Off" scoped="" ref="0x411b0d98"/>
        <function-ref name="led2Off" scoped="" ref="0x411c31d0"/>
        <function-ref name="set" scoped="" ref="0x411b0e78"/>
        <function-ref name="led0On" scoped="" ref="0x411c3010"/>
        <function-ref name="led2On" scoped="" ref="0x411c30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x411f9c60" loc="50:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411f9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411f9e38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411f9f18"/>
        <function-ref name="request" scoped="" ref="0x411fc010"/>
        <function-ref name="granted" scoped="" ref="0x411fc0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x411fc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationValue" ref="0x411c34b8" loc="42:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x411c34b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x4067c200"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x4067ca70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x411ff048"/>
        <function-ref name="get" scoped="" ref="0x411c3b00"/>
        <function-ref name="set" scoped="" ref="0x411c3d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeVolumeManager" ref="0x411f9810" loc="49:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x411f9810"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x411f99e8"/>
        <function-ref name="eraseDone" scoped="" ref="0x411f9ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ObjectTransfer" ref="0x411ff850" loc="44:../../Deluge/DelugeP.nc">
      <component-ref qname="DelugeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x411ff850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411ffa28"/>
        <function-ref name="receiveDone" scoped="" ref="0x411ffb08"/>
        <function-ref name="publish" scoped="" ref="0x411ffbe8"/>
        <function-ref name="stop" scoped="" ref="0x411ffcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x411c4848" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugeC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x411c4848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4121d368"/>
        <function-ref name="fired" scoped="" ref="0x411e15e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x411e1cf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x411e1a98"/>
        <function-ref name="getdt" scoped="" ref="0x4121d818"/>
        <function-ref name="gett0" scoped="" ref="0x4121d5c0"/>
        <function-ref name="isRunning" scoped="" ref="0x411e1840"/>
        <function-ref name="startPeriodic" scoped="" ref="0x411c4e70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4121d048"/>
        <function-ref name="startOneShot" scoped="" ref="0x411e1110"/>
        <function-ref name="stop" scoped="" ref="0x411e1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x4121c910" loc="39:../../Deluge/DelugeMetadataC.nc">
      <component-ref qname="DelugeMetadataC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x4121c910"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4121cae8"/>
        <function-ref name="readDone" scoped="" ref="0x4121cbc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x41215c48" loc="43:../../Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x41215c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x41215e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x41214308" loc="44:../../Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41214308"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412144e0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x412145c0"/>
        <function-ref name="computeCrc" scoped="" ref="0x412146a0"/>
        <function-ref name="getSize" scoped="" ref="0x41214780"/>
        <function-ref name="readDone" scoped="" ref="0x41214860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x41214d28" loc="45:../../Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41214d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41214f00"/>
        <function-ref name="writeDone" scoped="" ref="0x41212010"/>
        <function-ref name="erase" scoped="" ref="0x412120f0"/>
        <function-ref name="eraseDone" scoped="" ref="0x412121d0"/>
        <function-ref name="write" scoped="" ref="0x412122b0"/>
        <function-ref name="sync" scoped="" ref="0x41212390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x412157f0" loc="41:../../Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x412157f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412159c8"/>
        <function-ref name="readDone" scoped="" ref="0x41215aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StorageMap" ref="0x41212858" loc="46:../../Deluge/DelugeMetadataP.nc">
      <component-ref qname="DelugeMetadataP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x41212858"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x41212a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x412170d8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x412170d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x412172b0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41217390"/>
        <function-ref name="computeCrc" scoped="" ref="0x41217470"/>
        <function-ref name="getSize" scoped="" ref="0x41217550"/>
        <function-ref name="readDone" scoped="" ref="0x41217630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41217770" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41217770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41217948"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41217a28"/>
        <function-ref name="request" scoped="" ref="0x41217b08"/>
        <function-ref name="granted" scoped="" ref="0x41217be8"/>
        <function-ref name="isOwner" scoped="" ref="0x41217cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41ae7970" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41ae7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41ae7b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41ae64a8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41ae64a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41ae6680"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41ae6760"/>
        <function-ref name="request" scoped="" ref="0x41ae6840"/>
        <function-ref name="granted" scoped="" ref="0x41ae6920"/>
        <function-ref name="isOwner" scoped="" ref="0x41ae6a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x4122ece8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x4122ece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4122eec0"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x4122d010"/>
        <function-ref name="computeCrc" scoped="" ref="0x4122d0f0"/>
        <function-ref name="getSize" scoped="" ref="0x4122d1d0"/>
        <function-ref name="readDone" scoped="" ref="0x4122d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4122d3f0" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4122d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4122d5c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4122d6a8"/>
        <function-ref name="request" scoped="" ref="0x4122d788"/>
        <function-ref name="granted" scoped="" ref="0x4122d868"/>
        <function-ref name="isOwner" scoped="" ref="0x4122d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41ae3db8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41ae3db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41ae1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41ae1948" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41ae1948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41ae1b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41ae1c00"/>
        <function-ref name="request" scoped="" ref="0x41ae1ce0"/>
        <function-ref name="granted" scoped="" ref="0x41ae1dc0"/>
        <function-ref name="isOwner" scoped="" ref="0x41ae1ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x4122c8a8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x4122c8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4122ca80"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x4122cb60"/>
        <function-ref name="computeCrc" scoped="" ref="0x4122cc40"/>
        <function-ref name="getSize" scoped="" ref="0x4122cd20"/>
        <function-ref name="readDone" scoped="" ref="0x4122ce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4122b010" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4122b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4122b1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4122b2c8"/>
        <function-ref name="request" scoped="" ref="0x4122b3a8"/>
        <function-ref name="granted" scoped="" ref="0x4122b488"/>
        <function-ref name="isOwner" scoped="" ref="0x4122b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41adb2b0" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41adb2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41adb488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41adbdc0" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41adbdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41ada010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41ada0f0"/>
        <function-ref name="request" scoped="" ref="0x41ada1d0"/>
        <function-ref name="granted" scoped="" ref="0x41ada2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x41ada390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x4122a4d0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x4122a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4122a6a8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x4122a788"/>
        <function-ref name="computeCrc" scoped="" ref="0x4122a868"/>
        <function-ref name="getSize" scoped="" ref="0x4122a948"/>
        <function-ref name="readDone" scoped="" ref="0x4122aa28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4122ab68" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4122ab68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4122ad40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4122ae20"/>
        <function-ref name="request" scoped="" ref="0x4122af00"/>
        <function-ref name="granted" scoped="" ref="0x41229010"/>
        <function-ref name="isOwner" scoped="" ref="0x412290f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41ad6748" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41ad6748"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41ad6920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41ad5270" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockReaderDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41ad5270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41ad5448"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41ad5528"/>
        <function-ref name="request" scoped="" ref="0x41ad5608"/>
        <function-ref name="granted" scoped="" ref="0x41ad56e8"/>
        <function-ref name="isOwner" scoped="" ref="0x41ad57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41227030" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41227030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41227208"/>
        <function-ref name="writeDone" scoped="" ref="0x412272e8"/>
        <function-ref name="erase" scoped="" ref="0x412273c8"/>
        <function-ref name="eraseDone" scoped="" ref="0x412274a8"/>
        <function-ref name="write" scoped="" ref="0x41227588"/>
        <function-ref name="sync" scoped="" ref="0x41227668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x412277a8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412277a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41227980"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41227a60"/>
        <function-ref name="request" scoped="" ref="0x41227b40"/>
        <function-ref name="granted" scoped="" ref="0x41227c20"/>
        <function-ref name="isOwner" scoped="" ref="0x41227d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41ad1b48" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41ad1b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41ad1d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41ad06d8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41ad06d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41ad08b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41ad0990"/>
        <function-ref name="request" scoped="" ref="0x41ad0a70"/>
        <function-ref name="granted" scoped="" ref="0x41ad0b50"/>
        <function-ref name="isOwner" scoped="" ref="0x41ad0c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41225d20" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41225d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41225ef8"/>
        <function-ref name="writeDone" scoped="" ref="0x41224010"/>
        <function-ref name="erase" scoped="" ref="0x412240f0"/>
        <function-ref name="eraseDone" scoped="" ref="0x412241d0"/>
        <function-ref name="write" scoped="" ref="0x412242b0"/>
        <function-ref name="sync" scoped="" ref="0x41224390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x412244d0" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412244d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412246a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41224788"/>
        <function-ref name="request" scoped="" ref="0x41224868"/>
        <function-ref name="granted" scoped="" ref="0x41224948"/>
        <function-ref name="isOwner" scoped="" ref="0x41224a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41aca0e8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41aca0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41aca2c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41acabf8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41acabf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41acadd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41acaeb0"/>
        <function-ref name="request" scoped="" ref="0x41b2b010"/>
        <function-ref name="granted" scoped="" ref="0x41b2b0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x41b2b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x412239b8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x412239b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41223b90"/>
        <function-ref name="writeDone" scoped="" ref="0x41223c70"/>
        <function-ref name="erase" scoped="" ref="0x41223d50"/>
        <function-ref name="eraseDone" scoped="" ref="0x41223e30"/>
        <function-ref name="write" scoped="" ref="0x41223f10"/>
        <function-ref name="sync" scoped="" ref="0x41222010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41222150" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41222150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41222328"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41222408"/>
        <function-ref name="request" scoped="" ref="0x412224e8"/>
        <function-ref name="granted" scoped="" ref="0x412225c8"/>
        <function-ref name="isOwner" scoped="" ref="0x412226a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41b27690" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41b27690"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41b27868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b261b8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b261b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b26390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b26470"/>
        <function-ref name="request" scoped="" ref="0x41b26550"/>
        <function-ref name="granted" scoped="" ref="0x41b26630"/>
        <function-ref name="isOwner" scoped="" ref="0x41b26710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x412216a0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x412216a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41221878"/>
        <function-ref name="writeDone" scoped="" ref="0x41221958"/>
        <function-ref name="erase" scoped="" ref="0x41221a38"/>
        <function-ref name="eraseDone" scoped="" ref="0x41221b18"/>
        <function-ref name="write" scoped="" ref="0x41221bf8"/>
        <function-ref name="sync" scoped="" ref="0x41221cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41221e18" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41221e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41220010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412200f0"/>
        <function-ref name="request" scoped="" ref="0x412201d0"/>
        <function-ref name="granted" scoped="" ref="0x412202b0"/>
        <function-ref name="isOwner" scoped="" ref="0x41220390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41b22ba0" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41b22ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41b22d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b206d8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeMetadataC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b206d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b208b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b20990"/>
        <function-ref name="request" scoped="" ref="0x41b20a70"/>
        <function-ref name="granted" scoped="" ref="0x41b20b50"/>
        <function-ref name="isOwner" scoped="" ref="0x41b20c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x41259cc0" loc="39:../../Deluge/DelugeMetadataClientC.nc">
      <component-ref qname="DelugeC.DelugeMetadataClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x41259cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41259e98"/>
        <function-ref name="readDone" scoped="" ref="0x4125c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x4127ce48" loc="39:../../Deluge/DelugeVolumeManagerClientC.nc">
      <component-ref qname="DelugeC.DelugeVolumeManagerClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x4127ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x4125b050"/>
        <function-ref name="eraseDone" scoped="" ref="0x4125b130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x41257ef8" loc="39:../../Deluge/DelugeVolumeManagerC.nc">
      <component-ref qname="DelugeVolumeManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41257ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x412540e0"/>
        <function-ref name="eraseDone" scoped="" ref="0x412541c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x41251508" loc="41:../../Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41251508"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x412516e0"/>
        <function-ref name="writeDone" scoped="" ref="0x412517c0"/>
        <function-ref name="erase" scoped="" ref="0x412518a0"/>
        <function-ref name="eraseDone" scoped="" ref="0x41251980"/>
        <function-ref name="write" scoped="" ref="0x41251a60"/>
        <function-ref name="sync" scoped="" ref="0x41251b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4124f010" loc="42:../../Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4124f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4124f1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4124f2c8"/>
        <function-ref name="request" scoped="" ref="0x4124f3a8"/>
        <function-ref name="granted" scoped="" ref="0x4124f488"/>
        <function-ref name="isOwner" scoped="" ref="0x4124f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x41254c98" loc="39:../../Deluge/DelugeVolumeManagerP.nc">
      <component-ref qname="DelugeVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41254c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x41254e70"/>
        <function-ref name="eraseDone" scoped="" ref="0x41251010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41253888" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41253888"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41253a60"/>
        <function-ref name="writeDone" scoped="" ref="0x41253b40"/>
        <function-ref name="erase" scoped="" ref="0x41253c20"/>
        <function-ref name="eraseDone" scoped="" ref="0x41253d00"/>
        <function-ref name="write" scoped="" ref="0x41253de0"/>
        <function-ref name="sync" scoped="" ref="0x41253ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41252030" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41252030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41252208"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412522e8"/>
        <function-ref name="request" scoped="" ref="0x412523c8"/>
        <function-ref name="granted" scoped="" ref="0x412524a8"/>
        <function-ref name="isOwner" scoped="" ref="0x41252588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41b171e8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41b171e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41b173c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b17cf8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b17cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b17ed0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b16010"/>
        <function-ref name="request" scoped="" ref="0x41b160f0"/>
        <function-ref name="granted" scoped="" ref="0x41b161d0"/>
        <function-ref name="isOwner" scoped="" ref="0x41b162b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41241520" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41241520"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x412416f8"/>
        <function-ref name="writeDone" scoped="" ref="0x412417d8"/>
        <function-ref name="erase" scoped="" ref="0x412418b8"/>
        <function-ref name="eraseDone" scoped="" ref="0x41241998"/>
        <function-ref name="write" scoped="" ref="0x41241a78"/>
        <function-ref name="sync" scoped="" ref="0x41241b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41241c98" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41241c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41241e70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41240010"/>
        <function-ref name="request" scoped="" ref="0x412400f0"/>
        <function-ref name="granted" scoped="" ref="0x412401d0"/>
        <function-ref name="isOwner" scoped="" ref="0x412402b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41b12640" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41b12640"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41b12818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b11168" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b11168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b11340"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b11420"/>
        <function-ref name="request" scoped="" ref="0x41b11500"/>
        <function-ref name="granted" scoped="" ref="0x41b115e0"/>
        <function-ref name="isOwner" scoped="" ref="0x41b116c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x4123f250" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x4123f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x4123f428"/>
        <function-ref name="writeDone" scoped="" ref="0x4123f508"/>
        <function-ref name="erase" scoped="" ref="0x4123f5e8"/>
        <function-ref name="eraseDone" scoped="" ref="0x4123f6c8"/>
        <function-ref name="write" scoped="" ref="0x4123f7a8"/>
        <function-ref name="sync" scoped="" ref="0x4123f888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4123f9c8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4123f9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4123fba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4123fc80"/>
        <function-ref name="request" scoped="" ref="0x4123fd60"/>
        <function-ref name="granted" scoped="" ref="0x4123fe40"/>
        <function-ref name="isOwner" scoped="" ref="0x4123ff20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41b0da08" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41b0da08"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41b0dbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b0b538" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b0b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b0b710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b0b7f0"/>
        <function-ref name="request" scoped="" ref="0x41b0b8d0"/>
        <function-ref name="granted" scoped="" ref="0x41b0b9b0"/>
        <function-ref name="isOwner" scoped="" ref="0x41b0ba90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4125bba8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4125bba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4125bd80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4125be60"/>
        <function-ref name="request" scoped="" ref="0x4127b010"/>
        <function-ref name="granted" scoped="" ref="0x4127b0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x4127b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41279f20" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41279f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41274110"/>
        <function-ref name="stopDone" scoped="" ref="0x412741f0"/>
        <function-ref name="start" scoped="" ref="0x412742d0"/>
        <function-ref name="stop" scoped="" ref="0x412743b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41274810" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41274810"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412749e8"/>
        <function-ref name="getPayload" scoped="" ref="0x41274ac8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41274ba8"/>
        <function-ref name="cancel" scoped="" ref="0x41274c88"/>
        <function-ref name="sendDone" scoped="" ref="0x41274d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41273550" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41273550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41273728"/>
        <function-ref name="payloadLength" scoped="" ref="0x41273808"/>
        <function-ref name="getPayload" scoped="" ref="0x412738e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412739c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41273aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x412731f8" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x412731f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x412733d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41272e68" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41272e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41271050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41271130"/>
        <function-ref name="led1On" scoped="" ref="0x41271210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x412712f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x412713d0"/>
        <function-ref name="get" scoped="" ref="0x412714b0"/>
        <function-ref name="led1Off" scoped="" ref="0x41271590"/>
        <function-ref name="led2Off" scoped="" ref="0x41271910"/>
        <function-ref name="set" scoped="" ref="0x41271670"/>
        <function-ref name="led0On" scoped="" ref="0x41271750"/>
        <function-ref name="led2On" scoped="" ref="0x41271830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x41272930" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41272930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41272b08"/>
        <function-ref name="noAck" scoped="" ref="0x41272be8"/>
        <function-ref name="wasAcked" scoped="" ref="0x41272cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41273c40" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41273c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41273e18"/>
        <function-ref name="source" scoped="" ref="0x41273ef8"/>
        <function-ref name="address" scoped="" ref="0x41272010"/>
        <function-ref name="destination" scoped="" ref="0x412720f0"/>
        <function-ref name="setSource" scoped="" ref="0x412721d0"/>
        <function-ref name="setDestination" scoped="" ref="0x412722b0"/>
        <function-ref name="type" scoped="" ref="0x41272390"/>
        <function-ref name="setType" scoped="" ref="0x41272470"/>
        <function-ref name="isForMe" scoped="" ref="0x41272550"/>
        <function-ref name="setGroup" scoped="" ref="0x41272630"/>
        <function-ref name="localGroup" scoped="" ref="0x41272710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4127e430" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4127e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4127e608"/>
        <function-ref name="getPayload" scoped="" ref="0x4127e6e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4127e7c8"/>
        <function-ref name="cancel" scoped="" ref="0x4127e8a8"/>
        <function-ref name="sendDone" scoped="" ref="0x4127e988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4127eae8" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4127eae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4127ecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41270180" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41270180"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41270368"/>
        <function-ref name="getPayload" scoped="" ref="0x41270448"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41270528"/>
        <function-ref name="cancel" scoped="" ref="0x41270608"/>
        <function-ref name="sendDone" scoped="" ref="0x412706e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4126f850" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4126f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4126fa28"/>
        <function-ref name="payloadLength" scoped="" ref="0x4126fb08"/>
        <function-ref name="getPayload" scoped="" ref="0x4126fbe8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4126fcc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4126fda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x412708c0" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x412708c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41270aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4126fee8" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4126fee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4127e0e0"/>
        <function-ref name="noAck" scoped="" ref="0x4127e1c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4127e2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41270be8" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41270be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41270dc0"/>
        <function-ref name="source" scoped="" ref="0x41270ea0"/>
        <function-ref name="address" scoped="" ref="0x4126f010"/>
        <function-ref name="destination" scoped="" ref="0x4126f0f0"/>
        <function-ref name="setSource" scoped="" ref="0x4126f1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x4126f2b0"/>
        <function-ref name="type" scoped="" ref="0x4126f390"/>
        <function-ref name="setType" scoped="" ref="0x4126f470"/>
        <function-ref name="isForMe" scoped="" ref="0x4126f550"/>
        <function-ref name="setGroup" scoped="" ref="0x4126f630"/>
        <function-ref name="localGroup" scoped="" ref="0x4126f710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x412ba3a8" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x412ba3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x412ba580"/>
        <function-ref name="stopDone" scoped="" ref="0x412ba660"/>
        <function-ref name="start" scoped="" ref="0x412ba740"/>
        <function-ref name="stop" scoped="" ref="0x412ba820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x412b8288" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x412b8288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404f9748"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412b8460"/>
        <function-ref name="getPayload" scoped="" ref="0x412b8540"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412b8620"/>
        <function-ref name="cancel" scoped="" ref="0x412b8700"/>
        <function-ref name="sendDone" scoped="" ref="0x412b87e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x412ba010" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x412ba010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412ba1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x412bac68" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x412bac68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404f9748"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x412bae40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x412b4e80" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x412b4e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x412b7070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x412b7150"/>
        <function-ref name="led1On" scoped="" ref="0x412b7230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x412b7310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x412b73f0"/>
        <function-ref name="get" scoped="" ref="0x412b74d0"/>
        <function-ref name="led1Off" scoped="" ref="0x412b75b0"/>
        <function-ref name="led2Off" scoped="" ref="0x412b7930"/>
        <function-ref name="set" scoped="" ref="0x412b7690"/>
        <function-ref name="led0On" scoped="" ref="0x412b7770"/>
        <function-ref name="led2On" scoped="" ref="0x412b7850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x412b4978" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x412b4978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404f9748"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x412b4b50"/>
        <function-ref name="offset" scoped="" ref="0x412b4c30"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x412b4d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x412b22c8" loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x412b22c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x412b24a0"/>
        <function-ref name="stopDone" scoped="" ref="0x412b2580"/>
        <function-ref name="start" scoped="" ref="0x412b2660"/>
        <function-ref name="stop" scoped="" ref="0x412b2740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x412f97a0" loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x412f97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x412f9978"/>
        <function-ref name="runTask" scoped="" ref="0x412f9a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x412a9500" loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x412a9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x412a96d8"/>
        <function-ref name="stop" scoped="" ref="0x412a97b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x412d7a18" loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x412d7a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x412d7bf0"/>
        <function-ref name="runTask" scoped="" ref="0x412d7cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x412b7f18" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x412b7f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412b2108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x412a3560" loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x412a3560"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x412a3738"/>
        <function-ref name="flush" scoped="" ref="0x412a3818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x412fa010" loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x412fa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x412fa1e8"/>
        <function-ref name="runTask" scoped="" ref="0x412fa2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x412a7f10" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x412a7f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x412ab108"/>
        <function-ref name="resetSend" scoped="" ref="0x412ab1e8"/>
        <function-ref name="dataReceived" scoped="" ref="0x412ab2c8"/>
        <function-ref name="resetReceive" scoped="" ref="0x412ab3a8"/>
        <function-ref name="putData" scoped="" ref="0x412ab488"/>
        <function-ref name="putDone" scoped="" ref="0x412ab568"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x412ab648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x412ab7b8" loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x412ab7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x412ab990"/>
        <function-ref name="led0Toggle" scoped="" ref="0x412aba70"/>
        <function-ref name="led1On" scoped="" ref="0x412abb50"/>
        <function-ref name="led1Toggle" scoped="" ref="0x412abc30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x412abd10"/>
        <function-ref name="get" scoped="" ref="0x412abdf0"/>
        <function-ref name="led1Off" scoped="" ref="0x412abed0"/>
        <function-ref name="led2Off" scoped="" ref="0x412a92b0"/>
        <function-ref name="set" scoped="" ref="0x412a9010"/>
        <function-ref name="led0On" scoped="" ref="0x412a90f0"/>
        <function-ref name="led2On" scoped="" ref="0x412a91d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x412f7428" loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x412f7428"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x412f7600"/>
        <function-ref name="runTask" scoped="" ref="0x412f76e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x412ada80" loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x412ada80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x412adc58"/>
        <function-ref name="nextByte" scoped="" ref="0x412add38"/>
        <function-ref name="startSend" scoped="" ref="0x412ade18"/>
        <function-ref name="sendCompleted" scoped="" ref="0x412adef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x412aabd8" loc="68:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x412aabd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x412aadb0"/>
        <function-ref name="byteReceived" scoped="" ref="0x412aae90"/>
        <function-ref name="endPacket" scoped="" ref="0x412b0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x4134b970" loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x4134b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4134bb48"/>
        <function-ref name="runTask" scoped="" ref="0x4134bc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4134e4f8" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4134e4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404f9748"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4134e6e0"/>
        <function-ref name="getPayload" scoped="" ref="0x4134e7c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4134e8a0"/>
        <function-ref name="cancel" scoped="" ref="0x4134e980"/>
        <function-ref name="sendDone" scoped="" ref="0x4134ea60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x4134bda8" loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x4134bda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4134a010"/>
        <function-ref name="runTask" scoped="" ref="0x4134a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4134e138" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4134e138"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404f9748"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4134e320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x4134ec88" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x4134ec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404f9748"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x4134ee70"/>
        <function-ref name="offset" scoped="" ref="0x4134d010"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x4134d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4134dcc0" loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4134dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4134de98"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4134b010"/>
        <function-ref name="led1On" scoped="" ref="0x4134b0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4134b1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4134b2b0"/>
        <function-ref name="get" scoped="" ref="0x4134b390"/>
        <function-ref name="led1Off" scoped="" ref="0x4134b470"/>
        <function-ref name="led2On" scoped="" ref="0x4134b7f0"/>
        <function-ref name="set" scoped="" ref="0x4134b630"/>
        <function-ref name="led2Off" scoped="" ref="0x4134b550"/>
        <function-ref name="led0On" scoped="" ref="0x4134b710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x4134d708" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x4134d708"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x4134d8e0"/>
        <function-ref name="nextByte" scoped="" ref="0x4134d9c0"/>
        <function-ref name="startSend" scoped="" ref="0x4134daa0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x4134db80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x4134d230" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4134d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x4134d408"/>
        <function-ref name="byteReceived" scoped="" ref="0x4134d4e8"/>
        <function-ref name="endPacket" scoped="" ref="0x4134d5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x41383630" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x41383630"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41383808"/>
        <function-ref name="receivedByte" scoped="" ref="0x413838e8"/>
        <function-ref name="receive" scoped="" ref="0x413839c8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x41383aa8"/>
        <function-ref name="receiveDone" scoped="" ref="0x41383b88"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x41383c68"/>
        <function-ref name="sendDone" scoped="" ref="0x41383d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x41347238" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x41347238"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x41347410"/>
        <function-ref name="resetSend" scoped="" ref="0x413474f0"/>
        <function-ref name="dataReceived" scoped="" ref="0x413475d0"/>
        <function-ref name="resetReceive" scoped="" ref="0x413476b0"/>
        <function-ref name="putData" scoped="" ref="0x41347790"/>
        <function-ref name="putDone" scoped="" ref="0x41347870"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x41347950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41383eb8" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41383eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x413460c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x413461a0"/>
        <function-ref name="led1On" scoped="" ref="0x41346280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41346360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41346440"/>
        <function-ref name="get" scoped="" ref="0x41346520"/>
        <function-ref name="led1Off" scoped="" ref="0x41346600"/>
        <function-ref name="led2Off" scoped="" ref="0x41346980"/>
        <function-ref name="set" scoped="" ref="0x413466e0"/>
        <function-ref name="led0On" scoped="" ref="0x413467c0"/>
        <function-ref name="led2On" scoped="" ref="0x413468a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x4136f110" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x4136f110"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4136f2e8"/>
        <function-ref name="receive" scoped="" ref="0x4136f3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x413742f8" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x413742f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413744d0"/>
        <function-ref name="receivedByte" scoped="" ref="0x413745b0"/>
        <function-ref name="receive" scoped="" ref="0x41374690"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x41374770"/>
        <function-ref name="receiveDone" scoped="" ref="0x41374850"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x41374930"/>
        <function-ref name="sendDone" scoped="" ref="0x41374a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x41349e48" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41349e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41374050"/>
        <function-ref name="stop" scoped="" ref="0x41374130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x41370010" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x41370010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413701e8"/>
        <function-ref name="receive" scoped="" ref="0x413702c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x41370490" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x41370490"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41370668"/>
        <function-ref name="receivedByte" scoped="" ref="0x41370748"/>
        <function-ref name="receive" scoped="" ref="0x41370828"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x41370908"/>
        <function-ref name="receiveDone" scoped="" ref="0x413709e8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x41370ac8"/>
        <function-ref name="sendDone" scoped="" ref="0x41370ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x41370f08" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41370f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40462778"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4136e680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4136eb70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4136e8f8"/>
        <function-ref name="overflow" scoped="" ref="0x4136ede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4136fb10" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4136fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4136fce8"/>
        <function-ref name="stop" scoped="" ref="0x4136fdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x4136c7b0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x4136c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4136c988"/>
        <function-ref name="receive" scoped="" ref="0x4136ca68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x4136b510" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x4136b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4136b6e8"/>
        <function-ref name="stop" scoped="" ref="0x4136b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4136c060" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4136c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4136c238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x4136cbc8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x4136cbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4136cda0"/>
        <function-ref name="receivedByte" scoped="" ref="0x4136ce80"/>
        <function-ref name="receive" scoped="" ref="0x4136b010"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4136b0f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x4136b1d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4136b2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x4136b390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x41388a70" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41388a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40462778"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41387200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x413876f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41387478"/>
        <function-ref name="overflow" scoped="" ref="0x41387968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x4136bd80" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x4136bd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x41388010"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x413880f0"/>
        <function-ref name="rxDone" scoped="" ref="0x413881d0"/>
        <function-ref name="txDone" scoped="" ref="0x413882b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x41388390"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x41388470"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x41388550"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x41388630"/>
        <function-ref name="tx" scoped="" ref="0x41388710"/>
        <function-ref name="rx" scoped="" ref="0x413887f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4136c398" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4136c398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4136c570"/>
        <function-ref name="stop" scoped="" ref="0x4136c650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x4136b948" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x4136b948"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4136bb20"/>
        <function-ref name="stop" scoped="" ref="0x4136bc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x413b8088" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x413b8088"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x413b8260"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x413b8340"/>
        <function-ref name="rxDone" scoped="" ref="0x413b8420"/>
        <function-ref name="txDone" scoped="" ref="0x413b8500"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x413b85e0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x413b86c0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x413b87a0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x413b8880"/>
        <function-ref name="tx" scoped="" ref="0x413b8960"/>
        <function-ref name="rx" scoped="" ref="0x413b8a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x413b7760" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x413b7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x413b7938"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x413b7a18"/>
        <function-ref name="rxDone" scoped="" ref="0x413b7af8"/>
        <function-ref name="txDone" scoped="" ref="0x413b7bd8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x413b7cb8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x413b7d98"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x413b7e78"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x413b6010"/>
        <function-ref name="tx" scoped="" ref="0x413b60f0"/>
        <function-ref name="rx" scoped="" ref="0x413b61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x413b9b50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x413b9b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x413b9d28"/>
        <function-ref name="stop" scoped="" ref="0x413b9e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x413b8c98" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x413b8c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x413b8e70"/>
        <function-ref name="stop" scoped="" ref="0x413b7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x413b7268" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x413b7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x413b7440"/>
        <function-ref name="stop" scoped="" ref="0x413b7520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x413b9640" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x413b9640"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x413b9818"/>
        <function-ref name="stop" scoped="" ref="0x413b98f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x413b69f8" loc="114:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x413b69f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413b6bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x413b38c0" loc="117:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x413b38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x413b3a98"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x413b3b78"/>
        <function-ref name="rxDone" scoped="" ref="0x413b3c58"/>
        <function-ref name="txDone" scoped="" ref="0x413b3d38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x413b3e18"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x413b3ef8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x413b2010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x413b20f0"/>
        <function-ref name="tx" scoped="" ref="0x413b21d0"/>
        <function-ref name="rx" scoped="" ref="0x413b22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x413b24c0" loc="119:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x413b24c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413b2698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x413b0390" loc="122:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x413b0390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x413b0568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x413b0648"/>
        <function-ref name="rxDone" scoped="" ref="0x413b0728"/>
        <function-ref name="txDone" scoped="" ref="0x413b0808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x413b08e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x413b09c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x413b0aa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x413b0b88"/>
        <function-ref name="tx" scoped="" ref="0x413b0c68"/>
        <function-ref name="rx" scoped="" ref="0x413b0d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x413b33a8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x413b33a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x413b3580"/>
        <function-ref name="stop" scoped="" ref="0x413b3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x413b2910" loc="120:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x413b2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x413b2ae8"/>
        <function-ref name="stop" scoped="" ref="0x413b2bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x413b2e40" loc="121:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x413b2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x413b0050"/>
        <function-ref name="stop" scoped="" ref="0x413b0130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x413af010" loc="124:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x413af010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x413af1e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x413af2c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x413af3a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x413af488"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x413af568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x413af750" loc="125:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x413af750"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x413af928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x413b6e48" loc="115:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x413b6e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x413b3050"/>
        <function-ref name="stop" scoped="" ref="0x413b3130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41408620" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41408620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40462778"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41408d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41404288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41404010"/>
        <function-ref name="overflow" scoped="" ref="0x41404500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41401088" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41401088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TThree" ref="0x4048aad8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414017d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41401cc8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41401a50"/>
        <function-ref name="overflow" scoped="" ref="0x41400010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x413fbdb0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x413fbdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x413fa010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x413fa0f0"/>
        <function-ref name="getControlA" scoped="" ref="0x413fa1d0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x413fa2b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x413fa390"/>
        <function-ref name="setControlB" scoped="" ref="0x413fa470"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x413fa550"/>
        <function-ref name="getControlB" scoped="" ref="0x413fa630"/>
        <function-ref name="setControlC" scoped="" ref="0x413fa710"/>
        <function-ref name="setControlA" scoped="" ref="0x413fa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x413fab28" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x413fab28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x413f8640"/>
        <function-ref name="test" scoped="" ref="0x413f8150"/>
        <function-ref name="get" scoped="" ref="0x413f9200"/>
        <function-ref name="captured" scoped="" ref="0x413f9718"/>
        <function-ref name="reset" scoped="" ref="0x413f99b8"/>
        <function-ref name="isOn" scoped="" ref="0x413f83c8"/>
        <function-ref name="set" scoped="" ref="0x413f9478"/>
        <function-ref name="start" scoped="" ref="0x413f9c30"/>
        <function-ref name="stop" scoped="" ref="0x413f9ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x413f8d50" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x413f8d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x413f5300"/>
        <function-ref name="fired" scoped="" ref="0x413f68f8"/>
        <function-ref name="get" scoped="" ref="0x413f63e0"/>
        <function-ref name="reset" scoped="" ref="0x413f6b70"/>
        <function-ref name="isOn" scoped="" ref="0x413f5578"/>
        <function-ref name="set" scoped="" ref="0x413f6658"/>
        <function-ref name="start" scoped="" ref="0x413f6de8"/>
        <function-ref name="stop" scoped="" ref="0x413f5088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41400aa0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41400aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x413fb538"/>
        <function-ref name="test" scoped="" ref="0x413fb048"/>
        <function-ref name="get" scoped="" ref="0x413fd120"/>
        <function-ref name="setScale" scoped="" ref="0x413fb7b0"/>
        <function-ref name="getScale" scoped="" ref="0x413fba50"/>
        <function-ref name="reset" scoped="" ref="0x413fd8b0"/>
        <function-ref name="overflow" scoped="" ref="0x413fd638"/>
        <function-ref name="isOn" scoped="" ref="0x413fb2c0"/>
        <function-ref name="set" scoped="" ref="0x413fd398"/>
        <function-ref name="start" scoped="" ref="0x413fdb28"/>
        <function-ref name="stop" scoped="" ref="0x413fdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x413ef530" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x413ef530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x413ef708"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x413ef7e8"/>
        <function-ref name="getControlA" scoped="" ref="0x413ef8c8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x413ef9a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x413efa88"/>
        <function-ref name="setControlB" scoped="" ref="0x413efb68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x413efc48"/>
        <function-ref name="getControlB" scoped="" ref="0x413efd28"/>
        <function-ref name="setControlC" scoped="" ref="0x413efe08"/>
        <function-ref name="setControlA" scoped="" ref="0x413efee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x41431128" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x41431128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41430690"/>
        <function-ref name="fired" scoped="" ref="0x41431c88"/>
        <function-ref name="get" scoped="" ref="0x41431770"/>
        <function-ref name="reset" scoped="" ref="0x41431f00"/>
        <function-ref name="isOn" scoped="" ref="0x41430908"/>
        <function-ref name="set" scoped="" ref="0x414319e8"/>
        <function-ref name="start" scoped="" ref="0x414301a0"/>
        <function-ref name="stop" scoped="" ref="0x41430418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x413ee258" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x413ee258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x413edcc0"/>
        <function-ref name="test" scoped="" ref="0x413ed7d0"/>
        <function-ref name="get" scoped="" ref="0x413ee8a0"/>
        <function-ref name="captured" scoped="" ref="0x413eedb8"/>
        <function-ref name="reset" scoped="" ref="0x413ed068"/>
        <function-ref name="isOn" scoped="" ref="0x413eda48"/>
        <function-ref name="set" scoped="" ref="0x413eeb18"/>
        <function-ref name="start" scoped="" ref="0x413ed2e0"/>
        <function-ref name="stop" scoped="" ref="0x413ed558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x41430d20" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x41430d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4142d2c0"/>
        <function-ref name="fired" scoped="" ref="0x4142f8a8"/>
        <function-ref name="get" scoped="" ref="0x4142f390"/>
        <function-ref name="reset" scoped="" ref="0x4142fb20"/>
        <function-ref name="isOn" scoped="" ref="0x4142d538"/>
        <function-ref name="set" scoped="" ref="0x4142f608"/>
        <function-ref name="start" scoped="" ref="0x4142fd98"/>
        <function-ref name="stop" scoped="" ref="0x4142d048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x4142d950" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x4142d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4142cf08"/>
        <function-ref name="fired" scoped="" ref="0x4142c528"/>
        <function-ref name="get" scoped="" ref="0x4142c010"/>
        <function-ref name="reset" scoped="" ref="0x4142c7a0"/>
        <function-ref name="isOn" scoped="" ref="0x4142b1a0"/>
        <function-ref name="set" scoped="" ref="0x4142c288"/>
        <function-ref name="start" scoped="" ref="0x4142ca18"/>
        <function-ref name="stop" scoped="" ref="0x4142cc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x413f2230" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x413f2230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x413f0ca0"/>
        <function-ref name="test" scoped="" ref="0x413f07b0"/>
        <function-ref name="get" scoped="" ref="0x413f2878"/>
        <function-ref name="setScale" scoped="" ref="0x413f0f18"/>
        <function-ref name="getScale" scoped="" ref="0x413ef1d0"/>
        <function-ref name="reset" scoped="" ref="0x413f0048"/>
        <function-ref name="overflow" scoped="" ref="0x413f2d90"/>
        <function-ref name="isOn" scoped="" ref="0x413f0a28"/>
        <function-ref name="set" scoped="" ref="0x413f2af0"/>
        <function-ref name="start" scoped="" ref="0x413f02c0"/>
        <function-ref name="stop" scoped="" ref="0x413f0538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41475440" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41475440"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x404085d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x404085d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41475618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41475828" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41475828"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x414732c0"/>
        <function-ref name="test" scoped="" ref="0x41474d90"/>
        <function-ref name="get" scoped="" ref="0x41475e70"/>
        <function-ref name="setScale" scoped="" ref="0x41473538"/>
        <function-ref name="getScale" scoped="" ref="0x414737d8"/>
        <function-ref name="reset" scoped="" ref="0x41474628"/>
        <function-ref name="overflow" scoped="" ref="0x414743b0"/>
        <function-ref name="isOn" scoped="" ref="0x41473048"/>
        <function-ref name="set" scoped="" ref="0x41474110"/>
        <function-ref name="start" scoped="" ref="0x414748a0"/>
        <function-ref name="stop" scoped="" ref="0x41474b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41476a68" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41476a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TThree" ref="0x4048aad8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41471200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x414716f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41471478"/>
        <function-ref name="overflow" scoped="" ref="0x41471968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41471c48" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41471c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4146f6a0"/>
        <function-ref name="test" scoped="" ref="0x4146f1b0"/>
        <function-ref name="get" scoped="" ref="0x414702a8"/>
        <function-ref name="setScale" scoped="" ref="0x4146f918"/>
        <function-ref name="getScale" scoped="" ref="0x4146fbb8"/>
        <function-ref name="reset" scoped="" ref="0x41470a38"/>
        <function-ref name="overflow" scoped="" ref="0x414707c0"/>
        <function-ref name="isOn" scoped="" ref="0x4146f428"/>
        <function-ref name="set" scoped="" ref="0x41470520"/>
        <function-ref name="start" scoped="" ref="0x41470cb0"/>
        <function-ref name="stop" scoped="" ref="0x41470f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x4146ccd8" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x4146ccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TThree" ref="0x4048aad8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4146a478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4146a968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4146a6f0"/>
        <function-ref name="overflow" scoped="" ref="0x4146abe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41402a10" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41402a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404625b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40462778"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4146c200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4146c6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4146c478"/>
        <function-ref name="overflow" scoped="" ref="0x4146c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x41468728" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x41468728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x41468900"/>
        <function-ref name="offset" scoped="" ref="0x414689e0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x41468ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x41460e20" loc="39:../../Deluge/AutoStarterC.nc">
      <component-ref qname="AutoStarterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41460e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4145d010"/>
        <function-ref name="stopDone" scoped="" ref="0x4145d0f0"/>
        <function-ref name="start" scoped="" ref="0x4145d1d0"/>
        <function-ref name="stop" scoped="" ref="0x4145d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x4145de58" loc="41:../../Deluge/AutoStarterP.nc">
      <component-ref qname="AutoStarterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4145de58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4145a050"/>
        <function-ref name="stopDone" scoped="" ref="0x4145a130"/>
        <function-ref name="start" scoped="" ref="0x4145a210"/>
        <function-ref name="stop" scoped="" ref="0x4145a2f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x4145dac0" loc="40:../../Deluge/AutoStarterP.nc">
      <component-ref qname="AutoStarterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4145dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4145dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41b83200" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41b83200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41b833d8"/>
        <function-ref name="getPayload" scoped="" ref="0x41b834b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b83598"/>
        <function-ref name="cancel" scoped="" ref="0x41b83678"/>
        <function-ref name="sendDone" scoped="" ref="0x41b83758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41b83898" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41b83898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41b83a70"/>
        <function-ref name="payloadLength" scoped="" ref="0x41b83b50"/>
        <function-ref name="getPayload" scoped="" ref="0x41b83c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b83d10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41b83df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41b82010" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41b82010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41b821e8"/>
        <function-ref name="source" scoped="" ref="0x41b822c8"/>
        <function-ref name="address" scoped="" ref="0x41b823a8"/>
        <function-ref name="destination" scoped="" ref="0x41b82488"/>
        <function-ref name="setSource" scoped="" ref="0x41b82568"/>
        <function-ref name="setDestination" scoped="" ref="0x41b82648"/>
        <function-ref name="type" scoped="" ref="0x41b82728"/>
        <function-ref name="setType" scoped="" ref="0x41b82808"/>
        <function-ref name="isForMe" scoped="" ref="0x41b828e8"/>
        <function-ref name="setGroup" scoped="" ref="0x41b829c8"/>
        <function-ref name="localGroup" scoped="" ref="0x41b82aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41b82c08" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41b82c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41b82de0"/>
        <function-ref name="noAck" scoped="" ref="0x41b82ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x41b81010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41bc0e00" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41bc0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41bbd010"/>
        <function-ref name="getPayload" scoped="" ref="0x41bbd0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41bbd1d0"/>
        <function-ref name="cancel" scoped="" ref="0x41bbd2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x41bbd390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41bbd500" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41bbd500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41bbd6d8"/>
        <function-ref name="getPayload" scoped="" ref="0x41bbd7b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41bbd898"/>
        <function-ref name="cancel" scoped="" ref="0x41bbd978"/>
        <function-ref name="sendDone" scoped="" ref="0x41bbda58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41bbdb98" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41bbdb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41bbdd70"/>
        <function-ref name="source" scoped="" ref="0x41bbde50"/>
        <function-ref name="address" scoped="" ref="0x41bbc010"/>
        <function-ref name="destination" scoped="" ref="0x41bbc0f0"/>
        <function-ref name="setSource" scoped="" ref="0x41bbc1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x41bbc2b0"/>
        <function-ref name="type" scoped="" ref="0x41bbc390"/>
        <function-ref name="setType" scoped="" ref="0x41bbc470"/>
        <function-ref name="isForMe" scoped="" ref="0x41bbc550"/>
        <function-ref name="setGroup" scoped="" ref="0x41bbc630"/>
        <function-ref name="localGroup" scoped="" ref="0x41bbc710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41495448" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41495448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41495620"/>
        <function-ref name="getPayload" scoped="" ref="0x41495700"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414957e0"/>
        <function-ref name="cancel" scoped="" ref="0x414958c0"/>
        <function-ref name="sendDone" scoped="" ref="0x414959a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x414932f8" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x414932f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414934e0"/>
        <function-ref name="getPayload" scoped="" ref="0x414935c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414936a0"/>
        <function-ref name="cancel" scoped="" ref="0x41493780"/>
        <function-ref name="sendDone" scoped="" ref="0x41493860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41494b10" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41494b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41494cf8"/>
        <function-ref name="getPayload" scoped="" ref="0x41494dd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41494eb8"/>
        <function-ref name="cancel" scoped="" ref="0x41493010"/>
        <function-ref name="sendDone" scoped="" ref="0x414930f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x414925b0" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x414925b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41492788"/>
        <function-ref name="payloadLength" scoped="" ref="0x41492868"/>
        <function-ref name="getPayload" scoped="" ref="0x41492948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41492a28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41492b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x41492c88" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x41492c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41492e60"/>
        <function-ref name="runTask" scoped="" ref="0x41491010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x41491190" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x41491190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41491368"/>
        <function-ref name="runTask" scoped="" ref="0x41491448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x414939a0" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x414939a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41493b78"/>
        <function-ref name="source" scoped="" ref="0x41493c58"/>
        <function-ref name="address" scoped="" ref="0x41493d38"/>
        <function-ref name="destination" scoped="" ref="0x41493e18"/>
        <function-ref name="setSource" scoped="" ref="0x41493ef8"/>
        <function-ref name="setDestination" scoped="" ref="0x41492010"/>
        <function-ref name="type" scoped="" ref="0x414920f0"/>
        <function-ref name="setType" scoped="" ref="0x414921d0"/>
        <function-ref name="isForMe" scoped="" ref="0x414922b0"/>
        <function-ref name="setGroup" scoped="" ref="0x41492390"/>
        <function-ref name="localGroup" scoped="" ref="0x41492470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41b80348" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41b80348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41b80520"/>
        <function-ref name="payloadLength" scoped="" ref="0x41b80600"/>
        <function-ref name="getPayload" scoped="" ref="0x41b806e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b807c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41b808a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41b80030" loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41b80030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41b80208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41b809e0" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41b809e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41b80bb8"/>
        <function-ref name="source" scoped="" ref="0x41b80c98"/>
        <function-ref name="address" scoped="" ref="0x41b80d78"/>
        <function-ref name="destination" scoped="" ref="0x41b80e58"/>
        <function-ref name="setSource" scoped="" ref="0x41b7f010"/>
        <function-ref name="setDestination" scoped="" ref="0x41b7f0f0"/>
        <function-ref name="type" scoped="" ref="0x41b7f1d0"/>
        <function-ref name="setType" scoped="" ref="0x41b7f2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x41b7f390"/>
        <function-ref name="setGroup" scoped="" ref="0x41b7f470"/>
        <function-ref name="localGroup" scoped="" ref="0x41b7f550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeoutTimer" ref="0x41b7b7d8" loc="48:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeoutTimer" scoped="" ref="0x41b7b7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41b79330"/>
        <function-ref name="fired" scoped="" ref="0x41b7a570"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41b7ac78"/>
        <function-ref name="isOneShot" scoped="" ref="0x41b7aa20"/>
        <function-ref name="getdt" scoped="" ref="0x41b797e0"/>
        <function-ref name="gett0" scoped="" ref="0x41b79588"/>
        <function-ref name="isRunning" scoped="" ref="0x41b7a7c8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41b7be00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41b79010"/>
        <function-ref name="startOneShot" scoped="" ref="0x41b7a098"/>
        <function-ref name="stop" scoped="" ref="0x41b7a318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMSender" ref="0x41b7dce0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMSender" scoped="" ref="0x41b7dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41b7deb8"/>
        <function-ref name="getPayload" scoped="" ref="0x41b7b010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41b7b0f0"/>
        <function-ref name="cancel" scoped="" ref="0x41b7b1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x41b7b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockRead" ref="0x41b7e2e0" loc="42:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41b7e2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41b7e4c8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41b7e5a8"/>
        <function-ref name="computeCrc" scoped="" ref="0x41b7e688"/>
        <function-ref name="getSize" scoped="" ref="0x41b7e768"/>
        <function-ref name="readDone" scoped="" ref="0x41b7e848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockWrite" ref="0x41b7ea20" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41b7ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41b7ec08"/>
        <function-ref name="writeDone" scoped="" ref="0x41b7ece8"/>
        <function-ref name="erase" scoped="" ref="0x41b7edc8"/>
        <function-ref name="eraseDone" scoped="" ref="0x41b7eea8"/>
        <function-ref name="write" scoped="" ref="0x41b7d010"/>
        <function-ref name="sync" scoped="" ref="0x41b7d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMReceiver" ref="0x41b7b410" loc="47:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMReceiver" scoped="" ref="0x41b7b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41b7b5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41b799f0" loc="49:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41b799f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41b79bc8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41b79ca8"/>
        <function-ref name="led1On" scoped="" ref="0x41b79d88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41b79e68"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41b78010"/>
        <function-ref name="get" scoped="" ref="0x41b780f0"/>
        <function-ref name="led1Off" scoped="" ref="0x41b781d0"/>
        <function-ref name="led0On" scoped="" ref="0x41b78550"/>
        <function-ref name="set" scoped="" ref="0x41b78390"/>
        <function-ref name="led2On" scoped="" ref="0x41b782b0"/>
        <function-ref name="led2Off" scoped="" ref="0x41b78470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x41b7d230" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b7d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b7d408"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b7d4e8"/>
        <function-ref name="request" scoped="" ref="0x41b7d5c8"/>
        <function-ref name="granted" scoped="" ref="0x41b7d6a8"/>
        <function-ref name="isOwner" scoped="" ref="0x41b7d788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x41b7d8c8" loc="45:/opt/tinyos-2.1.2/tos/lib/net/Deluge/FlashVolumeManager/FlashVolumeManagerP.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.FlashVolumeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41b7d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41b7daa0"/>
        <function-ref name="userId" scoped="" ref="0x41b7db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41b779d0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.TimeoutTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41b779d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41b744c8"/>
        <function-ref name="fired" scoped="" ref="0x41b76768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41b76e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x41b76c18"/>
        <function-ref name="getdt" scoped="" ref="0x41b74978"/>
        <function-ref name="gett0" scoped="" ref="0x41b74720"/>
        <function-ref name="isRunning" scoped="" ref="0x41b769c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41b76010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41b741a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x41b76290"/>
        <function-ref name="stop" scoped="" ref="0x41b76510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b73640" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b73640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b73818"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b738f8"/>
        <function-ref name="request" scoped="" ref="0x41b739d8"/>
        <function-ref name="granted" scoped="" ref="0x41b73ab8"/>
        <function-ref name="isOwner" scoped="" ref="0x41b73b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41b72688" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41b72688"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41b72860"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41b72940"/>
        <function-ref name="computeCrc" scoped="" ref="0x41b72a20"/>
        <function-ref name="getSize" scoped="" ref="0x41b72b00"/>
        <function-ref name="readDone" scoped="" ref="0x41b72be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b72d20" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b72d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b72ef8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b71010"/>
        <function-ref name="request" scoped="" ref="0x41b710f0"/>
        <function-ref name="granted" scoped="" ref="0x41b711d0"/>
        <function-ref name="isOwner" scoped="" ref="0x41b712b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41c38b30" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41c38b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c38d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41c376d8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41c376d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41c378b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41c37990"/>
        <function-ref name="request" scoped="" ref="0x41c37a70"/>
        <function-ref name="granted" scoped="" ref="0x41c37b50"/>
        <function-ref name="isOwner" scoped="" ref="0x41c37c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41b70010" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41b70010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41b701e8"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41b702c8"/>
        <function-ref name="computeCrc" scoped="" ref="0x41b703a8"/>
        <function-ref name="getSize" scoped="" ref="0x41b70488"/>
        <function-ref name="readDone" scoped="" ref="0x41b70568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41b706a8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41b706a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b70880"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41b70960"/>
        <function-ref name="request" scoped="" ref="0x41b70a40"/>
        <function-ref name="granted" scoped="" ref="0x41b70b20"/>
        <function-ref name="isOwner" scoped="" ref="0x41b70c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41c31030" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41c31030"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c31208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41c31b40" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41c31b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41c31d18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41c31df8"/>
        <function-ref name="request" scoped="" ref="0x41c31ed8"/>
        <function-ref name="granted" scoped="" ref="0x41c30010"/>
        <function-ref name="isOwner" scoped="" ref="0x41c300f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41b6f8b8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41b6f8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41b6fa90"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41b6fb70"/>
        <function-ref name="computeCrc" scoped="" ref="0x41b6fc50"/>
        <function-ref name="getSize" scoped="" ref="0x41b6fd30"/>
        <function-ref name="readDone" scoped="" ref="0x41b6fe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41bd2010" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41bd2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41bd21e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41bd22c8"/>
        <function-ref name="request" scoped="" ref="0x41bd23a8"/>
        <function-ref name="granted" scoped="" ref="0x41bd2488"/>
        <function-ref name="isOwner" scoped="" ref="0x41bd2568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41c2c4c0" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41c2c4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c2c698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41c2b010" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41c2b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41c2b1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41c2b2c8"/>
        <function-ref name="request" scoped="" ref="0x41c2b3a8"/>
        <function-ref name="granted" scoped="" ref="0x41c2b488"/>
        <function-ref name="isOwner" scoped="" ref="0x41c2b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockRead" ref="0x41bd1230" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockRead" scoped="" ref="0x41bd1230"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockRead"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41bd1408"/>
        <function-ref name="computeCrcDone" scoped="" ref="0x41bd14e8"/>
        <function-ref name="computeCrc" scoped="" ref="0x41bd15c8"/>
        <function-ref name="getSize" scoped="" ref="0x41bd16a8"/>
        <function-ref name="readDone" scoped="" ref="0x41bd1788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41bd18c8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockReaderC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41bd18c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41bd1aa0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41bd1b80"/>
        <function-ref name="request" scoped="" ref="0x41bd1c60"/>
        <function-ref name="granted" scoped="" ref="0x41bd1d40"/>
        <function-ref name="isOwner" scoped="" ref="0x41bd1e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41c27970" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41c27970"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c27b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41c254a8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockReaderDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41c254a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41c25680"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41c25760"/>
        <function-ref name="request" scoped="" ref="0x41c25840"/>
        <function-ref name="granted" scoped="" ref="0x41c25920"/>
        <function-ref name="isOwner" scoped="" ref="0x41c25a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41bd0b88" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41bd0b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41bd0d60"/>
        <function-ref name="writeDone" scoped="" ref="0x41bd0e40"/>
        <function-ref name="erase" scoped="" ref="0x41bd0f20"/>
        <function-ref name="eraseDone" scoped="" ref="0x41bcf018"/>
        <function-ref name="write" scoped="" ref="0x41bcf0f8"/>
        <function-ref name="sync" scoped="" ref="0x41bcf1d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41bcf318" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41bcf318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41bcf4f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41bcf5d0"/>
        <function-ref name="request" scoped="" ref="0x41bcf6b0"/>
        <function-ref name="granted" scoped="" ref="0x41bcf790"/>
        <function-ref name="isOwner" scoped="" ref="0x41bcf870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41c22dc8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41c22dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c20010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41c20948" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterGoldenImage.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41c20948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41c20b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41c20c00"/>
        <function-ref name="request" scoped="" ref="0x41c20ce0"/>
        <function-ref name="granted" scoped="" ref="0x41c20dc0"/>
        <function-ref name="isOwner" scoped="" ref="0x41c20ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41bce568" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41bce568"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41bce740"/>
        <function-ref name="writeDone" scoped="" ref="0x41bce820"/>
        <function-ref name="erase" scoped="" ref="0x41bce900"/>
        <function-ref name="eraseDone" scoped="" ref="0x41bce9e0"/>
        <function-ref name="write" scoped="" ref="0x41bceac0"/>
        <function-ref name="sync" scoped="" ref="0x41bceba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41bcece0" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41bcece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41bceeb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41bcc010"/>
        <function-ref name="request" scoped="" ref="0x41bcc0f0"/>
        <function-ref name="granted" scoped="" ref="0x41bcc1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x41bcc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41c1b3a8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41c1b3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c1b580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41c1beb8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge1.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41c1beb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41c190c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41c191a0"/>
        <function-ref name="request" scoped="" ref="0x41c19280"/>
        <function-ref name="granted" scoped="" ref="0x41c19360"/>
        <function-ref name="isOwner" scoped="" ref="0x41c19440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41bcb010" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41bcb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41bcb1e8"/>
        <function-ref name="writeDone" scoped="" ref="0x41bcb2c8"/>
        <function-ref name="erase" scoped="" ref="0x41bcb3a8"/>
        <function-ref name="eraseDone" scoped="" ref="0x41bcb488"/>
        <function-ref name="write" scoped="" ref="0x41bcb568"/>
        <function-ref name="sync" scoped="" ref="0x41bcb648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41bcb788" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41bcb788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41bcb960"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41bcba40"/>
        <function-ref name="request" scoped="" ref="0x41bcbb20"/>
        <function-ref name="granted" scoped="" ref="0x41bcbc00"/>
        <function-ref name="isOwner" scoped="" ref="0x41bcbce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41c15970" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41c15970"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c15b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41c144a8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge2.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41c144a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41c14680"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41c14760"/>
        <function-ref name="request" scoped="" ref="0x41c14840"/>
        <function-ref name="granted" scoped="" ref="0x41c14920"/>
        <function-ref name="isOwner" scoped="" ref="0x41c14a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockWrite" ref="0x41bcaa78" loc="43:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockWrite" scoped="" ref="0x41bcaa78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="syncDone" scoped="" ref="0x41bcac50"/>
        <function-ref name="writeDone" scoped="" ref="0x41bcad30"/>
        <function-ref name="erase" scoped="" ref="0x41bcae10"/>
        <function-ref name="eraseDone" scoped="" ref="0x41bcaef0"/>
        <function-ref name="write" scoped="" ref="0x41bc9010"/>
        <function-ref name="sync" scoped="" ref="0x41bc90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41bc9230" loc="44:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockWriterC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41bc9230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41bc9408"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41bc94e8"/>
        <function-ref name="request" scoped="" ref="0x41bc95c8"/>
        <function-ref name="granted" scoped="" ref="0x41bc96a8"/>
        <function-ref name="isOwner" scoped="" ref="0x41bc9788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VolumeId" ref="0x41c11ec0" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeIdC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.VolumeIdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeId" scoped="" ref="0x41c11ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="VolumeId"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c0f0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41c0f9f8" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.FlashVolumeManagerC.BlockWriterDeluge3.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41c0f9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41c0fbd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41c0fcb0"/>
        <function-ref name="request" scoped="" ref="0x41c0fd90"/>
        <function-ref name="granted" scoped="" ref="0x41c0fe70"/>
        <function-ref name="isOwner" scoped="" ref="0x41c0e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationUpdate" ref="0x41515538" loc="41:../../Deluge/DelugeManagerC.nc">
      <component-ref qname="DelugeC.DelugeManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x41515538"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x4067c200"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x4067ca70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x41515b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41c0a0a0" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41c0a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41c0a278"/>
        <function-ref name="getPayload" scoped="" ref="0x41c0a358"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41c0a438"/>
        <function-ref name="cancel" scoped="" ref="0x41c0a518"/>
        <function-ref name="sendDone" scoped="" ref="0x41c0a5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41c0a738" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41c0a738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41c0a910"/>
        <function-ref name="payloadLength" scoped="" ref="0x41c0a9f0"/>
        <function-ref name="getPayload" scoped="" ref="0x41c0aad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41c0abb0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41c0ac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41c0add0" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41c0add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41c09010"/>
        <function-ref name="source" scoped="" ref="0x41c090f0"/>
        <function-ref name="address" scoped="" ref="0x41c091d0"/>
        <function-ref name="destination" scoped="" ref="0x41c092b0"/>
        <function-ref name="setSource" scoped="" ref="0x41c09390"/>
        <function-ref name="setDestination" scoped="" ref="0x41c09470"/>
        <function-ref name="type" scoped="" ref="0x41c09550"/>
        <function-ref name="setType" scoped="" ref="0x41c09630"/>
        <function-ref name="isForMe" scoped="" ref="0x41c09710"/>
        <function-ref name="setGroup" scoped="" ref="0x41c097f0"/>
        <function-ref name="localGroup" scoped="" ref="0x41c098d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41c09a30" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41c09a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41c09c08"/>
        <function-ref name="noAck" scoped="" ref="0x41c09ce8"/>
        <function-ref name="wasAcked" scoped="" ref="0x41c09dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41c58878" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41c58878"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41c58a50"/>
        <function-ref name="getPayload" scoped="" ref="0x41c58b30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41c58c10"/>
        <function-ref name="cancel" scoped="" ref="0x41c58cf0"/>
        <function-ref name="sendDone" scoped="" ref="0x41c58dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41c55010" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41c55010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41c551e8"/>
        <function-ref name="getPayload" scoped="" ref="0x41c552c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41c553a8"/>
        <function-ref name="cancel" scoped="" ref="0x41c55488"/>
        <function-ref name="sendDone" scoped="" ref="0x41c55568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41c556a8" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41c556a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41c55880"/>
        <function-ref name="source" scoped="" ref="0x41c55960"/>
        <function-ref name="address" scoped="" ref="0x41c55a40"/>
        <function-ref name="destination" scoped="" ref="0x41c55b20"/>
        <function-ref name="setSource" scoped="" ref="0x41c55c00"/>
        <function-ref name="setDestination" scoped="" ref="0x41c55ce0"/>
        <function-ref name="type" scoped="" ref="0x41c55dc0"/>
        <function-ref name="setType" scoped="" ref="0x41c55ea0"/>
        <function-ref name="isForMe" scoped="" ref="0x41c54010"/>
        <function-ref name="setGroup" scoped="" ref="0x41c540f0"/>
        <function-ref name="localGroup" scoped="" ref="0x41c541d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41c07150" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41c07150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41c07328"/>
        <function-ref name="payloadLength" scoped="" ref="0x41c07408"/>
        <function-ref name="getPayload" scoped="" ref="0x41c074e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41c075c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41c076a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41c08de8" loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41c08de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41c07010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41c077e8" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41c077e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41c079c0"/>
        <function-ref name="source" scoped="" ref="0x41c07aa0"/>
        <function-ref name="address" scoped="" ref="0x41c07b80"/>
        <function-ref name="destination" scoped="" ref="0x41c07c60"/>
        <function-ref name="setSource" scoped="" ref="0x41c07d40"/>
        <function-ref name="setDestination" scoped="" ref="0x41c07e20"/>
        <function-ref name="type" scoped="" ref="0x41c07f00"/>
        <function-ref name="setType" scoped="" ref="0x41c06010"/>
        <function-ref name="isForMe" scoped="" ref="0x41c060f0"/>
        <function-ref name="setGroup" scoped="" ref="0x41c061d0"/>
        <function-ref name="localGroup" scoped="" ref="0x41c062b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41c6c010" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41c6c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41c6ab00"/>
        <function-ref name="fired" scoped="" ref="0x41c6cd90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41c6a4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41c6a268"/>
        <function-ref name="getdt" scoped="" ref="0x41c69010"/>
        <function-ref name="gett0" scoped="" ref="0x41c6ad58"/>
        <function-ref name="isRunning" scoped="" ref="0x41c6a010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41c6c638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41c6a7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x41c6c8b8"/>
        <function-ref name="stop" scoped="" ref="0x41c6cb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NetProg" ref="0x41c64478" loc="46:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NetProg" scoped="" ref="0x41c64478"/></type-interface>
      <instance>
        <interfacedef-ref qname="NetProg"/>
      </instance>
      <interface-functions>
        <function-ref name="programImageAndReboot" scoped="" ref="0x41c64650"/>
        <function-ref name="reboot" scoped="" ref="0x41c64730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x41c62708" loc="52:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41c62708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41c628e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41c629c0"/>
        <function-ref name="request" scoped="" ref="0x41c62aa0"/>
        <function-ref name="granted" scoped="" ref="0x41c62b80"/>
        <function-ref name="isOwner" scoped="" ref="0x41c62c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x41c67200" loc="45:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0x41c67200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41c66d58"/>
        <function-ref name="fired" scoped="" ref="0x41c66010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41c66718"/>
        <function-ref name="isOneShot" scoped="" ref="0x41c664c0"/>
        <function-ref name="getdt" scoped="" ref="0x41c64268"/>
        <function-ref name="gett0" scoped="" ref="0x41c64010"/>
        <function-ref name="isRunning" scoped="" ref="0x41c66268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41c67828"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41c66a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x41c67aa8"/>
        <function-ref name="stop" scoped="" ref="0x41c67d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMSender" ref="0x41c686a8" loc="43:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMSender" scoped="" ref="0x41c686a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41c68880"/>
        <function-ref name="getPayload" scoped="" ref="0x41c68960"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41c68a40"/>
        <function-ref name="cancel" scoped="" ref="0x41c68b20"/>
        <function-ref name="sendDone" scoped="" ref="0x41c68c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StorageMap" ref="0x41c63568" loc="48:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StorageMap" scoped="" ref="0x41c63568"/></type-interface>
      <instance>
        <interfacedef-ref qname="StorageMap"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getPhysicalAddress" scoped="" ref="0x41c63750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationUpdate" ref="0x41c69d00" loc="42:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x41c69d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><nx_struct-ref name="DelugeCmd" ref="0x4067c200"/>
            <typename><typedef-ref name="DelugeCmd" ref="0x4067ca70"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x41c68350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialAMReceiver" ref="0x41c68d60" loc="44:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialAMReceiver" scoped="" ref="0x41c68d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41c67010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41c64870" loc="47:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41c64870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41c64a48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41c64b28"/>
        <function-ref name="led1On" scoped="" ref="0x41c64c08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41c64ce8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41c64dc8"/>
        <function-ref name="get" scoped="" ref="0x41c64ea8"/>
        <function-ref name="led1Off" scoped="" ref="0x41c63010"/>
        <function-ref name="led0On" scoped="" ref="0x41c63390"/>
        <function-ref name="set" scoped="" ref="0x41c631d0"/>
        <function-ref name="led2On" scoped="" ref="0x41c630f0"/>
        <function-ref name="led2Off" scoped="" ref="0x41c632b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeMetadata" ref="0x41c63890" loc="49:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x41c63890"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41c63a68"/>
        <function-ref name="readDone" scoped="" ref="0x41c63b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelugeVolumeManager" ref="0x41c62310" loc="51:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41c62310"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x41c624e8"/>
        <function-ref name="eraseDone" scoped="" ref="0x41c625c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ObjectTransfer" ref="0x41c63c88" loc="50:../../Deluge/DelugeManagerP.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ObjectTransfer" scoped="" ref="0x41c63c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ObjectTransfer"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41c63e60"/>
        <function-ref name="receiveDone" scoped="" ref="0x41c62010"/>
        <function-ref name="publish" scoped="" ref="0x41c620f0"/>
        <function-ref name="stop" scoped="" ref="0x41c621d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeMetadata" ref="0x41c604e8" loc="39:../../Deluge/DelugeMetadataClientC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeMetadataClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeMetadata" scoped="" ref="0x41c604e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41c606c0"/>
        <function-ref name="readDone" scoped="" ref="0x41c607a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DelugeVolumeManager" ref="0x41c5f090" loc="39:../../Deluge/DelugeVolumeManagerClientC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.DelugeVolumeManagerClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelugeVolumeManager" scoped="" ref="0x41c5f090"/></type-interface>
      <instance>
        <interfacedef-ref qname="DelugeVolumeManager"/>
      </instance>
      <interface-functions>
        <function-ref name="erase" scoped="" ref="0x41c5f268"/>
        <function-ref name="eraseDone" scoped="" ref="0x41c5f348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41c5fc08" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/BlockStorageLockClientC.nc">
      <component-ref qname="DelugeC.DelugeManagerC.BlockStorageLockClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41c5fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41c5fde0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41c5fec0"/>
        <function-ref name="request" scoped="" ref="0x41c5e010"/>
        <function-ref name="granted" scoped="" ref="0x41c5e0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x41c5e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41510bc0" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41510bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41510d98"/>
        <function-ref name="getPayload" scoped="" ref="0x41510e78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4150f010"/>
        <function-ref name="cancel" scoped="" ref="0x4150f0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4150f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4150f310" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4150f310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4150f4e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4150f5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4150f6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4150f788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4150f868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4150f9a8" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4150f9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4150fb80"/>
        <function-ref name="source" scoped="" ref="0x4150fc60"/>
        <function-ref name="address" scoped="" ref="0x4150fd40"/>
        <function-ref name="destination" scoped="" ref="0x4150fe20"/>
        <function-ref name="setSource" scoped="" ref="0x4150ff00"/>
        <function-ref name="setDestination" scoped="" ref="0x4150e010"/>
        <function-ref name="type" scoped="" ref="0x4150e0f0"/>
        <function-ref name="setType" scoped="" ref="0x4150e1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x4150e2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x4150e390"/>
        <function-ref name="localGroup" scoped="" ref="0x4150e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4150e5d0" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4150e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4150e7a8"/>
        <function-ref name="noAck" scoped="" ref="0x4150e888"/>
        <function-ref name="wasAcked" scoped="" ref="0x4150e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41c9a768" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41c9a768"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41c9a940"/>
        <function-ref name="getPayload" scoped="" ref="0x41c9aa20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41c9ab00"/>
        <function-ref name="cancel" scoped="" ref="0x41c9abe0"/>
        <function-ref name="sendDone" scoped="" ref="0x41c9acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41c9ae00" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41c9ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41c98010"/>
        <function-ref name="payloadLength" scoped="" ref="0x41c980f0"/>
        <function-ref name="getPayload" scoped="" ref="0x41c981d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41c982b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41c98390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41c984d0" loc="8:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41c984d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41c986a8"/>
        <function-ref name="source" scoped="" ref="0x41c98788"/>
        <function-ref name="address" scoped="" ref="0x41c98868"/>
        <function-ref name="destination" scoped="" ref="0x41c98948"/>
        <function-ref name="setSource" scoped="" ref="0x41c98a28"/>
        <function-ref name="setDestination" scoped="" ref="0x41c98b08"/>
        <function-ref name="type" scoped="" ref="0x41c98be8"/>
        <function-ref name="setType" scoped="" ref="0x41c98cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x41c98da8"/>
        <function-ref name="setGroup" scoped="" ref="0x41c98e88"/>
        <function-ref name="localGroup" scoped="" ref="0x41c97010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41c97170" loc="9:/opt/tinyos-2.1.2/tos/system/LplAMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41c97170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41c97348"/>
        <function-ref name="noAck" scoped="" ref="0x41c97428"/>
        <function-ref name="wasAcked" scoped="" ref="0x41c97508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41c92200" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41c92200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41c923d8"/>
        <function-ref name="getPayload" scoped="" ref="0x41c924b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41c92598"/>
        <function-ref name="cancel" scoped="" ref="0x41c92678"/>
        <function-ref name="sendDone" scoped="" ref="0x41c92758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41c92898" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41c92898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41c92a70"/>
        <function-ref name="payloadLength" scoped="" ref="0x41c92b50"/>
        <function-ref name="getPayload" scoped="" ref="0x41c92c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41c92d10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41c92df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41c91010" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41c91010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41c911e8"/>
        <function-ref name="source" scoped="" ref="0x41c912c8"/>
        <function-ref name="address" scoped="" ref="0x41c913a8"/>
        <function-ref name="destination" scoped="" ref="0x41c91488"/>
        <function-ref name="setSource" scoped="" ref="0x41c91568"/>
        <function-ref name="setDestination" scoped="" ref="0x41c91648"/>
        <function-ref name="type" scoped="" ref="0x41c91728"/>
        <function-ref name="setType" scoped="" ref="0x41c91808"/>
        <function-ref name="isForMe" scoped="" ref="0x41c918e8"/>
        <function-ref name="setGroup" scoped="" ref="0x41c919c8"/>
        <function-ref name="localGroup" scoped="" ref="0x41c91aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41c91c08" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41c91c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41c91de0"/>
        <function-ref name="noAck" scoped="" ref="0x41c91ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x41c8f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41c87420" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41c87420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41c875f8"/>
        <function-ref name="getPayload" scoped="" ref="0x41c876d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41c877b8"/>
        <function-ref name="cancel" scoped="" ref="0x41c87898"/>
        <function-ref name="sendDone" scoped="" ref="0x41c87978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41c87ae8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41c87ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41c87cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x41c87da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41c87e80"/>
        <function-ref name="cancel" scoped="" ref="0x41c86010"/>
        <function-ref name="sendDone" scoped="" ref="0x41c860f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41c86230" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.DirectAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41c86230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41c86408"/>
        <function-ref name="source" scoped="" ref="0x41c864e8"/>
        <function-ref name="address" scoped="" ref="0x41c865c8"/>
        <function-ref name="destination" scoped="" ref="0x41c866a8"/>
        <function-ref name="setSource" scoped="" ref="0x41c86788"/>
        <function-ref name="setDestination" scoped="" ref="0x41c86868"/>
        <function-ref name="type" scoped="" ref="0x41c86948"/>
        <function-ref name="setType" scoped="" ref="0x41c86a28"/>
        <function-ref name="isForMe" scoped="" ref="0x41c86b08"/>
        <function-ref name="setGroup" scoped="" ref="0x41c86be8"/>
        <function-ref name="localGroup" scoped="" ref="0x41c86cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x41c8e580" loc="5:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x41c8e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41c8e758"/>
        <function-ref name="getPayload" scoped="" ref="0x41c8e838"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41c8e918"/>
        <function-ref name="cancel" scoped="" ref="0x41c8e9f8"/>
        <function-ref name="sendDone" scoped="" ref="0x41c8ead8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x41c8d230" loc="7:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41c8d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x41c8d408"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x41c8d4e8"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x41c8d5c8"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x41c8d6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41c8fe88" loc="3:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41c8fe88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41c8e070"/>
        <function-ref name="getPayload" scoped="" ref="0x41c8e150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41c8e230"/>
        <function-ref name="cancel" scoped="" ref="0x41c8e310"/>
        <function-ref name="sendDone" scoped="" ref="0x41c8e3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lpl" ref="0x41c8ec38" loc="6:/opt/tinyos-2.1.2/tos/system/LplAMSenderP.nc">
      <component-ref qname="ReprogrammerBaseC.RadioSenderC.SenderC.LplAMSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lpl" scoped="" ref="0x41c8ec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x41c8ee10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41c8eef0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x41c8d010"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x41c8d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x415553b8" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ReprogrammerBaseC.ReplyReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x415553b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41555590"/>
        <function-ref name="payloadLength" scoped="" ref="0x41555670"/>
        <function-ref name="getPayload" scoped="" ref="0x41555750"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41555830"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41555910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x415550a0" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ReprogrammerBaseC.ReplyReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x415550a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41555278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41555a50" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="ReprogrammerBaseC.ReplyReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41555a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41555c28"/>
        <function-ref name="source" scoped="" ref="0x41555d08"/>
        <function-ref name="address" scoped="" ref="0x41555de8"/>
        <function-ref name="destination" scoped="" ref="0x41555ec8"/>
        <function-ref name="setSource" scoped="" ref="0x41554010"/>
        <function-ref name="setDestination" scoped="" ref="0x415540f0"/>
        <function-ref name="type" scoped="" ref="0x415541d0"/>
        <function-ref name="setType" scoped="" ref="0x415542b0"/>
        <function-ref name="isForMe" scoped="" ref="0x41554390"/>
        <function-ref name="setGroup" scoped="" ref="0x41554470"/>
        <function-ref name="localGroup" scoped="" ref="0x41554550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x415536f0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="ReprogrammerBaseC.RetxTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x415536f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41551248"/>
        <function-ref name="fired" scoped="" ref="0x415524e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41552bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41552998"/>
        <function-ref name="getdt" scoped="" ref="0x415516f8"/>
        <function-ref name="gett0" scoped="" ref="0x415514a0"/>
        <function-ref name="isRunning" scoped="" ref="0x41552740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41553d18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41552f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x41552010"/>
        <function-ref name="stop" scoped="" ref="0x41552290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41550628" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="ReprogrammerBaseC.ReplyTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41550628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4045c9e8"/>
            <typename><typedef-ref name="TMilli" ref="0x4045cbb0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4154d130"/>
        <function-ref name="fired" scoped="" ref="0x4154e3c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4154ead0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4154e878"/>
        <function-ref name="getdt" scoped="" ref="0x4154d5e0"/>
        <function-ref name="gett0" scoped="" ref="0x4154d388"/>
        <function-ref name="isRunning" scoped="" ref="0x4154e620"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41550c50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4154edf0"/>
        <function-ref name="startOneShot" scoped="" ref="0x41550ed0"/>
        <function-ref name="stop" scoped="" ref="0x4154e170"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40510e78" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40510e78"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40518630" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4051b438" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40519610" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405192c8" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x405194b0" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x4051bd88" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40517010" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40518a78" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4051b8c8" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x405124f0" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40512398" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40518010" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40519cb0" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40519e98" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40512b88" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40512a30" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4051b070" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x404b99b0" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SystemLowPowerListening" loc="1:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
      <function command="" provided="0" name="setDefaultRemoteWakeupInterval" ref="0x4051dc00" loc="3:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x4051daa8" loc="3:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRemoteWakeupInterval" ref="0x40522720" loc="6:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDelayAfterReceive" ref="0x40522b98" loc="7:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDelayAfterReceive" ref="0x40522248" loc="4:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x405220f0" loc="4:/opt/tinyos-2.1.2/tos/interfaces/SystemLowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40527310" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40527310"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x405277f0" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x404c98d8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404c9780" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4050e2e0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4050e188" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40516370" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40516010" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405161f0" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4050d9a8" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4050d010" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4050ec00" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4050ede0" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x4051cdb8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x4051c910" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x404211a8" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x404216c0" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40523898" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40523898"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40523ee8" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40523898"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40523d90" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40523898"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x40503570" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40503010" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40503228" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40503408" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40509190" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4050ad98" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40509010" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4050a838" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4050c220" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4050c0c8" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4050cf10" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4050cbb8" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4050cdb0" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x404c5dd0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
              <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404c5888" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x404c5a68" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404c5c48" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x40525648" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40525168" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40525010" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40525b48" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x404c31c8" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x404c3610" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x404c3a90" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x404cb318" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x404ca038" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404ca4e0" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x404c3eb8" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x404cac20" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x404caac8" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x404c4d90" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x404cb798" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x404cbbc0" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x40564bd0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x40563010" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40564440" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x405637e0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40564800" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x405633e8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4055cce8" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x40564090" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4055d560" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x406534e8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x40653390" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x40646a78" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x40655168" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40655010" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x40655830" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x406556d8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x40655d88" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x401109c0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x4041f2e8" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40110e00" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x4048d6d0" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x404a2bb0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40449d78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x4047dea8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockRead" loc="42:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
      <function command="" provided="0" name="read" ref="0x40693178" loc="56:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
          <short>&#10; Initiate a read operation within a given volume.</short>
          <long>&#10; Initiate a read operation within a given volume. On SUCCESS, the&#10; &#60;code>readDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#10; @param addr starting address to begin reading.&#10; @param 'void* COUNT(len) buf' buffer to place read data.&#10; @param len number of bytes to read.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068fa38"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068fcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40694b60" loc="56:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068fa38"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40694d18" loc="56:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40693010" loc="56:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068fcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="computeCrcDone" ref="0x406a0f10" loc="95:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
          <short>&#10; Signals the completion of a crc computation.</short>
          <long>&#10; Signals the completion of a crc computation.&#10;&#10; @param addr stating address.&#10; @param len number of bytes the crc was computed over.&#10; @param crc the resulting crc value.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068fa38"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068fcc0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x406a0788" loc="95:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068fa38"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x406a09a8" loc="95:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068fcc0"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x406a0ba8" loc="96:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x406a0da0" loc="96:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="computeCrc" ref="0x406a0178" loc="83:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
          <short>&#10; Initiate a crc computation.</short>
          <long>&#10; Initiate a crc computation. On SUCCESS, the&#10; &#60;code>computeCrcDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @param addr starting address.&#10; @param len the number of bytes to compute the crc over.&#10; @parm crc initial CRC value&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068fa38"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068fcc0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40692bb8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068fa38"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x40692dd8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068fcc0"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x406a0010" loc="84:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSize" ref="0x4069f488" loc="103:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
          <short>&#10; Report the usable volume size in bytes (this may be different than&#10; the actual volume size because of metadata overheads).</short>
          <long>&#10; Report the usable volume size in bytes (this may be different than&#10; the actual volume size because of metadata overheads).&#10; @return Volume size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="storage_len_t" ref="0x4068fcc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40692298" loc="67:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param addr starting address of read.&#10; @param 'void* COUNT(len) buf' buffer where read data was placed.&#10; @param len number of bytes read.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockRead"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068fa38"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068fcc0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40693af8" loc="67:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068fa38"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40693cb0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40693ed0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068fcc0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40692128" loc="68:/opt/tinyos-2.1.2/tos/interfaces/BlockRead.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockWrite" loc="42:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <short>&#10; Write interface for the block storage abstraction described in&#10; TEP103.</short>
        <long>&#10; Write interface for the block storage abstraction described in&#10; TEP103.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-06-04 03:00:25 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="syncDone" ref="0x4069ab78" loc="112:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of a sync operation.</short>
          <long>&#10; Signals the completion of a sync operation. All written data is&#10; flushed to non-volatile storage after this event.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4069aa20" loc="112:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x4069b028" loc="71:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation. However, data is not&#10; guaranteed to survive a power-cycle unless a sync operation has&#10; been completed.&#10;&#10; @param addr starting address of write.&#10; @param 'void* COUNT(len) buf' buffer that written data was read from.&#10; @param len number of bytes written.&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068fa38"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068fcc0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x4069d8c0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068fa38"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x4069da78" loc="71:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4069dc98" loc="71:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068fcc0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x4069dea0" loc="72:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x4069b918" loc="83:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate an erase operation.</short>
          <long>&#10; Initiate an erase operation. On SUCCESS, the&#10; &#60;code>eraseDone&#60;/code> event will signal completion of the&#10; operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x4069a010" loc="91:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Signals the completion of an erase operation.</short>
          <long>&#10; Signals the completion of an erase operation.&#10;&#10; @param error SUCCESS if the operation was successful, FAIL if&#10;   it failed&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4069be10" loc="91:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x4068ed88" loc="58:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate a write operation within a given volume.</short>
          <long>&#10; Initiate a write operation within a given volume. On SUCCESS, the&#10; &#60;code>writeDone&#60;/code> event will signal completion of the&#10; operation.&#10; &#60;p>&#10; Between two erases, no byte may be written more than once.&#10; &#10; @param addr starting address to begin write.&#10; @param 'void* COUNT(len) buf' buffer to write data from.&#10; @param len number of bytes to write.&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EINVAL if the parameters are invalid&#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068fa38"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068fcc0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x4068e848" loc="58:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068fa38"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x4068ea00" loc="58:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4068ec20" loc="58:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_len_t" ref="0x4068fcc0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x4069a498" loc="103:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/interfaces/BlockWrite.nc">
          <short>&#10; Initiate a sync operation to finalize writes to the volume.</short>
          <long>&#10; Initiate a sync operation to finalize writes to the volume. A&#10; sync operation must be issued to ensure that data is stored in&#10; non-volatile storage. On SUCCES, the &#60;code>syncDone&#60;/code> event&#10; will signal completion of the operation.&#10;&#10; @return &#10;   &#60;li>SUCCESS if the request was accepted, &#10;   &#60;li>EBUSY if a request is already being processed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ObjectTransfer" loc="39:../../Deluge/ObjectTransfer.nc">
      <documentation loc="36:../../Deluge/DelugePageTransfer.h">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="receive" ref="0x4068b238" loc="42:../../Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40679e58"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x40676408"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x4068cc50" loc="42:../../Deluge/ObjectTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40679e58"/></typename>
            </type-int>
          </variable>
          <variable name="new_size" ref="0x4068cea8" loc="42:../../Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x40676408"/></typename>
            </type-int>
          </variable>
          <variable name="img_num" ref="0x4068b0d0" loc="42:../../Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x4068b780" loc="43:../../Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4068b628" loc="43:../../Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="publish" ref="0x4068c7f0" loc="41:../../Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40679e58"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x40676408"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x4068c228" loc="41:../../Deluge/ObjectTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40679e58"/></typename>
            </type-int>
          </variable>
          <variable name="new_size" ref="0x4068c480" loc="41:../../Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_size_t" ref="0x40676408"/></typename>
            </type-int>
          </variable>
          <variable name="img_num" ref="0x4068c688" loc="41:../../Deluge/ObjectTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4068bb48" loc="45:../../Deluge/ObjectTransfer.nc">
        <interfacedef-ref qname="ObjectTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugePageTransfer" loc="44:../../Deluge/DelugePageTransfer.nc">
      <documentation loc="36:../../Deluge/DelugePageTransfer.h">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x406ab9d0" loc="51:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataAvailable" ref="0x406adeb8" loc="46:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sourceAddr" ref="0x406add60" loc="46:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="suppressMsgs" ref="0x406ac898" loc="48:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40679e58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x406ac740" loc="48:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40679e58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedPage" ref="0x406ab098" loc="49:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40679e58"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x40676920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x406acce8" loc="49:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40679e58"/></typename>
            </type-int>
          </variable>
          <variable name="new_pgNum" ref="0x406acf28" loc="49:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x40676920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setImgNum" ref="0x406ab608" loc="50:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_img_num" ref="0x406ab4b0" loc="50:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransferring" ref="0x406ac2f0" loc="47:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWorkingPage" ref="0x406ad8d0" loc="45:../../Deluge/DelugePageTransfer.nc">
        <interfacedef-ref qname="DelugePageTransfer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40679e58"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x40676920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="new_objid" ref="0x406ad530" loc="45:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="object_id_t" ref="0x40679e58"/></typename>
            </type-int>
          </variable>
          <variable name="new_pgNum" ref="0x406ad770" loc="45:../../Deluge/DelugePageTransfer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="page_num_t" ref="0x40676920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Crc" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
        <short>&#10; Compute the CRC-16 value of a byte array.</short>
        <long>&#10; Compute the CRC-16 value of a byte array.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="seededCrc16" ref="0x406b7b18" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
          <short>&#10; Compute a generic CRC-16 using a given seed.</short>
          <long>&#10; Compute a generic CRC-16 using a given seed.  Used to compute CRC's&#10; of discontinuous data.&#10; &#10; @param startCrc An initial CRC value to begin with&#10; @param 'void* COUNT(len) buf' A pointer to a buffer of data&#10; @param len The length of the buffer&#10; @return The CRC-16 value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Crc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="startCrc" ref="0x406b7618" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x406b77d0" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406b79b0" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crc16" ref="0x406afcb0" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
          <short>&#10; Compute the CRC-16 value of a byte array.</short>
          <long>&#10; Compute the CRC-16 value of a byte array.&#10;&#10; @param   'void* COUNT(len) buf' A pointer to the buffer over which to compute CRC.&#10; @param   len The length of the buffer over which to compute CRC.&#10; @return  The CRC-16 value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Crc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406af970" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406afb50" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Crc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x406fb020" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f5eb0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x406fbb18" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406fb9c0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x406f95b8" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f9460" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x40700380" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404f5a08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40700228" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x406f3cf0" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406f3b98" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x406f6c10" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x406f32f0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406f3198" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x406f2638" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406f22d0" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406f24d8" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x406f1900" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406f1598" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406f17a0" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x406efd38" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406efbe0" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x406ff880" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406ff550" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x406ff720" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404f57b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x406ef200" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406ef0a8" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x406fd018" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f5a08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40700ca0" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40700ea0" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f5a08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x406fd890" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404f5a08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVecUtils" loc="39:../../Deluge/BitVecUtils.nc">
      <documentation loc="33:../../Deluge/BitVecUtils.nc">
        <short>&#10; Provides generic methods for manipulating bit vectors.</short>
        <long>&#10; Provides generic methods for manipulating bit vectors.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="indexOf" ref="0x40706bc0" loc="50:../../Deluge/BitVecUtils.nc">
        <documentation loc="40:../../Deluge/BitVecUtils.nc">
          <short>&#10; Locates the index of the first '1' bit in a bit vector.</short>
          <long>&#10; Locates the index of the first '1' bit in a bit vector.&#10;&#10; @param result     the location of the '1' bit&#10; @param fromIndex  the index to start search for '1' bit&#10; @param bitVec     the bit vector&#10; @param length     the length of the bit vector in bits&#10; @return           &#60;code>SUCCESS&#60;/code> if a '1' bit was found;&#10;                   &#60;code>FAIL&#60;/code> otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pResult" ref="0x407063e0" loc="50:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="fromIndex" ref="0x40706610" loc="50:../../Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
          <variable name="bitVec" ref="0x40706840" loc="51:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40706a50" loc="51:../../Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="printBitVec" ref="0x407042a8" loc="72:../../Deluge/BitVecUtils.nc">
        <documentation loc="65:../../Deluge/BitVecUtils.nc">
          <short>&#10; Generates an ASCII representation of the bit vector.</short>
          <long>&#10; Generates an ASCII representation of the bit vector.&#10;&#10; @param buf     the character array to place the ASCII string&#10; @param bitVec  the bit vector&#10; @param length  the length of the bit vector in bits&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40705ce8" loc="72:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="bitVec" ref="0x40705f08" loc="72:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40704140" loc="72:../../Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="countOnes" ref="0x407057c0" loc="62:../../Deluge/BitVecUtils.nc">
        <documentation loc="53:../../Deluge/BitVecUtils.nc">
          <short>&#10; Counts the number of '1' bits in a bit vector.</short>
          <long>&#10; Counts the number of '1' bits in a bit vector.&#10;&#10; @param result  the number of '1' bits&#10; @param bitVec  the bit vector&#10; @param length  the length of the bit vector in bits&#10; @return        &#60;code>SUCCESS&#60;/code> if the operation completed successfully;&#10;                &#60;code>FAIL&#60;/code> otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVecUtils"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pResult" ref="0x40705218" loc="62:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bitVec" ref="0x40705438" loc="62:../../Deluge/BitVecUtils.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40705658" loc="63:../../Deluge/BitVecUtils.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40788608" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40788608"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40788770" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40788770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40788c58" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40788770"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x407996a8" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x407991a8" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40799ad0" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4078e7c8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4078e7c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4078e930" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4078e930"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4078ac78" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4078e930"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4078b950" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x4078a630" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4078e930"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4078e930"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4078a2e0" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4078e930"/></type-var>
          </variable>
          <variable name="dt" ref="0x4078a4d0" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4078e930"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4078bdc0" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40789138" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4078e930"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4078b010" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4078e930"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4078ee08" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4078e930"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4078b4f0" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x407a6c40" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x407a6210" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x4079cde8" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x407a67d0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x407a6678" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x407a7d70" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x407a7c18" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x407a5218" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x407a50c0" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x407a7280" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x407a77f8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x407a76a0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x407b08a0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x407b2568" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x407b2990" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x407b2e70" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x407b0d60" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x407b03c0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x407a9a70" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x404722c8"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x404724f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x407b2088" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x404722c8"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x404724f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x407a9f10" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x404722c8"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x404724f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x407b8220" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407b8220"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x407b5138" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x407b70f8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407b8718" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407b8220"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407b7500" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x407b5598" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x407b8ca0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407b8220"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x407b8b48" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407b8220"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407b7908" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407b7d00" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x4079eee8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4079eee8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x407ad6b8" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x407aee00" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4079b3f8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4079eee8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x407adc48" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x407adaf0" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x407ab0f8" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407ae1d8" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4079bda0" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x407ad290" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4079b970" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4079eee8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4079b818" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4079eee8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407ae5e0" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407ae9d8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x408a3208" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a6e98" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408a30a8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x408a0dd0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a0a70" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408a0c50" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408a0510" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408a3e48" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a3cf0" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408a2ba0" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a2848" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x408a2a40" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x408e2738" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408e25e0" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x408e1730" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408e15d8" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x408e7e08" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x408e2c48" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x408dd1c8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x408e0e28" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x408dd068" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x408f4f00" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408f4b68" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x408f4da0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x408f39f0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408f3898" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x408f4690" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x408f4010" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x408dee40" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x408f09d8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408f0880" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x408dce00" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408dca68" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x408dcca0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x408f0088" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408eff10" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x408ef9f0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ef658" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x408ef890" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x408ed310" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ed1b8" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x408f5760" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408f5760"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x408f58c8" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408f58c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x408ebb60" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408f58c8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408eba08" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x408e9620" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e94c8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x408eb010" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408f5df8" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40902170" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408f58c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e9d70" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40902010" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408f58c8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x408f6240" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x408f6240"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x4090d510" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4090d3b8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x408f6ed8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x408f6240"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408f6d80" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x408f68b8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408f6760" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4090dcb8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x408f6240"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4090d940" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x4090db58" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x408f6240"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x40906350" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409061f8" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x409261a8" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x40927878" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40927278" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40927d28" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x409268a0" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x40923870" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x404f2300"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40923718" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40913c48" loc="37:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x404f2300"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x409232a0" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x404f2300"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40923148" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40922800" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x404f2300"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40922460" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x409226a0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x404f2300"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40922060" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x404f2300"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40923ca0" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40923ee0" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x404f2300"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x40921350" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x404f2068"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409211f8" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x40921ac0" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x404f2068"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40921730" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40921960" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x404f2068"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40922d70" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40922c18" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40921f00" loc="53:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x404f2068"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x409123d0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x404f2300"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40915e58" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x404f2300"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40912088" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40912268" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x409297f0" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40929490" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40929670" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40910ee0" loc="110:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40912d60" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40912c08" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x409108e8" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40910590" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40910788" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x40952548" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x40937db8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40937c60" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x40949738" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404f5a08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409495e0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x409484b8" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40948360" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x4094b9c0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4094b868" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x4093bc10" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4093bab8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40949170" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4094bdf0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40949010" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x4094b3f0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4094b088" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4094b290" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40949ec0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f5a08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40949b60" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40949d60" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f5a08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x4094fdc0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x4094e478" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
          <long>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x4094da88" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4094d930" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x4094ebc0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4094ea68" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x4094d2e0" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4094d188" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x4096bd00" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x4096b4a0" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x404ebce8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x4096b348" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x404ebce8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4096b8e8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x40947e00" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x409691d8" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x404ebce8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x409662e0" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40966188" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x409688f8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409687a0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40967630" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40967170" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40968df0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40967010" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x40968200" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409680a8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x40967cb0" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40967b58" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x4092acb0" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x4092a7b0" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4092a658" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x409423b8" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40942260" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x40942900" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x40941058" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
          <long>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40942ed8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x40937010" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40938e70" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x4093c4d0" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x4093c018" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4093dc88" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4093dea0" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x4093e010" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40940de8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x4093e6d8" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4093e580" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x4093d028" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4093ec98" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4093eeb0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x40940010" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40940880" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
          <long>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40940558" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40940720" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x4093d740" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
          <long>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4093d5e8" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x40957880" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40957728" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x40959a48" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409598f0" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x4095f9c8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4095f678" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x4095f868" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x4095ed90" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4095ec38" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x40955cc0" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40955960" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40955b60" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x4095e6f8" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4095e5a0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x40957270" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40959f00" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x40957110" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x4095dd20" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4095d9a8" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4095dbc0" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x409554e8" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40955390" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x4095e058" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4095fed8" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x4095bd28" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4095bbd0" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x4095b678" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4095b300" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4095b518" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x4096e4b0" loc="178:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x404f2300"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40953300" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409531a8" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x4096e010" loc="173:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x404f2068"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x40956ea0" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40956b40" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40956d40" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x4095d468" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4095d310" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x40959438" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409590e8" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x409592d8" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x40956090" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40957d18" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x40957f08" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4096ea88" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4096e930" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x4095a540" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4095a218" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4095a3e0" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x4095f1c0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4095f068" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40953a10" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409538b8" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x409566c0" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40956568" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x4095abf0" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4095aa98" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x40939b10" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409397b0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x409399b0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x40938010" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40944c48" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40944af0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x409392e0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40939188" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListeningConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
      <function command="" provided="0" name="getListenLength" ref="0x40960010" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
          <short>&#10; Returns the number of milliseconds the mote should turn on&#10; its radio to check for incoming messages.</short>
          <long>&#10; Returns the number of milliseconds the mote should turn on&#10; its radio to check for incoming messages. This check is &#10; performed at every localWakeInterval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ackRequested" ref="0x409469f0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
          <short>&#10; Returns TRUE if an acknowledgement has been requested for &#10; this message via the PacketAcknowledgements interface.</short>
          <long>&#10; Returns TRUE if an acknowledgement has been requested for &#10; this message via the PacketAcknowledgements interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40946898" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="needsAutoAckRequest" ref="0x409462e0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
          <short>&#10; Returns TRUE if an acknowledgement should be requested&#10; for the message automatically by the LPL code (this should &#10; normally happen for all non-broadcast messages).</short>
          <long>&#10; Returns TRUE if an acknowledgement should be requested&#10; for the message automatically by the LPL code (this should &#10; normally happen for all non-broadcast messages).&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40946188" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x409512e0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40951188" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x40943bc8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40943a70" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x409517d8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x40951e90" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40951d38" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x409ad6d8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x409adca8" loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x409ac4f8" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x409ad2b0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
          <long>&#10; This method is executed atomically. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x409c91e0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409c9088" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x409c82a0" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409c8148" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x409c9b50" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409c97f8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x409c99f0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x409c7260" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
              <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409c70e8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x409dacc8" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x409d9558" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x409d9158" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404f5a08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x409da7d8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f5a08"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x409da470" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404f5a08"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x409da678" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40a2d9a8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40a49010" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40a47b90" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40a476d0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40a48268" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40a48768" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40a404d0" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a4be98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40a40378" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a4be98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40a41158" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40a41818" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a4be98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40a416c0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40a4be98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40a41dc8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40a4be98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40b214f0" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
              <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b21378" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x40b03ce0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b03b88" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40b152c8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40b15170" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x40b15748" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40b1b810" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40b1b6b8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b1bd58" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40b1bc00" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x40b19220" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40b190c8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x40b19f08" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40b19db0" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x40b198f0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40b19798" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40b185e8" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40b18490" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x40b1cb80" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40b1ca28" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404f5c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x40bcb578" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x40bc8010" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40bc8658" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40bc8500" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x40bc8ac8" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x40bcbab8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40bc6038" loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x40bc5168" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bc5010" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x40bc5df8" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40bc58e0" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40bc5788" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x40c44870" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c44718" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40c45540" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c453e8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x40c45d10" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c459d0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40c45bb0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40c442e0" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c44188" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x40c4e538" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40c4e3e0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40c51ee0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40cdeba0" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40cdeba0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40cded08" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40cded08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40cd9348" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40cded08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40cd91f0" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40cded08"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x40cdb350" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40cdbd00" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40cdb8b8" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40cdb760" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x40ce2e38" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x40ce17a0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ce1648" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x40ce0420" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ce02c8" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x40ce1cb0" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40ce0a68" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40ce0910" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40d7ee68" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40d7ee68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x40d789f8" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x40d788a0" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40d78010" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40d7b370" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40d7ee68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40d7bec0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40d7ee68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40d7bd68" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40d7ee68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40d79348" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40d78470" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40d7b8e8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40d7ee68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40d7b790" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40d7ee68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40d79750" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40d79b48" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40d6aba8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40d6a638" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40d6a850" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d6aa40" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40d94298" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40d93ac0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40d93cd8" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40d93ec8" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40d94128" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40d6b010" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40d53e48" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x40d88c40" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40d81308" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40d844b0" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40d818f0" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40d81798" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40d887f0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40d82420" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40d822c8" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40d856d0" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40d85578" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40d864f8" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40d7fa10" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40d7f8b8" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40d85b28" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40d802c0" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40d80168" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40d80b48" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40d82eb0" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40d82d58" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40d7f480" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40d84a40" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40d848e8" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40d86a90" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40d86938" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40d84090" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40d85f20" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40d828d0" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40d81d18" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40d806d0" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40d7f010" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40d84e78" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40d86090" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40d85088" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40d86f00" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40dd1e68" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40dce3e0" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x40df5710" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40df3c10" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40df8e40" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40df2650" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40df21e0" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40df2088" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40df3228" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40df30d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40df2c18" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40df2ac0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40df52e8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x40df37a0" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40df3648" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x40df5c88" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40df5b30" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="VolumeId" loc="37:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="get" ref="0x40f17010" loc="39:/opt/tinyos-2.1.2/tos/lib/net/Deluge/BlockStorageManager/VolumeId.nc">
        <interfacedef-ref qname="VolumeId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="volume_id_t" ref="0x4068f6a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StorageMap" loc="39:../../Deluge/StorageMap.nc">
      <documentation loc="32:../../Deluge/StorageMap.nc">
        <short>&#10; An abstraction to map volume addresses to physical addresses.</short>
        <long>&#10; An abstraction to map volume addresses to physical addresses.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2008-01-25 00:50:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPhysicalAddress" ref="0x40f12210" loc="47:../../Deluge/StorageMap.nc">
        <documentation loc="41:../../Deluge/StorageMap.nc">
          <short>&#10; Get the physical address of a volume address.</short>
          <long>&#10; Get the physical address of a volume address.&#10;&#10; @param addr the volume addres.&#10; @return the physical address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="StorageMap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="storage_addr_t" ref="0x4068fa38"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068fa38"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40f120b8" loc="47:../../Deluge/StorageMap.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="storage_addr_t" ref="0x4068fa38"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45dbVolume" loc="18:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
      <documentation loc="13:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
        <short>&#10; AT45DB interface for managing flash volumes.</short>
        <long>&#10; AT45DB interface for managing flash volumes.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="volumeSize" ref="0x40f3a528" loc="30:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
        <documentation loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
          <short>&#10; Find the flash volume size&#10; </short>
          <long>&#10; Find the flash volume size&#10; @return Flash volume size in pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbVolume"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="remap" ref="0x40f3a010" loc="24:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
        <documentation loc="19:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
          <short>&#10; Map a volume page to the corresponding page in the whole flash&#10; </short>
          <long>&#10; Map a volume page to the corresponding page in the whole flash&#10; @return What flash page this volume page maps to, or &#10;   AT45_MAX_PAGES for invalid volumes&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbVolume"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="volumePage" ref="0x40f3de90" loc="24:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbVolume.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45db" loc="63:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <short>&#10; HAL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HAL for Atmel's AT45DB family of serial dataflash chips. This provides&#10; reasonably high-level operations on AT45DB pages, including automatic&#10; buffer management. Writes are only guaranteed to happen after a flush,&#10; flushAll, sync or syncAll.&#10; &#60;p>&#10; When buffers are flushed to the flash (either explicitly or implicitly),&#10; their contents are checked to ensure the write was succesful. If this&#10; check fails, the flush is retried some number of times. If this fails&#10; more than some number of times, all access to the flash is disabled&#10; (all requests will report FAIL in their completion event).&#10; &#60;p>&#10; This interface only supports one operation at a time - components offering&#10; At45db should use the &#60;code>Resource&#60;/code> interface for resource sharing.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="readDone" ref="0x40f5d470" loc="173:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="168:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a read operation.</short>
          <long>&#10; Signal completion of a read operation. The buffer passed to read&#10; is implictly returned.&#10; @param error SUCCESS for a successful read, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f5d318" loc="173:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x40f61cb8" loc="136:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a sync or syncAll operation.</short>
          <long>&#10; Signal completion of a sync or syncAll operation. &#10; @param error SUCCESS if the sync was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f61b60" loc="136:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="flushDone" ref="0x40f60dd0" loc="154:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="150:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of an flush or flushAll operation.</short>
          <long>&#10; Signal completion of an flush or flushAll operation. &#10; @param error SUCCESS if the flush was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f60c78" loc="154:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40f5fcd0" loc="166:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="156:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Read some data from an AT45DB page.</short>
          <long>&#10; Read some data from an AT45DB page. readDone will be signaled.&#10; @param page Flash page to read from. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40f5f288" loc="166:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40f5f4e8" loc="166:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40f5f930" loc="167:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40f5fb60" loc="167:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40f65ab0" loc="80:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a write operation.</short>
          <long>&#10; Signal completion of a write operation. The buffer passed to write&#10; is implictly returned.&#10; @param error SUCCESS for a successful write, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f65958" loc="80:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="copyPage" ref="0x40f64368" loc="91:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Copy one flash page to another.</short>
          <long>&#10; Copy one flash page to another. copyDone will be signaled. If page&#10; from had been modified, it is first flushed to flash. Page&#10; &#60;code>to&#60;/code> will only actually be written when the buffer holding&#10; it is flushed (see flush, flushAll, sync, syncAll).&#10;&#10; @param from Flash page to copy. Must be less than AT45_MAX_PAGES.&#10; @param to Flash page to overwrite. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="from" ref="0x40f64010" loc="91:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </variable>
          <variable name="to" ref="0x40f64208" loc="91:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x40f622b0" loc="111:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Erase an AT45DB page.</short>
          <long>&#10; Erase an AT45DB page. eraseDone will be signaled.&#10; @param page Flash page to erase. Must be less than AT45_MAX_PAGES.&#10; @param eraseKind How to handle the erase:&#10;   &#60;br>&#60;code>AT45_ERASE&#60;/code>: actually erase the page in the flash chip&#10;   &#60;br>&#60;code>AT45_DONT_ERASE&#60;/code>: don't erase the page in the flash &#10;     chip, but reserve a buffer for this page - subsequent writes to this&#10;     page will be faster because the old contents need not be read&#10;   &#60;br>&#60;code>AT45_PREVIOUSLY_ERASED&#60;/code>: assume the page was previously&#10;     erased in the flash and reserve a buffer for this page - subsequent&#10;     writes to page will be faster because the old contents need not be &#10;     read and the write itself will be faster&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40f64f00" loc="111:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </variable>
          <variable name="eraseKind" ref="0x40f62150" loc="111:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x40f62ae0" loc="116:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="112:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of an erase operation.</short>
          <long>&#10; Signal completion of an erase operation. &#10; @param error SUCCESS if the erase was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f62988" loc="116:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="computeCrcDone" ref="0x40f5cb90" loc="194:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a CRC computation.</short>
          <long>&#10; Signal completion of a CRC computation.&#10; @param error SUCCESS if the CRC was successfully computed, FAIL otherwise&#10; @param crc CRC value (valid only if error == SUCCESS)&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f5c840" loc="194:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
          <variable name="crc" ref="0x40f5ca30" loc="194:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40f602d8" loc="144:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush an AT45DB page from the buffers to the actual flash.</short>
          <long>&#10; Flush an AT45DB page from the buffers to the actual flash. flushDone&#10; will be signaled once the flush has been initiated. If the page is not&#10; in the buffers, flushDone will succeed &#34;immediately&#34;.&#10; @param page Flash page to sync. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40f60180" loc="144:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="syncAll" ref="0x40f61698" loc="131:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush all AT45DB buffers to the actual flash.</short>
          <long>&#10; Flush all AT45DB buffers to the actual flash. syncDone&#10; will be signaled once the flush has been completed and the buffer &#10; contents successfully compared with the flash. &#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flushAll" ref="0x40f607e0" loc="149:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="145:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush all AT45DB buffers to the actual flash.</short>
          <long>&#10; Flush all AT45DB buffers to the actual flash. flushDone&#10; will be signaled once the flushes have been initiated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40f653b0" loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Write some data to an AT45DB page.</short>
          <long>&#10; Write some data to an AT45DB page. writeDone will be signaled.&#10; @param page Flash page to write to. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start writing - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Data to write. The buffer is &#34;returned&#34; at writeDone time.&#10; @param n Number of bytes to write (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40f688a0" loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40f68b00" loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40f65010" loc="74:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40f65240" loc="74:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x40f61168" loc="125:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="118:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Flush an AT45DB page from the buffers to the actual flash.</short>
          <long>&#10; Flush an AT45DB page from the buffers to the actual flash. syncDone&#10; will be signaled once the flush has been completed and the buffer &#10; contents successfully compared with the flash. If the page is not&#10; in the buffers, syncDone will succeed &#34;immediately&#34;.&#10; @param page Flash page to sync. Must be less than AT45_MAX_PAGES.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40f61010" loc="125:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="computeCrc" ref="0x40f5c1a0" loc="187:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="175:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Compute the CRC of some data from an AT45DB page (using the CRC&#10; function from crc.h).</short>
          <long>&#10; Compute the CRC of some data from an AT45DB page (using the CRC&#10; function from crc.h). computeCrcDone will be signaled.&#10; @param page Flash page to read from. Must be less than AT45_MAX_PAGES.&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10; @param baseCrc initial CRC value - use 0 if computing a &#34;standalone&#34;&#10;   CRC, or a previous computeCrc result if computing a CRC over several&#10;   flash pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40f5d948" loc="187:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40f5dba8" loc="187:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x40f5dde8" loc="188:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
          </variable>
          <variable name="baseCrc" ref="0x40f5c030" loc="188:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="copyPageDone" ref="0x40f64a80" loc="96:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
          <short>&#10; Signal completion of a copyPage operation.</short>
          <long>&#10; Signal completion of a copyPage operation. &#10; @param error SUCCESS if the copy was successful, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f64928" loc="96:/opt/tinyos-2.1.2/tos/chips/at45db/At45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="At45dbBlockConfig" loc="19:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <short>&#10; Private interface between the AT45DB implementations of config and block storage&#10;&#10; </short>
        <long>&#10; Private interface between the AT45DB implementations of config and block storage&#10;&#10; @author: David Gay &#60;dgay@acm.org>&#10;</long>
      </documentation>
      <function event="" provided="0" name="npages" ref="0x40f8cc80" loc="50:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Return size of a config volume in pages (half of the actual block)&#10; </short>
          <long>&#10; Return size of a config volume in pages (half of the actual block)&#10; @return Config volume size&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flipped" ref="0x40f5bc38" loc="30:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="26:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Query which half of the block is used by the current config state&#10; </short>
          <long>&#10; Query which half of the block is used by the current config state&#10; @return TRUE for 2nd half, FALSE for 1st half&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isConfig" ref="0x40f5b7f8" loc="24:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Check if this block is a config volumes&#10; </short>
          <long>&#10; Check if this block is a config volumes&#10; @return TRUE for config volumes, FALSE for block volumes&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeHook" ref="0x40f8c0f8" loc="37:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Hook called by block storage just before the start of each write&#10; </short>
          <long>&#10; Hook called by block storage just before the start of each write&#10; @return TRUE to delay the write until &#60;code>writeContinue&#60;/code>&#10;    is called, FALSE to proceed immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="remap" ref="0x40f8a2f8" loc="58:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Map a volume-relative page to an absolute flash page, taking account&#10; of the current flipped status&#10; </short>
          <long>&#10; Map a volume-relative page to an absolute flash page, taking account&#10; of the current flipped status&#10; @param page Volume-relative page&#10; @return Actual flash page for &#60;code>page&#60;/code>&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="page" ref="0x40f8a1a0" loc="58:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeContinue" ref="0x40f8c768" loc="44:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
        <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
          <short>&#10; Continue or abort write suspended as a result of a &#60;code>writeHook&#60;/code>&#10; event&#10; </short>
          <long>&#10; Continue or abort write suspended as a result of a &#60;code>writeHook&#60;/code>&#10; event&#10; @param error SUCCESS to continue write, anything else to abort write &#10;   returning that error code&#10;</long>
        </documentation>
        <interfacedef-ref qname="At45dbBlockConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40f8c610" loc="44:/opt/tinyos-2.1.2/tos/chips/at45db/At45dbBlockConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40fdbeb0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x40fd88f0" loc="73:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40fdb980" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40fd8418" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40fd8ec8" loc="81:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAt45db" loc="23:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <short>&#10; HPL for Atmel's AT45DB family of serial dataflash chips.</short>
        <long>&#10; HPL for Atmel's AT45DB family of serial dataflash chips. &#10; Provides access to all basic AT45DB operations plus operations to &#10; wait for the flash to go idle or finish a comparison. See the AT45DB&#10; family datasheets for full details on these operations.&#10; &#60;p>&#10; This interface only supports one operation at a time.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function event="" provided="0" name="readDone" ref="0x40fc9b68" loc="141:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="137:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when data has been read from the buffer.</short>
          <long>&#10; Signaled when data has been read from the buffer. The data buffer&#10; is &#34;returned&#34;.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitCompare" ref="0x40fd1a08" loc="41:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Wait for a buffer-flash comparison to complete.</short>
          <long>&#10; Wait for a buffer-flash comparison to complete. waitCompareDone will&#10; be signaled when that occurs.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="crcDone" ref="0x40fc72c8" loc="163:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="159:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when CRC has been computed.</short>
          <long>&#10; Signaled when CRC has been computed.&#10; @param computedCrc CRC value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="computedCrc" ref="0x40fc7170" loc="163:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="flushDone" ref="0x40fcea70" loc="79:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when flush command sent (use waitIdle to detect when&#10; flush command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40fc9578" loc="134:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read directly from flash.</short>
          <long>&#10; Read directly from flash. readDone will be signaled.&#10; @param cmd AT45_C_READ_CONTINUOUS or AT45_C_READ_PAGE. When the end of&#10;   a page is read, AT45_C_READ_CONTINUOUS continues on the next page,&#10;   while AT45_C_READ_PAGE continues at the start of the same page.&#10; @param page Page to read from&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40fca880" loc="134:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40fcaa90" loc="134:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40fcacf0" loc="134:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40fc91d0" loc="135:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40fc9400" loc="135:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="erase" ref="0x40fcdeb8" loc="100:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="95:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Erase a flash page.</short>
          <long>&#10; Erase a flash page. eraseDone will be signaled.&#10; @param cmd must be AT45_C_ERASE_PAGE&#10; @param page Page to compare with (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40fcdb48" loc="100:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40fcdd58" loc="100:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40fc6a38" loc="185:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="181:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when data has been written to the buffer.</short>
          <long>&#10; Signaled when data has been written to the buffer. The data buffer&#10; is &#34;returned&#34;.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="waitIdleDone" ref="0x40fd15e8" loc="35:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when the flash is idle.</short>
          <long>&#10; Signaled when the flash is idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="waitCompareDone" ref="0x40fcf058" loc="47:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when the buffer-flash comparison is complete.</short>
          <long>&#10; Signaled when the buffer-flash comparison is complete.&#10; @param compareOk TRUE if the comparison succeeded, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="compareOk" ref="0x40fd1ee0" loc="47:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x40fcc390" loc="106:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when erase command sent (use waitIdle to detect when&#10; erase command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitIdle" ref="0x40fd10c8" loc="30:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="24:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Wait for a &#34;Group A&#34; operation to complete (essentially all non-buffer&#10; operations).</short>
          <long>&#10; Wait for a &#34;Group A&#34; operation to complete (essentially all non-buffer&#10; operations). You should use waitComapre if you are waiting for a&#10; comparison to complete. waitIdleDone will be signaled when the operation&#10; is complete.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40fce4c0" loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Write a buffer to a flash page.</short>
          <long>&#10; Write a buffer to a flash page. flushDone will be signaled.&#10; @param cmd AT45_C_FLUSH_BUFFER1 to write buffer 1 to flash,&#10;   AT45_C_FLUSH_BUFFER2 to write buffer 2 to flash,&#10;   AT45_C_QFLUSH_BUFFER1 to write buffer 1 to flash w/o erase&#10;   (page must have been previously erased),&#10;   AT45_C_QFLUSH_BUFFER2 to write buffer 2 to flash w/o erase&#10;   (page must have been previously erased),&#10; @param page Page to write (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40fce150" loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40fce360" loc="73:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40fc63d8" loc="178:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="165:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Write some data to a flash buffer, and optionally the flash itself.</short>
          <long>&#10; Write some data to a flash buffer, and optionally the flash itself. &#10; writeDone will be signaled.&#10; @param cmd One of AT45_C_WRITE_BUFFER1/2 or AT45_C_WRITE_MEM_BUFFER1/2&#10;   to write respectively to buffer 1/2, or to buffer 1/2 and the &#10;   specified main memory page.&#10; @param page Page to write when cmd is AT45_C_WRITE_MEM_BUFFER1/2&#10; @param offset Offset in page at which to start writing - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Data to write. The buffer is &#34;returned&#34; at writeDone time.&#10; @param n Number of bytes to write (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40fc76e8" loc="178:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40fc78f8" loc="178:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40fc7b58" loc="178:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40fc6030" loc="179:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40fc6260" loc="179:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="compareDone" ref="0x40fcd710" loc="93:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when compare command sent (use waitCompare to detect when&#10; compare command completes and find out comparison result)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compare" ref="0x40fcd218" loc="87:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Compare a page from flash with a buffer.</short>
          <long>&#10; Compare a page from flash with a buffer. compareDone will be signaled.&#10; @param cmd AT45_C_COMPARE_BUFFER1 to compare buffer 1, &#10;   AT45_C_COMPARE_BUFFER2 to compare buffer 2&#10; @param page Page to compare with (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40fcee90" loc="87:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40fcd0b8" loc="87:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crc" ref="0x40fc8a50" loc="157:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="143:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Compute CRC of data in a flash buffer (using the CRC function from crc.h).</short>
          <long>&#10; Compute CRC of data in a flash buffer (using the CRC function from crc.h).&#10; crcDone will be signaled.&#10; @param cmd AT45_C_READ_BUFFER1 to compute CRC from buffer 1,&#10;   AT45_C_READ_BUFFER2 to compute CRC from buffer 2&#10; @param page ignored (reserved for future use)&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10; @param baseCrc initial CRC value - use 0 if computing a &#34;standalone&#34;&#10;   CRC, or a previous crc result if computing a CRC over several&#10;   flash pages&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40fc8010" loc="157:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40fc8220" loc="157:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40fc8480" loc="157:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x40fc86c0" loc="158:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
          </variable>
          <variable name="baseCrc" ref="0x40fc88d8" loc="158:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readBuffer" ref="0x40fca280" loc="119:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="108:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read from a flash buffer.</short>
          <long>&#10; Read from a flash buffer. readDone will be signaled.&#10; @param cmd AT45_C_READ_BUFFER1 to read from buffer 1,&#10;   AT45_C_READ_BUFFER2 to read from buffer 2&#10; @param offset Offset in page at which to start reading - must be between&#10;   0 and AT45_PAGE_SIZE - 1 &#10; @param data Buffer in which to place read data. The buffer is &#34;returned&#34;&#10;   at readDone time.&#10; @param n Number of bytes to read (> 0). offset + n must be &#60;= &#10;   AT45_PAGE_SIZE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40fcc7d0" loc="119:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
          <variable name="offset" ref="0x40fcca30" loc="119:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45pageoffset_t" ref="0x40697110"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40fccee8" loc="120:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x40fca110" loc="120:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fillDone" ref="0x40fcfcf8" loc="61:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Signaled when fill command sent (use waitIdle to detect when&#10; fill command completes)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="fill" ref="0x40fcf830" loc="55:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
          <short>&#10; Read a page from flash into a buffer.</short>
          <long>&#10; Read a page from flash into a buffer. fillDone will be signaled.&#10; @param cmd AT45_C_FILL_BUFFER1 to read into buffer 1, &#10;   AT45_C_FILL_BUFFER2 to read into buffer 2&#10; @param page Page to read (must be less than AT45_MAX_PAGES)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45db"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x40fcf4c0" loc="55:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
          <variable name="page" ref="0x40fcf6d0" loc="55:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45db.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="at45page_t" ref="0x40698db8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAt45dbByte" loc="24:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
        <short>&#10; Interface between generic byte-at-a-time AT45DB HPL implementation and&#10; its platform specific aspects.</short>
        <long>&#10; Interface between generic byte-at-a-time AT45DB HPL implementation and&#10; its platform specific aspects.&#10; &#60;p>&#10; Each platform must provide its own HPL implementation for its AT45DB&#10; flash chip. To simplify this task, this directory provides a generic HPL&#10; implementation (HplAt45dbByteC) which can easily be used to build an&#10; AT45DB HPL by connecting it to a byte-at-a-time SPI interface, and an&#10; implementation of the operations of this interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCompareStatus" ref="0x41045500" loc="42:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; This command may be called immediately after idle is signaled.</short>
          <long>&#10; This command may be called immediately after idle is signaled. It&#10; must report the flash's current compare status.&#10; @return TRUE if the last compare succeeded, FALSE if it failed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitIdle" ref="0x41048bb0" loc="31:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="25:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Wait for the flash chip to report that it is idle.</short>
          <long>&#10; Wait for the flash chip to report that it is idle. This command is&#10; called immediately after sending a status request command to the&#10; flash, so it is sufficient to wait for the flash's data pin to go&#10; high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="idle" ref="0x41045070" loc="35:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Signaled when the flash chip is idle.</short>
          <long>&#10; Signaled when the flash chip is idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="select" ref="0x410459a0" loc="47:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Assert the flash's select pin.</short>
          <long>&#10; Assert the flash's select pin.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="deselect" ref="0x41045da8" loc="52:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/at45db/HplAt45dbByte.nc">
          <short>&#10; Deassert the flash's select pin.</short>
          <long>&#10; Deassert the flash's select pin.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAt45dbByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="48:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x410db960" loc="48:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410db960"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x410d7168" loc="60:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410db960"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x410d7010" loc="60:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410db960"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="44:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x410dc3d0" loc="44:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410dc3d0"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x410d93c8" loc="69:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x410dc878" loc="55:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410dc3d0"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x410dceb8" loc="64:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410dc3d0"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x410dcd60" loc="64:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410dc3d0"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x41108e80" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x41108d08" loc="47:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x41107a60" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41107500" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x411076f0" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x411078f8" loc="48:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x41106258" loc="50:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x41108538" loc="45:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x41107e88" loc="49:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x41108900" loc="46:/opt/tinyos-2.1.2/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x4110e6f0" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4110ebb8" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="57:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x411240f8" loc="90:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x41125cd8" loc="85:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x41125830" loc="80:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x41129f20" loc="68:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x41125428" loc="74:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="40:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x411841a8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x41183718" loc="69:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x411835c0" loc="69:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x41183cd8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x41183b80" loc="75:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x41184b60" loc="57:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x41184a08" loc="57:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x411824c0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x41182180" loc="82:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x41182360" loc="82:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x411845b0" loc="50:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
          <long>&#10; Set all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x41183168" loc="63:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x41183010" loc="63:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x41182940" loc="88:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NetProg" loc="45:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
        <short>&#10; Top level interface for network programming integration with&#10; applications.</short>
        <long>&#10; Top level interface for network programming integration with&#10; applications.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="programImageAndReboot" ref="0x411a9ef8" loc="64:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
          <short>&#10; Reboot into the image specified by &#60;code>imageAddr&#60;/code>.</short>
          <long>&#10; Reboot into the image specified by &#60;code>imageAddr&#60;/code>. This&#10; assumes that an image is present into the external flash&#10; at the &#60;code>imageAddr&#60;/code> address.&#10;&#10; @param imageAddr  Address in external flash&#10; @return        &#60;code>FAIL&#60;/code> if the reboot command fails to &#10;                complete, does not return, otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NetProg"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imageAddr" ref="0x411a9da0" loc="64:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40118848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reboot" ref="0x411a9870" loc="53:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/net/Deluge/extra/NetProg.nc">
          <short>&#10; Reboot the node.</short>
          <long>&#10; Reboot the node.&#10;&#10; @return  Does not return.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NetProg"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="InternalFlash" loc="43:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
        <short>&#10; A generic interface to read from and write to the internal flash of&#10; a microcontroller.</short>
        <long>&#10; A generic interface to read from and write to the internal flash of&#10; a microcontroller.&#10;&#10; @author Jonathan Hui &#60;jwhui@cs.berkeley.edu>&#10; @author Prabal Dutta &#60;prabal@cs.berkeley.edu> (Port to T2)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x411d68d0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
          <short>&#10; Read &#60;code>size&#60;/code> bytes starting from &#60;code>addr&#60;/code> and&#10; return them in &#60;code>buf&#60;/code>.</short>
          <long>&#10; Read &#60;code>size&#60;/code> bytes starting from &#60;code>addr&#60;/code> and&#10; return them in &#60;code>buf&#60;/code>.&#10;&#10; @param   addr A pointer to the starting address from which to read.&#10; @param   'void* COUNT(size) buf'  A pointer to the buffer into which read bytes are&#10;               placed.&#10; @param   size The number of bytes to read.&#10; @return  SUCCESS if the bytes were successfully read.&#10;          FAIL if the call could not be completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="InternalFlash"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x411d63b0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x411d6568" loc="56:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x411d6768" loc="56:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x411d5788" loc="68:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
          <short>&#10; Write &#60;code>size&#60;/code> bytes from &#60;code>buf&#60;/code> into internal&#10; flash starting at &#60;code>addr&#60;/code>.</short>
          <long>&#10; Write &#60;code>size&#60;/code> bytes from &#60;code>buf&#60;/code> into internal&#10; flash starting at &#60;code>addr&#60;/code>.&#10;&#10; @param   addr A pointer to the starting address to which to write.&#10; @param   'void* COUNT(size) buf'  A pointer to the buffer from which bytes are read.&#10; @param   size The number of bytes to write.&#10; @return  SUCCESS if the bytes were successfully written.&#10;          FAIL if the call could not be completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="InternalFlash"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x411d5268" loc="68:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x411d5420" loc="68:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x411d5620" loc="68:/opt/tinyos-2.1.2/tos/interfaces/InternalFlash.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugeMetadata" loc="10:../../Deluge/DelugeMetadata.nc">
      <documentation loc="1:../../Deluge/DelugeMetadata.nc">
        <short>&#10;  An interface for obtaining the identification data of an&#10;  image.</short>
        <long>&#10;  An interface for obtaining the identification data of an&#10;  image. The pointer returned by readDone will be destroyed by the&#10;  next read.&#10;&#10;  @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10;  @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x411fd9a0" loc="12:../../Deluge/DelugeMetadata.nc">
        <interfacedef-ref qname="DelugeMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x411fd848" loc="12:../../Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x411fa370" loc="13:../../Deluge/DelugeMetadata.nc">
        <interfacedef-ref qname="DelugeMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:84" alignment="I:1"><nx_struct-ref name="DelugeIdent" ref="0x4063aa88"/>
                <typename><typedef-ref name="DelugeIdent" ref="0x4066e1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x411fdd80" loc="13:../../Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
          <variable name="ident" ref="0x411fa010" loc="13:../../Deluge/DelugeMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:84" alignment="I:1"><nx_struct-ref name="DelugeIdent" ref="0x4063aa88"/>
                <typename><typedef-ref name="DelugeIdent" ref="0x4066e1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x411fa208" loc="13:../../Deluge/DelugeMetadata.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DelugeVolumeManager" loc="37:../../Deluge/DelugeVolumeManager.nc">
      <documentation loc="32:../../Deluge/DelugeVolumeManager.nc">
        <short>&#10; </short>
        <long>&#10; @author Razvan Musaloiu-E. &#60;razvanm@cs.jhu.edu>&#10; @author Chieh-Jan Mike Liang &#60;cliang4@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="erase" ref="0x411f9168" loc="39:../../Deluge/DelugeVolumeManager.nc">
        <interfacedef-ref qname="DelugeVolumeManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x411f9010" loc="39:../../Deluge/DelugeVolumeManager.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eraseDone" ref="0x411f96a8" loc="40:../../Deluge/DelugeVolumeManager.nc">
        <interfacedef-ref qname="DelugeVolumeManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="imgNum" ref="0x411f9550" loc="40:../../Deluge/DelugeVolumeManager.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x412b43a0" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x412b4010" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x412b4240" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x412b50c8" loc="15:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x412b5998" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x412b5620" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:49" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40506db8"/>
                <typename><typedef-ref name="message_t" ref="0x40504b60"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x412b5838" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x412a3368" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
          <long> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x412a9ed0" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x412b09b0" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x412a8698" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x412a7790" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x412a7638" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x412a8bc0" loc="79:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x412a8168" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x412a8010" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x412a7c98" loc="100:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
          <long>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x412a7138" loc="85:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x412af970" loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x412ad010" loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x412af360" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x412af208" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x412ad748" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x412ad5f0" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x412b18d0" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x412aa168" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x412aa010" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x412aa800" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x412aa6a8" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x41344480" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x41344130" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x41344320" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x41342908" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x413427b0" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x41384170" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x41342dc0" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x41384010" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x41343cc0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x41383010" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x41384a98" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x41384c88" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x41384e80" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x413422f8" loc="72:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x41343370" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x41344d90" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x41343010" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401181e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x41343208" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x413712d8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x41371180" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x41371b70" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x41371808" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x41371a10" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x41364210" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x413659b0" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x413a77e0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x413a7688" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x41364ec8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x41365138" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x41365578" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x41365df0" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40423c68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x41364610" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x404036e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x41364b18" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x413649c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x413a72b0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40117b70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
